swagger: '2.0'
info:
  version: v1
  title: Chargify
  description: |-
    ## Welcome

    This is a place to put general notes and extra information, for internal use.

    To get started designing/documenting this API, select a version on the left. # Title
    No Description
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  <<api_key>>:
    type: basic
paths:
  '/subscriptions/{subscription_id}/adjustments.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-adjustments-json
      summary: Create an Adjustment
      tags:
        - Adjustment
        - Adjustments
      description: |-
        ## Create an Adjustment via API

        Creating an adjustment requires a valid, live subscription. The subscription must be referenced by `id`. For more information on creating a subscription, please see our [Subscriptions Introduction.](#docTextSection:aDNGencbmFC7h2NEW)

        In order to create an adjustment, pass an amount and an optional memo. The amount can be specified by either the `amount` parameter or the `amount_in_cents` parameter. The amount can be specified as a positive or a negative number. 

        Optionally, the `adjustment_method` parameter can be specified.

        ## Create an Adjustment via UI

        For more information on how to record an adjustment via the UI, please see our documentation [here.](http://help.chargify.com/subscriptions/adjustments.html#how-to-record-an-adjustment)

        ## Scenarios for adjustments

        | Scenario 1 | To create an Adjustment on a Subscription to increase the balance by a certain dollar amount, include the following to your request: | `"amount":"4.00"`                                            |
        |------------|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|
        | Scenario 2 | To increase the Subscription balance by a certain amount of cents, use the following attribute in your request:                      | `"amount_in_cents":100`                                      |
        | Scenario 3 | To decrease the Subscription balance by a certain dollar amount, the request must contain:                                           | `"amount":"-4.00"`                                           |
        | Scenario 4 | To decrease the Subscription balance by a certain amount of cents, use:                                                              | `"amount_in_cents":"-400"`                                   |
        | Scenario 5 | To set the Subscription balance to an exact dollar amount, include the following attributes to the request:                          | `"adjustment_method":"target", "amount":"100.00"`            |
        | Scenario 6 | To set the Subscription balance to an exact positive amount of cents, the request must contain the following attributes:             | `"adjustment_method":"target",` `"amount_in_cents":"10000"`  |
        | Scenario 7 | To set the Subscription balance to an exact negative amount of cents, use the following attributes in the request:                   | `"adjustment_method":"target",` `"amount_in_cents":"-10000"` |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/adjustments/request'
            example:
              adjustment:
                amount: '75'
                memo: Recording usage for May 2020
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/adjustments/response'
          examples:
            application/json:
              adjustment:
                amount: '75'
                memo: Recording usage for May 2020
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-adjustmentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: true
          statusCode: 201
  '/subscriptions/{subscription_id}/components/{component_id}/allocations.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
      - name: component_id
        in: path
        description: The Component ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-components-component_id-allocations-json
      summary: Create Allocation for On/Off Component
      tags:
        - 'Components: On/Off Toggling'
      description: |-
        ## Create Allocation for On/Off Component

        For full documentation on configuring allocations for subscriptions, please view the [Allocations](#docTextSection:Fupxh2M7fACmdwsDm) endpoint documentation.

        After a subscription has been created, you may enable of disable the on/off componentat any time. To do this, use the [Allocations](#endpoint:3stsG5oibfdivng9j) endpoint.

        The method creates a new allocation, setting the current allocated quantity for the Component and recording a memo.

        **Notice**: Allocations can only be updated for Quantity and On/Off Components.

        ## Input Fields

        | **Input Fields** | **Description** |
        |----------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | quantity |For On/Off components, use `1 `for on and `0` for off. By default, this is an integer.   |
        | memo | (optional) A memo to record along with the allocation |
        | proration_upgrade_scheme | (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided. |
        | proration_downgrade_scheme | (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided. |
        | payment_collection_method | (optional, default `automatic`) For subscriptions on invoice billing, when `proration_upgrade_scheme` is set to either `prorate-attempt-capture` or `full-price-attempt-capture` and `payment_collection_method` is set to invoice, a mid-period invoice will be created from any charges that are a result of the allocation change. The charge will not appear on the invoice created at the next renewal. For subscriptions on statement billing, this option is ignored. |

        ## Output Fields

        | Output Fields              | Description                                                                                                                                                             |
        |----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | component_id               | The integer component ID for the allocation. This references a component that you have created in your Product setup                                                    |
        | subscription_id            | The integer subscription ID for the allocation. This references a unique subscription in your Site                                                                      |
        | quantity                   | In the case of a on/off component, the quantity will be either `1` for enabled, or `0` for off.                                                                                                               |
        | previous_quantity          | The allocated quantity that was in effect before this allocation was created. In the case of an on/off component, it will be either `1` for enabled, or `0` for off.                                                                                            |
        | memo                       | The memo passed when the allocation was created                                                                                                                         |
        | proration_upgrade_scheme   | The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.                                                       |
        | proration_downgrade_scheme | The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.                                                      |
        | timestamp                  | The time that the allocation was recorded, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format and UTC timezone, i.e. `2012-11-20T22:00:37Z`                                                               |
        | payment                    | If capture was attempted for a mid-period allocation, includes `amount_in_cents`, `success`, `memo` and `id` attributes describing the payment, or null if no card was on file. |

        ## On/Off Component Example

        The following example will toggle an on/off component to ON. A value of `0` will toggle the component to OFF.

        ```
        {
          "allocation": {
            "quantity": 5,
            "memo": "Recoding component purchase of Acme Support"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/onoff/toggling-on-off-request'
            example:
              allocation:
                component_id: 399850
                quantity: 0
                price_point_id: 130350
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/onoff/toggling-on-off-response'
          examples:
            application/json:
              - allocation:
                  component_id: 399853
                  subscription_id: 18342261
                  quantity: 0
                  previous_quantity: 1
                  memo: null
                  timestamp: '2017-07-10T21:00:38Z'
                  proration_upgrade_scheme: no-prorate
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 121003
                  previous_price_point_id: 121003
                  payment: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-components-componentid-allocationsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-allocations-json
      summary: Read Allocations for a Subscription's Quantity-based Components
      tags:
        - Allocations
      description: |-
        ## Read Allocations for Quantity-based Component Usage for a Subscription

        Use this endpoint to read the previously allocated components for a subscription.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-allocations-for-a-subscriptions-quantity-based-components'
          examples:
            application/json:
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '100.0'
                  previous_quantity: '50.0'
                  memo: Third record
                  timestamp: '2018-01-03T15:15:41Z'
                  proration_upgrade_scheme: prorate-delay-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '50.0'
                  previous_quantity: '10.0'
                  memo: Second record
                  timestamp: '2018-01-03T15:15:13Z'
                  proration_upgrade_scheme: full-price-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '10.0'
                  previous_quantity: '0.0'
                  memo: First record
                  timestamp: '2018-01-03T15:14:46Z'
                  proration_upgrade_scheme: full-price-delay-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentid-allocationsjson
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{customer_id}/management_link.json':
    parameters:
      - name: customer_id
        in: path
        description: The Customer ID.
        required: true
        type: integer
    get:
      operationId: GET_portal-customers-customer_id-management_link-format
      summary: Read the Management Link
      tags:
        - Billing Portal
        - incomplete
      description: |-
        ## Read the Management Link

        This method will provide to the API user the exact URL required for a subscriber to access the Billing Portal.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/billing-portal-get-response'
          examples:
            application/json:
              url: 'https://www.billingportal.com/manage/19804639/1517596469/bd16498719a7d3e6'
              fetch_count: 1
              created_at: '2018-02-02T18:34:29Z'
              new_link_available_at: '2018-02-17T18:34:29Z'
              expires_at: '2018-04-08T17:34:29Z'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Billing Portal is not enabled for this customer.
        '429':
          description: ''
          schema:
            $ref: '#/definitions/billing-portal/request'
          examples:
            application/json:
              errors:
                error: Too many requests for this customer's management link
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_portal-customers-customer_id-management_link-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/portal/customers/{customer_id}/enable.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: integer
    post:
      operationId: POST_portal-customers-customer_id-enable-json
      summary: Enabling Billing Portal for Customer
      tags:
        - Billing Portal
      description: |-
        ## Enabling Billing Portal for Customer

        You can enable Billing Portal access for a Customer, with the option of sending the Customer an Invitation email at the same time.

        ## When the Billing Portal is already enabled for a Customer

        ```json
        {
          "errors": [ "Portal is already enabled for this customer." ]
        }
        ```
      parameters:
        - name: auto_invite
          in: query
          description: 'When set to 1, an Invitation email will be sent to the Customer. When set to 0, or not sent, an email will not be sent.'
          type: boolean
        - name: body
          in: body
          schema:
            $ref: '#/definitions/billing-portal-request-enable-post'
      responses:
        '200':
          description: ''
          schema:
            type: object
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_portal-customers-customerid-enablejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{id}/enable.json':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      operationId: POST_portal-customers-id-enable-json
      summary: Enabling Billing Portal and Sending Invite Simultaneously
      tags:
        - Billing Portal
      description: '## Enabling Billing Portal and Sending Invite Simultaneously'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/billing-portal-request-enable-post'
        - $ref: '#/parameters/trait:autoInvite:auto_invite'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/billing-portal-simul-response-post'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Portal is already enabled for this customer.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_portal-customers-id-enablejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{customer_id}/invitations/revoke.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: integer
    delete:
      operationId: DELETE_portal-customers-customer_id-invitations-revoke-json
      summary: Revoke Billing Portal Invitation for Customer
      tags:
        - Billing Portal
      description: |-
        ## Revoke Billing Portal Invitation for Customer

        You can revoke a customer's Billing Portal invitation.

        If you attempt to revoke an invitation when the Billing Portal is already disabled for a Customer, you will receive a 422 error response.

        ## Limitations

        This endpoint will only return a JSON response.
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              last_sent_at:
                type: string
              last_accepted_at:
                type: string
              uninvited_count:
                type: integer
          examples:
            application/json:
              last_sent_at: Not Invited
              last_accepted_at: Invite Revoked
              uninvited_count: 8
        '422':
          description: ''
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_portal-customers-customerid-invitations-revokejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/{plural_kind}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
      - name: plural_kind
        in: path
        required: true
        type: string
        enum:
          - metered_components
          - quantity_based_components
          - on_off_components
    post:
      operationId: POST_product_families-product_family_id-plural_kind-json
      summary: Create Component within a Product Family
      tags:
        - Component
        - Components
      description: "## Create Component within a Product Family\n\nThis request will create a component under the specified product family. Please note that you may not edit components via API. To do so, please log into the application.\n\n## Plural Kind  \n\nIn order to create a component via API, a `plural_kind` is required. Plural kind is defined as the endpoint for the type of component you wish to create.\n\nUse one of the following:\n\n+ metered_components\n+ quantity_based_components\n+ on_off_components\n\n## Metered Component Example\n\n```\n{\n  \"metered_component\": {\n    \"name\": \"Text messages\",\n    \"unit_name\": \"text message\",\n    \"taxable\": false,\n    \"pricing_scheme\": \"stairstep\",\n    \"prices\": [\n      {\n        \"starting_quantity\": 1,\n        \"unit_price\": 1,\n        \"component\": null\n      }\n    ]\n  }\n}\n```\n\n## Quantity Based Example\n\n**Per Unit Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Component\",\n\t\t\"description\": \"Example of JSON per-unit component example\",\n\t\t\"pricing_scheme\": \"per_unit\",\n\t\t\"unit_price\": \"10\",\n\t\t\"taxable\": \"1\"\n\t},\n\t\"display_on_hosted_page\": \"1\",\n\t\"allow_fractional_quantities\": \"1\",\n\t\"public_signup_page_ids\": [\"323397\"]\n}\n```\n\n**Stairstep Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON stairstep example\",\n\t\t\"pricing_scheme\": \"stairstep\",\n\t\t\"unit_price\": \"\",\n\t  \"taxable\": \"1\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"100\",\n\t\t\t\t\"unit_price\": \"50\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"101\",\n\t\t\t\t\"ending_quantity\": \"200\",\n\t\t\t\t\"unit_price\": \"10\"\n\t\t\t},\n\t\t\t\"display_on_hosted_page\": \"1\",\n\t\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\t\"public_signup_page_ids\": [\"323397\"]\n\t\t}\n\t}\n}\n```\n\n**Volume Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON volume component example\",\n\t\t\"pricing_scheme\": \"volume\",\n\t\t\"taxable\": \"1\",\n\t\t\"unit_price\": \"\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"10\",\n\t\t\t\t\"unit_price\": \"10\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"11\",\n\t\t\t\t\"ending_quantity\": \"20\",\n\t\t\t\t\"unit_price\": \"5\"\n\t\t\t}\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\"public_signup_page_ids\": [\"323397\"]\n\t},\n\t\"commit\": \"Create Component\",\n\t\"product_family_id\": \"997233\"\n}\n```\n\n**Tiered Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON for tiered quantity based component\",\n\t  \"taxable\": \"1\",\n\t\t\"pricing_scheme\": \"tiered\",\n\t\t\"unit_price\": \"\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"20\",\n\t\t\t\t\"unit_price\": \"50\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"21\",\n\t\t\t\t\"ending_quantity\": \"40\",\n\t\t\t\t\"unit_price\": \"25\"\n\t\t\t}\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\"public_signup_page_ids\": [\"323397\"]\n\t}\n}\n```\n\n\n## On/Off Component\n\n```\n{\n\t\"on_off_component\": {\n\t\t\"name\": \"Annual Support Services\",\n\t\t\"description\": \"Prepay for support services\",\n\t\t\"taxable\": \"1\",\n\t\t\"price_attributes\": {\n\t\t\t\"unit_price\": \"100.00\",\n\t\t\t\"starting_quantity\": \"0\"\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"public_signup_page_ids\": [\"320495\"]\n}\n```"
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/component/create'
            example:
              metered_component:
                name: Text messages
                unit_name: text message
                taxable: false
                pricing_scheme: stairstep
                prices:
                  - starting_quantity: 1
                    unit_price: 1
                    component: null
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              component:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  pricing_scheme:
                    type: string
                  unit_name:
                    type: string
                  unit_price:
                    type: 'null'
                  product_family_id:
                    type: integer
                  price_per_unit_in_cents:
                    type: 'null'
                  kind:
                    type: string
                  archived:
                    type: boolean
                  taxable:
                    type: boolean
                  description:
                    type: 'null'
                  prices:
                    type: array
                    items:
                      type: object
                      properties:
                        starting_quantity:
                          type: integer
                        ending_quantity:
                          type: 'null'
                        unit_price:
                          type: string
          examples:
            application/json:
              component:
                id: 292609
                name: Text messages
                pricing_scheme: stairstep
                unit_name: text message
                unit_price: null
                product_family_id: 528484
                price_per_unit_in_cents: null
                kind: metered_component
                archived: false
                taxable: false
                description: null
                prices:
                  - starting_quantity: 1
                    ending_quantity: null
                    unit_price: '1.0'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Name: cannot be blank.'
                - 'Unit name: cannot be blank.'
                - 'Pricing scheme: cannot be blank.'
                - At least 1 price bracket must be defined
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-pluralkindjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/quantity_based_components.{format}':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
      - name: format
        in: path
        required: true
        type: string
    post:
      operationId: POST_product_families-product_family_id-quantity_based_components-format
      summary: Create Component with Price Points
      tags:
        - Components
      description: |-
        ## Create a Component with Price Points

        This endpoint will allow you to create a componenent within Chargify that has multiple price points.

        ## Component Documentation

        For more information on components, please see our documentation [here.](https://help.chargify.com/products/product-components.html)
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/create-component-with-price-points-request'
            example:
              quantity_based_component:
                name: Widget
                description: widget
                unit_name: widget
                pricing_scheme: volume
                default_price_point_name: Initial
                default_price_point_handle: initial-handle
                prices:
                  - starting_quantity: '1'
                    ending_quantity: '100'
                    unit_price: '5.00'
                  - starting_quantity: '101'
                    unit_price: '4.00'
                price_points:
                  - name: Wholesale
                    handle: wholesale-handle
                    pricing_scheme: tiered
                    prices:
                      - starting_quantity: '1'
                        ending_quantity: '2'
                        unit_price: '1'
                public_signup_page_ids:
                  - '1'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/create-response-post'
          examples:
            application/json:
              component:
                id: 292609
                name: Text messages
                pricing_scheme: stairstep
                unit_name: text message
                unit_price: null
                product_family_id: 528484
                price_per_unit_in_cents: null
                kind: metered_component
                archived: false
                taxable: false
                description: null
                default_price_point_id: 75
                prices:
                  - starting_quantity: 1
                    ending_quantity: null
                    unit_price: '1.0'
                price_point_count: 2
                price_points_url: /components/292609/price_points
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-quantitybasedcomponentsformat
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/components.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
    get:
      operationId: GET_product_families-product_family_id-components-json
      summary: Read Components for a Product Family
      tags:
        - incomplete
        - Component
        - Components
      description: |-
        ## Read Components for a Product Family

        This request will return a list of components for a particular product family.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/read-components-for-a-product-family-output'
          examples:
            application/json:
              - component:
                  id: 399850
                  name: $1.00 component
                  pricing_scheme: per_unit
                  unit_name: Component
                  unit_price: '1.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: quantity_based_component
                  archived: false
                  taxable: false
                  description: Component
                  default_price_point_id: 121000
                  prices:
                    - id: 630687
                      component_id: 399850
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '1.0'
                      price_point_id: 121000
                      formatted_unit_price: $1.00
                  price_point_count: 2
                  price_points_url: 'https://general-goods.chargify.com/components/399850/price_points'
                  tax_code: null
              - component:
                  id: 399853
                  name: Annual Support Services
                  pricing_scheme: null
                  unit_name: on/off
                  unit_price: '100.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: on_off_component
                  archived: false
                  taxable: true
                  description: Prepay for support services
                  default_price_point_id: 121003
                  price_point_count: 4
                  price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                  tax_code: D0000000
              - component:
                  id: 386937
                  name: Cancellation fee
                  pricing_scheme: null
                  unit_name: on/off
                  unit_price: '35.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: on_off_component
                  archived: false
                  taxable: false
                  description: ''
                  default_price_point_id: 108307
                  price_point_count: 1
                  price_points_url: 'https://general-goods.chargify.com/components/386937/price_points'
                  tax_code: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-componentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/components/{component_id}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
      - name: component_id
        in: path
        description: 'A component identifier.  Either a Chargify ID or the handle you have attached to the component, prefixed with "handle:"'
        required: true
        type: integer
        pattern: '\Ahandle:[a-z0-9][a-z0-9\-_:]*\z/'
    get:
      operationId: GET_product_families-product_family_id-components-component_id-json
      summary: Read Specific Component for a Product Family
      tags:
        - Component
        - Components
      description: |-
        ## Read a Specific Component for a Product Family

        This request will return information regarding a component from a specific product family.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/list-specific-component-product-family-get'
          examples:
            application/json:
              component:
                id: 399853
                name: Annual Support Services
                pricing_scheme: null
                unit_name: on/off
                unit_price: '100.0'
                product_family_id: 997233
                price_per_unit_in_cents: null
                kind: on_off_component
                archived: false
                taxable: true
                description: Prepay for support services
                default_price_point_id: 121003
                price_point_count: 4
                price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                tax_code: D0000000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-components-componentidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /components/lookup.json:
    get:
      operationId: GET_components-lookup-json
      summary: Lookup Specific Component by Handle
      tags:
        - Component
        - Components
      description: |-
        ## Lookup a Specific Component by Handle

        This request will return information regarding a component having the handle you provide. You can identify your components with a handle so you don't have to save or reference the IDs we generate.
      parameters:
        - name: handle
          in: query
          description: The handle of the component you wish to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/list-specific-component-product-family-get'
          examples:
            application/json:
              component:
                id: 399853
                name: Annual Support Services
                pricing_scheme: null
                unit_name: on/off
                unit_price: '100.0'
                product_family_id: 997233
                price_per_unit_in_cents: null
                kind: on_off_component
                archived: false
                taxable: true
                description: Prepay for support services
                default_price_point_id: 121003
                price_point_count: 4
                price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                tax_code: D0000000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_components-lookupjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/components/handle:{component_id}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
      - name: component_id
        in: path
        description: |
          either an integer id or a handle, prefixed by 'handle:'
        required: true
        type: integer
        pattern: '                                                 '
    get:
      operationId: 'GET_product_families-product_family_id-components-handle:component_id-json'
      summary: Read Specific Component for a Product Family via Handle or Id
      tags:
        - Component
        - Components
      description: |-
        ## Read a Specific Component for a Product Family

        This request will return information regarding a component from a specific product family.  You can now pass either an integer as the `component_id` or the component handle as a string prefixed by `handle:`

        ### Simplified example using component_id as handle:<string>

        ```
        curl mysub.chargify.com/product_families/999/component/handle:foo
        ```

        ### Simplified example using component_id as integer

        ```
        curl mysub.chargify.com/product_families/999/component/999
        ```

        both examples assume component with id 999 has handle 'foo'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-specific-component-output'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-components-handlecomponentidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components/{component_id}.json':
    parameters:
      - name: subscription_id
        in: path
        description: The ID of the Subscription from which you want to get a listing of applied Components.
        required: true
        type: integer
      - name: component_id
        in: path
        description: The ID of the Component you want to retrieve information about.
        required: true
        type: integer
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-json
      summary: Reading Current Quantity
      tags:
        - 'Components: On/Off Toggling'
      description: |-
        ## Reading Current Quantity

        You can query the API to receive the current quantity for a Quantity Component by sending a GET request.

        ## Querying data via Chargify gem

        You can also query the current quantity via the [official Chargify Gem.]( http://github.com/chargify/chargify_api_ares)

        ```# First way
        component = Chargify::Subscription::Component.find(1, :params => {:subscription_id => 7})
        puts component.allocated_quantity
        # => 23

        # Second way
        component = Chargify::Subscription.find(7).component(1)
        puts component.allocated_quantity
        # => 23
        ```

        ## Handle lookup support

         You can now pass either an integer as the component_id or the component handle as a string prefixed by handle:
         
        ```
        # Example 1
        curl mysub.chargify.com/subscriptions/999/components/1.json

        # Example 2
        curl mysub.chargify.com/subscriptions/999/components/handle:myhandle
        ```
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/quantity/reading-current-quantity-response'
          examples:
            application/json:
              component:
                component_id: 399850
                subscription_id: 18342261
                allocated_quantity: 29
                name: Bronze Subscriptions 123
                kind: quantity_based_component
                unit_name: Bronze Subscriptions
                pricing_scheme: per_unit
                price_point_id: 121000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components.json':
    parameters:
      - name: subscription_id
        in: path
        description: The ID of the Subscription from which you want to get a listing of applied Components.
        required: true
        type: integer
    get:
      operationId: GET_subscriptions-subscription_id-components-format
      summary: Read Components for a Subscription
      tags:
        - Component
        - Component Line Items
      description: |-
        ## Read Components for a Subscription

        This request will list a subscription's applied components.

        ## Archived Components

        When requesting to list components for a given subscription, if the subscription contains **archived** components they will be listed in the server response.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/components/read-components-get'
          examples:
            application/json:
              - {}
              - component:
                  unit_name: Text messages
                  name: text_messages
                  kind: metered_component
                  component_id: 98322708341
                  subscription_id: 38855254509
                  allocated_quantity: 1500
                  unit_balance: 5000
              - component:
                  enabled: true
                  subscription_id: 30336331837
                  unit_balance: 5000
                  name: text messages
              - {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-components-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components/{component_id}/usages.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-components-component_id-usages-json
      summary: Create Usage for Subscription
      tags:
        - 'Components: Metered Usage'
      description: |-
        ## Create Usage for Subscription

        This request will record metered usage for a subscription.

        ## Price Point ID usage

        If you are using price points, for metered components, Chargify gives you the option to specify a price point in your request.

        You do not need to specify a price point ID. If a price point is not included, the default price point for the component will be used when the usage is recorded.

        If an invalid `price_point_id` is submitted, the endpoint will return an error. 

        ## Recording zero usage

        In the event that you would like to record an amount of `0` for a subscriber's component, you must substract the amount from the current usage.

        Example:

        Currently recorded:

        ```{
          "usage": {
            "quantity": 5000,
            "memo": "My memo"
          }
        }
        ```

        To record a zero amount, POST the following payload:

        ```{
          "usage": {
            "quantity": -5000,
            "memo": "My memo"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/metered/create-usage-input'
            example:
              usage:
                quantity: 1000
                price_point_id: '149416'
                memo: My memo
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/metered/create-usage-output'
          examples:
            application/json:
              usage:
                id: 138522957
                memo: My memo
                created_at: '2017-11-13T10:05:32-06:00'
                price_point_id: 149416
                quantity: 1000
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Price point: could not be found.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-components-componentid-usagesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-usages-json
      summary: Read Usage for a Subscription's Metered Component
      tags:
        - 'Components: Metered Usage'
      description: |-
        ## Read Usage for Metered Component Usage for a Subscription

        Use this endpoint to read the previously recorded components for a subscription.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-usage-for-a-subscriptions-metered-usage'
          examples:
            application/json:
              - usage:
                  id: 143497499
                  memo: Fourth record
                  created_at: '2018-01-03T08:53:52-06:00'
                  price_point_id: 149416
                  quantity: 200
              - usage:
                  id: 143497490
                  memo: Third record
                  created_at: '2018-01-03T08:53:36-06:00'
                  price_point_id: 149416
                  quantity: 50
              - usage:
                  id: 143497474
                  memo: Second record
                  created_at: '2018-01-03T08:52:46-06:00'
                  price_point_id: 149416
                  quantity: 20
              - usage:
                  id: 143497461
                  memo: First record
                  created_at: '2018-01-03T08:52:29-06:00'
                  price_point_id: 149416
                  quantity: 10
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentid-usagesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions.json:
    post:
      operationId: POST_subscriptions-json
      summary: Create Subscription with Multiple Coupon Codes
      tags:
        - 'Components: Metered Usage'
      description: |-
        ## Create Subscription Multiple Coupon Codes

        This method allows you to create a Subscription within Chargify with multiple coupon codes applied at signup.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/create-subscription-with-multiple-coupon-input'
            example:
              subscription:
                product_handle: basic
                customer_attributes:
                  first_name: Joe
                  last_name: Example
                  email: joe@example.com
                credit_card_attributes:
                  full_number: '1'
                  expiration_month: '10'
                  expiration_year: '2020'
                coupon_codes:
                  - STACK_COMP_100_DOLLAR
                  - STACK_COMP_75_PERCENT
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/create-subscription-with-multiple-coupon-input'
          examples:
            application/json:
              subscription:
                id: 19730041
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-11-13T12:51:27-06:00'
                created_at: '2017-11-13T12:51:26-06:00'
                updated_at: '2017-11-13T12:51:27-06:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2017-12-13T12:51:26-06:00'
                next_assessment_at: '2017-12-13T12:51:26-06:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: null
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2017-11-13T12:51:26-06:00'
                previous_state: active
                signup_payment_id: 211813093
                signup_revenue: '225.00'
                delayed_cancel_at: null
                coupon_code: STACK_COMP_100_DOLLAR
                total_revenue_in_cents: 22500
                product_price_in_cents: 100000
                product_version_number: 1
                payment_type: credit_card
                referral_code: null
                coupon_use_count: 1
                coupon_uses_allowed: 1
                reason_code: null
                automatically_resume_at: null
                coupon_codes:
                  - STACK_COMP_100_DOLLAR
                  - STACK_COMP_75_PERCENT
                customer:
                  id: 19311096
                  first_name: Joe
                  last_name: Example
                  organization: null
                  email: joe@example.com
                  created_at: '2017-11-13T12:51:26-06:00'
                  updated_at: '2017-11-13T12:51:28-06:00'
                  reference: null
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: '2017-11-13T12:51:28-06:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2017-11-13T12:51:28-06:00'
                  cc_emails: null
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2017-11-07T09:20:12-06:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: null
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/hbwtd98j3hk2/basic'
                credit_card:
                  id: 13380483
                  first_name: Joe
                  last_name: Example
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 10
                  expiration_year: 2020
                  customer_id: 19311096
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: null
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-json
      summary: Read Subscriptions for a Site
      tags:
        - Subscriptions
      description: |-
        ## Read Subscriptions for a Site

        This method will return an array of subscriptions from a Site. Pay close attention to query string filters and pagination in order to control responses from the server.

        ## Search for a subscription

        Use the query strings below to search for a subscription using the criteria available. The return value will be an array.
      parameters:
        - name: ''
          in: query
          type: string
        - $ref: '#/parameters/trait:subscriptionQueryString:page'
        - $ref: '#/parameters/trait:subscriptionQueryString:per_page'
        - $ref: '#/parameters/trait:subscriptionQueryString:state'
        - $ref: '#/parameters/trait:subscriptionQueryString:product'
        - $ref: '#/parameters/trait:subscriptionQueryString:product_revision_number'
        - $ref: '#/parameters/trait:subscriptionQueryString:coupon'
        - $ref: '#/parameters/trait:subscriptionQueryString:date_field'
        - $ref: '#/parameters/trait:subscriptionQueryString:start_date'
        - $ref: '#/parameters/trait:subscriptionQueryString:end_date'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscriptions/list-subscriptions-output'
          examples:
            application/json:
              - subscription:
                  id: 15236915
                  state: active
                  balance_in_cents: 0
                  total_revenue_in_cents: 14000
                  product_price_in_cents: 1000
                  product_version_number: 7
                  current_period_ends_at: '2016-11-15T14:48:10-05:00'
                  next_assessment_at: '2016-11-15T14:48:10-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-14T14:48:12-05:00'
                  expires_at: null
                  created_at: '2016-11-14T14:48:10-05:00'
                  updated_at: '2016-11-14T15:24:41-05:00'
                  cancellation_message: null
                  cancellation_method: null
                  cancel_at_end_of_period: null
                  canceled_at: null
                  current_period_started_at: '2016-11-14T14:48:10-05:00'
                  previous_state: active
                  signup_payment_id: 162269766
                  signup_revenue: '260.00'
                  delayed_cancel_at: null
                  coupon_code: 5SNN6HFK3GBH
                  payment_collection_method: automatic
                  snap_day: null
                  customer:
                    first_name: Curtis
                    last_name: Test
                    email: curtis@example.com
                    cc_emails: null
                    organization: ''
                    reference: null
                    id: 14714298
                    created_at: '2016-11-14T14:48:10-05:00'
                    updated_at: '2016-11-14T14:48:13-05:00'
                    address: 123 Anywhere Street
                    address_2: ''
                    city: Boulder
                    state: CO
                    zip: '80302'
                    country: US
                    phone: ''
                    verified: false
                    portal_customer_created_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_sent_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 3792003
                    name: $10 Basic Plan
                    handle: basic
                    description: lorem ipsum
                    accounting_code: basic
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: day
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: false
                    require_credit_card: false
                    created_at: '2016-03-24T13:38:39-04:00'
                    updated_at: '2016-11-03T13:03:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 281054
                        url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
                      - id: 281240
                        url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
                      - id: 282694
                        url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
                    taxable: false
                    version_number: 7
                  credit_card:
                    id: 10191713
                    payment_type: credit_card
                    first_name: Curtis
                    last_name: Test
                    masked_card_number: XXXX-XXXX-XXXX-1
                    card_type: bogus
                    expiration_month: 1
                    expiration_year: 2026
                    billing_address: 123 Anywhere Street
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: null
                    billing_country: ''
                    billing_zip: '80302'
                    current_vault: bogus
                    vault_token: '1'
                    customer_vault_token: null
                    customer_id: 14714298
                  payment_type: credit_card
                  referral_code: w7kjc9
                  next_product_id: null
                  coupon_use_count: 1
                  coupon_uses_allowed: 1
              - subscription:
                  id: 15189649
                  state: canceled
                  balance_in_cents: 15000
                  total_revenue_in_cents: 10000
                  product_price_in_cents: 10000
                  product_version_number: 1
                  current_period_ends_at: '2017-11-10T13:14:00-05:00'
                  next_assessment_at: '2017-11-10T13:14:00-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-10T13:14:02-05:00'
                  expires_at: null
                  created_at: '2016-11-10T13:14:00-05:00'
                  updated_at: '2016-11-14T11:14:01-05:00'
                  cancellation_message: ''
                  cancellation_method: merchant_ui
                  cancel_at_end_of_period: false
                  canceled_at: '2016-11-14T11:14:01-05:00'
                  current_period_started_at: '2016-11-10T13:14:00-05:00'
                  previous_state: canceled
                  signup_payment_id: 161794022
                  signup_revenue: '100.00'
                  delayed_cancel_at: null
                  coupon_code: null
                  payment_collection_method: invoice
                  snap_day: null
                  customer:
                    first_name: Frankie
                    last_name: Bravo
                    email: testfrankietest.com
                    cc_emails: ''
                    organization: ''
                    reference: null
                    id: 14543712
                    created_at: '2016-11-02T10:16:17-04:00'
                    updated_at: '2016-11-14T09:54:39-05:00'
                    address: ''
                    address_2: ''
                    city: ''
                    state: ''
                    zip: ''
                    country: ''
                    phone: '5555551212'
                    verified: true
                    portal_customer_created_at: '2016-11-02T10:16:19-04:00'
                    portal_invite_last_sent_at: '2016-11-10T13:14:03-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 4038269
                    name: Annual Product
                    handle: annual-product
                    description: ''
                    accounting_code: ''
                    price_in_cents: 10000
                    interval: 12
                    interval_unit: month
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: true
                    require_credit_card: true
                    created_at: '2016-09-28T09:54:05-04:00'
                    updated_at: '2016-09-28T09:54:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 297032
                        url: 'https://general-goods.chargify.com/subscribe/b3hjynp5ss52/annual-product'
                    taxable: false
                    version_number: 1
                  credit_card:
                    id: 10188522
                    payment_type: credit_card
                    first_name: Frank
                    last_name: Test
                    masked_card_number: null
                    card_type: null
                    expiration_month: null
                    expiration_year: null
                    billing_address: 123 Montana Way
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: CO
                    billing_country: US
                    billing_zip: '80302'
                    current_vault: bogus
                    vault_token: '123456789'
                    customer_vault_token: null
                    customer_id: 14543712
                  payment_type: bank_account
                  referral_code: hspss6
                  next_product_id: null
                  coupon_use_count: null
                  coupon_uses_allowed: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/allocations.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-sub_id-allocations-json
      summary: Create Multiple Allocations
      tags:
        - Allocation
        - 'Components: Quantity Allocations'
      description: |-
        ## Create Multiple Allocations

        Creates multiple allocations, setting the current allocated quantity for each of the components and recording a memo. The charges and/or credits that are created will be rolled up into a single total which is used to determine whether this is an upgrade or a downgrade.  If a proration scheme is provided, it will be used. If not, the site's default component proration scheme will be used.

        This endpoint only responds to JSON. It is not available for XML.

        ## Input Fields

        | Input Fields | Description |
        |----------------------------|------------------------------------------------------------------------------------------------------------------|
        | allocations | An array of allocations, each containing a `component_id`, `quantity`, and `memo` |
        | proration_upgrade_scheme | (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided. |
        | proration_downgrade_scheme | (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided. |

        ## Output Fields

        An array of allocation objects with the following fields:

        | Output Fields | Desscription |
        |----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | component_id | The integer component ID for the allocation. This references a component that you have created in your Product setup |
        | subscription_id | The integer subscription ID for the allocation. This references a unique subscription in your Site |
        | quantity | The allocated quantity set in to effect by the allocation.By default this should be an integer. If decimal allocations are enabled for the component, it will be a decimal number. For On/Off components, use 1 for on and 0 for off. |
        | previous_quantity | The allocated quantity that was in effect before this allocation was created |
        | memo | The memo passed when the allocation was created |
        | proration_upgrade_scheme | The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period. |
        | proration_downgrade_scheme | The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period. |
        | timestamp | The time that the allocation was recorded, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format and UTC timezone, i.e. `2012-11-20T22:00:37Z` |
        | payment | If capture was attempted for a mid-period allocation, includes `amount_in_cents`, `success`, `memo` and `id` attributes describing the payment, or null if no card was on file. |

        ## JSON: Fetch second page (up to 50 more) of allocations

        Response is an array, ordered most recent first. In this example, there are no results in page 2 (response is an empty array) indicating that all allocations for this component and subscription have already been fetched.

        **Request**

        ```json
        curl -u <api_key>:X https://<subdomain>.chargify.com/subscriptions/2585595/components/11960/allocations.json
        ```

        **Response**

        ```
        []
        ```

        ## Response Status Codes

        | 201 Created              | Allocation created successfully                                                         |
        |--------------------------|-----------------------------------------------------------------------------------------|
        | 422 Unprocessable Entity | Invalid inputs provided: inspect the errors in the response for details                 |
        | 401 Unauthorized         | Authentication credentials were incorrect                                               |
        | 404 Not Found            | Either no component with the given comp_id, or no subscription with given sub_id exists |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/allocation/multiple-request-post'
            example:
              proration_upgrade_scheme: prorate-attempt-capture
              proration_downgrade_scheme: no-prorate
              allocations:
                - component_id: 123
                  quantity: 10
                  memo: foo
                - component_id: 456
                  quantity: 5
                  memo: bar
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/allocation/multiple-response-post'
          examples:
            application/json:
              - allocation:
                  component_id: 193159
                  subscription_id: 15540611
                  quantity: 10
                  previous_quantity: 0
                  memo: foo
                  timestamp: '2016-12-08T19:09:15Z'
                  proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  payment:
                    amount_in_cents: 1451
                    success: true
                    memo: 'Payment for: Prorated component allocation changes.'
                    id: 165473487
              - allocation:
                  component_id: 277221
                  subscription_id: 15540611
                  quantity: 5
                  previous_quantity: 0
                  memo: bar
                  timestamp: '2016-12-08T19:09:15Z'
                  proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  payment:
                    amount_in_cents: 1451
                    success: true
                    memo: 'Payment for: Prorated component allocation changes.'
                    id: 165473487
        '401':
          description: ''
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Quantity: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-sub_id-allocations-json
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/allocations/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST-preview-allocation
      summary: Preview Allocations
      tags:
        - Allocation
        - 'Components: Quantity Allocations'
      description: "## Preview an Allocation\n\nChargify offers the ability to preview a potential subscription's **quantity-based** or **on/off** component allocation in the middle of the current billing period.  This is useful if you want users to be able to see the effect of a component operation before actually doing it.\n\n## Input Fields\n\n| Input Fields                 \t| Description                                                                                                                           \t|\n|------------------------------\t|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\t|\n| allocations                   \t| An array of allocations, each containing a component_id, quantity, and memo                                                                                                                                                                                                                                                                                                             \t|\n| proration_upgrade_scheme   \t| (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.                                                                                                                                                                                                                                                                                                                                                              \t|\n| proration_downgrade_scheme \t| (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.                                                                                                                                                \n\n## Output Fields\n\n### An allocation preview object with the following fields:\n\n| Output Fields              | Description                                                                                                                                                             |\n|----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| start_date               | The start date of the allocation preview.                                                    |\n| end_date            | The end date of the allocation preview.                                                                      |\n| period_type          | The period type for this preview.  This is always 'prorated' for mid- period allocations.                                                                                            |\n| subtotal_in_cents                       | The subtotal for this preview.                                                                                                                         |\n| total_tax_in_cents   |         The total tax in cents.                                               |\n| total_discount_in_cents |    The total discount in cents.                                                   |\n| total_in_cents                  |    The total in cents.                                                            |\n| existing_balance_in_cents                    |  The existing balance in cents.  |\n| direction | The direction of this allocation.  Valid values are 'upgrade' or 'downgrade'. |\n| proration_scheme | The proration scheme for this allocation. |\n| line_items | An array of line_items, each containing transaction_type, kind, amount_in_cents, memo, discount_amount_in_cents, taxable_amount_in_cents,component_id|\n\n## Response Status Codes\n\n| 201 Created              | Allocation created successfully                                                         |\n|--------------------------|-----------------------------------------------------------------------------------------|\n| 422 Unprocessable Entity | Invalid inputs provided: inspect the errors in the response for details                 |\n| 401 Unauthorized         | Authentication credentials were incorrect                                               |\n| 404 Not Found            | Either no component with the given comp_id, or no subscription with given sub_id exists |"
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              proration_upgrade_scheme:
                type: string
              proration_downgrade_scheme:
                type: string
              allocations:
                type: array
                items:
                  type: object
                  properties:
                    component_id:
                      type: integer
                    quantity:
                      type: integer
                    memo:
                      type: string
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              allocation_preview:
                type: object
                properties:
                  start_date:
                    type: string
                  end_date:
                    type: string
                  subtotal_in_cents:
                    type: integer
                  total_tax_in_cents:
                    type: integer
                  total_discount_in_cents:
                    type: integer
                  total_in_cents:
                    type: integer
                  direction:
                    type: string
                  proration_scheme:
                    type: string
                  line_items:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_type:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        memo:
                          type: string
                        discount_amount_in_cents:
                          type: integer
                        taxable_amount_in_cents:
                          type: integer
                        component_id:
                          type: integer
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    kind:
                      type: string
                    component_id:
                      type: integer
                    'on':
                      type: string
                    message:
                      type: string
          examples:
            application/json:
              errors:
                - kind: allocation
                  component_id: 379512
                  'on': base
                  message: Allocations can only be updated for quantity and on/off components.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST-preview-allocation
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_components-component_id-price_points-json
      summary: Create Price Point
      tags:
        - 'Components: Price Points'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-request'
            example:
              price_point:
                name: Wholesale
                handle: wholesale-handle
                pricing_scheme: stairstep
                prices:
                  - starting_quantity: '1'
                    ending_quantity: '100'
                    unit_price: '5.00'
                  - starting_quantity: '101'
                    unit_price: '4.00'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: null
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_components-componentid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_components-component_id-price_points-json
      summary: Read Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        ## Read Price Points

        Use this endpoint to read current price points that are associated with a component.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/list-price-points-response'
          examples:
            application/json:
              price_points:
                - id: 80
                  default: false
                  name: Wholesale Two
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: wholesale-two
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 121
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '5.0'
                - id: 81
                  default: false
                  name: MSRP
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: msrp
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 122
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_components-componentid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/bulk.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_components-component_id-price_points-bulk-json
      summary: Create Bulk Price Points
      tags:
        - 'Components: Price Points'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/bulk-create-price-points-request'
            example:
              price_points:
                - name: Wholesale
                  handle: wholesale
                  pricing_scheme: per_unit
                  prices:
                    - starting_quantity: 1
                      unit_price: 5
                - name: MSRP
                  handle: msrp
                  pricing_scheme: per_unit
                  prices:
                    - starting_quantity: 1
                      unit_price: 4
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/list-price-points-response'
          examples:
            application/json:
              price_points:
                - id: 80
                  default: false
                  name: Wholesale Two
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: wholesale-two
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 121
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '5.0'
                - id: 81
                  default: false
                  name: MSRP
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: msrp
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 122
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_components-componentid-pricepoints-bulkjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-json
      summary: Update Price Point
      tags:
        - 'Components: Price Points'
      description: |-
        When updating a price point, it's prices can be updated as well by creating new prices or editing / removing existing ones.

        Passing in a price bracket without an `id` will attempt to create a new price. 

        Including an `id` will update the corresponding price, and including the `_destroy` flag set to true along with the `id` will remove that price.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/update-price-point-request'
            example:
              price_point:
                name: Default
                prices:
                  - id: 1
                    ending_quantity: 100
                    unit_price: 5
                  - id: 2
                    _destroy: 'true'
                  - starting_quantity: 101
                    unit_price: 4
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}/default.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-default-json
      summary: Promoting Price Point to Default
      tags:
        - 'Components: Price Points'
      description: |-
        Sets a new default price point for the component. This new default will apply to all new subscriptions going forward - existing subscriptions will remain on their current price point.

        See [Price Points Documentation](https://help.chargify.com/products/product-components.html#price-points) for more information on price points and moving subscriptions between price points.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/create-response-post'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointid-defaultjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}.{format}':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
      - name: format
        in: path
        required: true
        type: string
    delete:
      operationId: DELETE_components-component_id-price_points-price_point_id-format
      summary: Archive Price Point
      tags:
        - 'Components: Price Points'
      description: A price point can be archived at any time. Subscriptions using a price point that has been archived will continue using it until they're moved to another price point.
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              price_point:
                type: object
                properties:
                  id:
                    type: integer
                  default:
                    type: boolean
                  name:
                    type: string
                  pricing_scheme:
                    type: string
                  component_id:
                    type: integer
                  handle:
                    type: string
                  archived_at:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  prices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        component_id:
                          type: integer
                        starting_quantity:
                          type: integer
                        ending_quantity:
                          type:
                            - integer
                            - 'null'
                        unit_price:
                          type: string
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: '2017-07-06T15:04:00-04:00'
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_components-componentid-pricepoints-pricepointidformat
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}/unarchive.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-unarchive-json
      summary: Unarchive Price Point
      tags:
        - 'Components: Price Points'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: null
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointid-unarchivejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/price_points.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-price_points-json
      summary: Bulk Update a Subscription's Component's Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        ## Bulk Update a Subscription's Component's Price Points

        Updates the price points on one or more of a subscription's components.

        The `price_point` key can take either a:
        1. Price point id (integer)
        2. Price point handle (string)
        3. `"_default"` string, which will reset the price point to the component's current default price point.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/bulk-update-a-subscription-s-component-s-price-points'
            example:
              components:
                - component_id: 997
                  price_point: 1022
                - component_id: 998
                  price_point: wholesale-handle
                - component_id: 999
                  price_point: _default
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/bulk-update-a-subscription-s-component-s-price-points'
          examples:
            application/json:
              components:
                - component_id: 997
                  price_point: 1022
                - component_id: 998
                  price_point: wholesale-handle
                - component_id: 999
                  price_point: _default
        '422':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                price_point:
                  type:
                    - integer
                    - string
                message:
                  type: string
          examples:
            application/json:
              - component_id: 997
                price_point: 10023
                message: Price Point does not belong to Component
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/price_points/reset.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-price_points-reset-json
      summary: Bulk Reset a Subscription's Component's Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        Resets all of a subscription's components to use the current default.

        **Note**: this will update the price point for all of the subscription's components, even ones that have not been allocated yet.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/bulk-reset-a-subscription-s-component-s-price-points'
          examples:
            application/json:
              subscription:
                id: -80293620
                state: mollit exercitation ipsum
                trial_started_at: null
                trial_ended_at: null
                activated_at: nostrud nulla et
                created_at: qui L
                updated_at: in veniam aute in
                expires_at: null
                balance_in_cents: 50504234
                current_period_ends_at: Lorem anim eu
                next_assessment_at: adipisicing ullamco
                canceled_at: null
                cancellation_message: mol
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: Duis qui Excepteur laboris reprehenderit
                snap_day: null
                cancellation_method: eiusmod ipsum pariatur et adipisicing
                current_period_started_at: Ut quis non
                previous_state: 'occaecat proident sunt cillum '
                signup_payment_id: -45156092
                signup_revenue: do aliquip ea
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: -49740952
                product_price_in_cents: 87617888
                product_version_number: 13656635
                payment_type: null
                referral_code: null
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: -26151968
                customer:
                  id: 15208337
                  first_name: ipsum culpa in labore eiusmod
                  last_name: esse
                  organization: null
                  email: ex eiusmod
                  created_at: ad occaecat cillum
                  updated_at: ut aute proident est
                  reference: laboris ea cupidatat
                  address: null
                  address_2: null
                  city: id eiusmod proident
                  state: magna eiusmod anim non
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: null
                  portal_invite_last_accepted_at: reprehenderit labore voluptate
                  verified: null
                  portal_customer_created_at: nisi aute reprehenderit Excepteur Duis
                  cc_emails: eiusmod sunt
                  tax_exempt: true
                product:
                  id: -74447756
                  name: eu mollit nulla ut aute
                  handle: esse dolor anim
                  description: Lorem ut et non
                  accounting_code: nisi
                  request_credit_card: false
                  expiration_interval: null
                  expiration_interval_unit: fugiat aute do culpa dolor
                  created_at: officia sint
                  updated_at: sed
                  price_in_cents: -4151649
                  interval: 20680876
                  interval_unit: nisi qui incididunt
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: sit
                  archived_at: null
                  require_credit_card: true
                  return_params: magna eu
                  taxable: true
                  update_return_url: exercitation in
                  tax_code: Excepteur aliqua sunt in
                  initial_charge_after_trial: true
                  version_number: 41642597
                  update_return_params: dolore labore
                  product_family:
                    id: -5356997
                    name: officia amet Lorem proident enim
                    description: Duis
                    handle: ea dolore dolore sunt
                    accounting_code: null
                  public_signup_pages: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-pricepoints-resetjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/{resource}/{resource_id}/metadata.json':
    parameters:
      - name: resource
        in: path
        required: true
        type: string
        enum:
          - customers
          - subscriptions
      - name: resource_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_resource-resource_id-metadata-json
      summary: Create Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Create Metadata

        This method will create a metadata name and populate the metdata field on-the-fly.

        ### Subscription or Customer Resource

        Please pay special attention to the resource  you use when creating metadata. 

        ## Customer Metadata Disclaimer

        If you create metadata for the customer, it will not be visible in the subscription in the application. Customer metadata can only be updated via API.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              metadata:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
            example:
              metadata:
                - name: Color
                  value: Blue
                - name: Something
                  value: Useful
        - $ref: '#/parameters/trait:metadataValue:value'
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_resource-resource_id-metadata-json
      summary: Update Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Update Metadata

        This method allows you to update the existing metadata associated with a subscription or customer. 

        ## URL Construction

        Please note that as you replace the `resource` portion of the URL, use one of the following formations

        ```
        /subscriptions/{subscription_id}/metadata.{format}
        ```

        OR

        ```
        /customers/{customer_id}/metadata.{format}
        ```
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  current_name:
                    type: string
                  name:
                    type: string
                  value:
                    type: string
            example:
              metadata:
                current_name: Color
                name: Shirt Color
                value: Blue
        - $ref: '#/parameters/trait:metadataValue:value'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/update-metadata-output'
          examples:
            application/json:
              - value: Blue
                resource_id: 15479934
                name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_resource-resource_id-metadata-json
      summary: Delete Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Delete Metadata

        This method removes the metadata from the subscriber/customer cited.

        ## Query String Usage

        For instance if you wanted to delete the metadata for customer 99 named weight you would request:

        ```
        https://acme.chargify.com/customers/99/metadata.json?name=weight
        ```

        ## Successful Response

        For a success, there will be a code `200` and the plain text response `true`.

        ## Unsuccessful Response

        When a failed response is encountered, you will receive a `404` response and the plain text response of `true`.
      parameters:
        - name: name
          in: query
          type: string
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions/metadata.json:
    get:
      operationId: GET_subscriptions-metadata-json
      summary: Read Metadata for Subscribers
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata by Subscription

        This method will provide you information on usage of metadata across your subscribers. 

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/read-metadata-subscribers-output'
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: The quick brown fox
                  resource_id: 15479934
                  name: Comments
                - value: L
                  resource_id: 15479934
                  name: T-Shirt Size
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /customers/metadata.json:
    get:
      operationId: GET_customers-metadata-json
      summary: Read Metadata for Customers
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Site 

        This endpoint will list the number of pages of metadata information that are contained within a site.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              total_count:
                type: integer
              current_page:
                type: integer
              total_pages:
                type: integer
              per_page:
                type: integer
              metadata:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                    resource_id:
                      type: integer
                    name:
                      type: string
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: Red
                  resource_id: 19186044
                  name: Shirt Color
                - value: Blue
                  resource_id: 19186076
                  name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{customer_id}/metadata.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_customers-customer_id-metadata-json
      summary: Read Metadata for a Customer
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Customer

        This endpoint will list the metadata associated with a customer. Additionally, the endpoint will return the number of pages of metadata information that are contained within a site.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/read-metadata-for-a-site'
          examples:
            application/json:
              total_count: 1
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: Red
                  resource_id: 19186044
                  name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-customerid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/metadata.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-metadata-json
      summary: Read Metadata for a Subscriber
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Subscriber

        This request will list all of the metadata belonging to a particular subscription.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/list-metadata-for-a-subscriber-output'
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: The quick brown fox
                  resource_id: 15479934
                  name: Comments
                - value: L
                  resource_id: 15479934
                  name: T-Shirt Size
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/{resource}/metafields.json':
    parameters:
      - name: resource
        in: path
        description: ''
        required: true
        type: string
        enum:
          - subscriptions
          - customers
    post:
      operationId: POST_resource-metafields-json
      summary: Create Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Create Metafields

        Use the following method to create metafields for your Site. Metafields can be populated with metadata after the fact.

        ## Create Multiple Metafields 

        In order to create multiple metafields in one request, use the following JSON format:

        ```
        {
            "metafields": [
              {"name": "Color"},
              {"name": "Brand"}
            ]
          }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/metadata/create-metadata-input'
            example:
              metafields:
                name: Color
                scope:
                  hosted:
                    - '1'
                    - '2'
                    - '3'
                  csv: '0'
                  invoices: '1'
                  statements: '1'
                  portal: '0'
        - $ref: '#/parameters/trait:metafieldsNameRequiredCurrentNameOptional:name'
        - $ref: '#/parameters/trait:metafieldsNameRequiredCurrentNameOptional:current_name'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/create-metafields-output'
          examples:
            application/json:
              - name: Color
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
              - name: Brand
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_resource-metafields-json
      summary: Read Metafields Stats for Site
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Read Metafields

        This endpoint lists associated with a Site. The metafield description and usage is contained in the response. 

        ## Data Count 

        When `data_count` is encountered in the response for metafields, this indicates the amount of subscriptions this metafield has been applied to in Chargify.
      parameters:
        - $ref: '#/parameters/trait:metafieldsNameOptional:name'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/list-metafields-output'
          examples:
            application/json:
              total_count: 1
              current_page: 1
              total_pages: 1
              per_page: 20
              metafields:
                - name: Pants
                  scope:
                    hosted: []
                    csv: '0'
                    statements: '0'
                    invoices: '0'
                    portal: '0'
                  data_count: 1
                  input_type: text
                  enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_resource-metafields-json
      summary: Update Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Update Metafields

        Use the following method to update metafields for your Site. Metafields can be populated with metadata after the fact.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/metafields/update-metafields-input'
            example:
              metafields:
                current_name: shirt
                name: new-shirt
                scope:
                  hosted:
                    - '1'
                    - '1'
                    - '1'
                  csv: '1'
                  invoices: '1'
                  statements: '1'
                  portal: '0'
        - $ref: '#/parameters/trait:metafieldsNameRequired:name'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/update-metafields-output'
          examples:
            application/json:
              - name: Shirts
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_resource-metafields-json
      summary: Delete Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Delete Metafields

        Use the following method to delete a metafield. This will remove the metafield from the Site. 

        Additionally, this will remove the metafield and associated metadata with all Subscriptions on the Site.

        ## Server Response

        The server will response with code `200` for successful, and `404` for unsuccessful.

        ## Example

        If you wanted to delete the metafield for customers named strength you would request:

        ```https://my-subdomain.chargify.com/customers/metafields.json?name=strength```
      parameters:
        - $ref: '#/parameters/trait:metafieldsNameRequired:name'
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons.json:
    post:
      operationId: POST_coupons-format
      summary: Create  Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Create a Coupon

        This request will create a coupon, based on the provided information.

        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:
        `{ "<product/component_id>": boolean_value }`

        The coupon's `code` may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): “%”, “@”, “+”, “-”, “_”, and “.”
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupons/create-coupon-input'
            example:
              coupon:
                name: 15% off
                code: 15OFF
                description: 15% off for life
                percentage: '15'
                allow_negative_balance: 'false'
                recurring: 'false'
                end_date: '2012-08-29T12:00:00-04:00'
                product_family_id: '2'
                stackable: 'true'
                compounding_strategy: compound
              restricted_products:
                '1': true
              restricted_components:
                '1': true
                '2': false
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_coupons-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
    get:
      operationId: GET_coupons-format
      summary: Read Coupons for the Default Product Family for a Site
      tags:
        - Coupon
        - incomplete
        - 'Coupons: Editing'
      description: |-
        ## Read Coupons for the Default Product Family

        You can retrieve a list of coupons that belong to the default product family for a site via this method.

        The default product family is the one that was created first for the site, (with the lowest ID number,) that has not been archived.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/list-coupons-for-a-site-output'
          examples:
            application/json:
              - coupon:
                  id: 999999
                  name: 50% coupon
                  code: 50PERCENT
                  description: 50 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 123456
                  name: 100% coupon
                  code: 100PERCENT
                  description: 100 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 888888
                  name: 25% coupon
                  code: 25PERCENT
                  description: 25 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 25
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/product_families/{product_family_id}/coupons/{coupon_id}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
      - name: coupon_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_coupons-coupon_id-format
      summary: Read a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Read a Coupon

        You can retrieve the Coupon via the API with the Show method. You must identify the Coupon in this call by the ID parameter that Chargify assigns.
        If instead you would like to find a Coupon using a Coupon code, see the Coupon Find method.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              coupon:
                type: object
                properties:
                  id:
                    type: integer
                    description: |
                      The ID of the coupon
                  name:
                    type: string
                    description: The internal coupon name. This information is never displayed to customers.
                  code:
                    type: string
                    description: 'The coupon code. This is used by you or your customers to apply the coupon to a subscription. The code may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): `%`, `@`, `+`, `-`, `_`, and `.`'
                  description:
                    type: string
                    description: The coupon description. This will be displayed to the customers after the coupon validation.
                  amount_in_cents:
                    type: integer
                    description: The amount in cents of the discount of the coupon.
                  product_family_id:
                    type: integer
                    description: 'The ID of the product family to which the coupon belongs. The coupon can be added only to products in this product family. '
                  created_at:
                    type: string
                    description: The timestamp when the coupon was created.
                    format: date-time
                  updated_at:
                    type: string
                    description: The timestamp when the coupon was updated
                    format: date-time
                  start_date:
                    type: string
                    description: The start date of the coupon
                    format: date-time
                  end_date:
                    type:
                      - 'null'
                      - string
                    description: The expiration date of the coupon
                    format: date-time
                  percentage:
                    type:
                      - 'null'
                      - number
                    description: 'The discount percentage. Should be an integer between 1 and 100. You should set the percentage or the amount, but not both.'
                    minimum: 1
                    maximum: 100
                  recurring:
                    type: boolean
                    description: 'If true, the discount will be applied at signup and every renewal (for the number of renewals given by duration_period_count). Otherwise, discount will be applied only at signup.'
                  duration_period_count:
                    type:
                      - number
                      - integer
                      - 'null'
                    description: Number of renewals the coupon is good for. Recurring should be set to true. Setting recurring to true and leaving this blank indicates that the coupon applies indefinitely.
                  duration_interval:
                    type:
                      - 'null'
                      - integer
                    description: Integer used to measure the interval unit.
                  duration_interval_unit:
                    type:
                      - 'null'
                      - string
                    description: Description of the number of days/months the coupon should be applied.
                  allow_negative_balance:
                    type: boolean
                    description: 'Boolean. If true, credits will carry forward to next billing. Otherwise discount may not exceed total of the charges.'
                  archived_at:
                    type:
                      - 'null'
                      - string
                    description: Timestamp indicating when this coupon was archived
                    format: date-time
                  conversion_limit:
                    type: 'null'
                    description: Number of times this coupon (or any of its codes) may be added to a subscription
                  stackable:
                    type: boolean
                    description: If true coupon can be combined with other stackable coupons to produce a larger discount. If false coupon cannot be combined with other coupons.
                  compounding_strategy:
                    type: string
                    description: ''
                    enum:
                      - compound
                      - full-price
                  coupon_restrictions:
                    type: array
                    items:
                      type: object
          examples:
            application/json:
              coupon:
                id: 66
                name: Foo Bar
                code: YEPPER9993
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-07T14:51:52-05:00'
                updated_at: '2017-11-07T15:14:24-05:00'
                start_date: '2017-11-07T14:51:52-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: full-price
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/usage.json':
    parameters:
      - name: coupon_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_coupons-coupon_id-usage-json
      summary: Read Coupon Usage for a Site
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Read Coupon Usage for a Site

        This request will provide details about the coupon usage as an array of data hashes, one per product.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/coupon-usage-output'
          examples:
            application/json:
              - name: No cost product
                id: 3903594
                signups: 0
                savings: 0
                savings_in_cents: 0
                revenue: 0
                revenue_in_cents: 0
              - name: Product that expires
                id: 3853680
                signups: 0
                savings: 0
                savings_in_cents: 0
                revenue: 0
                revenue_in_cents: 0
              - name: Trial Product
                id: 3861800
                signups: 1
                savings: 30
                savings_in_cents: 3000
                revenue: 20
                revenue_in_cents: 2000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-couponid-usagejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons/find.json:
    get:
      operationId: GET_coupons-find-json
      summary: Finding a Coupon
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Finding a Coupon

        You can search for a coupon via the API with the find method. By passing a code parameter, the find will attempt to locate a coupon that matches that code. If no coupon is found, a 404 is returned.

        If you have more than one product family and if the coupon you are trying to find does not belong to the first product family in your site, then you will need to specify (either in the url or as a query string param) the product family id.

        You can retrieve a coupon via the API with the show method. You must identify the coupon in this call by the id parameter that Chargify assigns. If instead you would like to find a coupon using a coupon code, see the Coupon Find method.

        ```
        https://<subdomain>.chargify.com/product_families/<product_family_id>/coupons/find.<format>?code=<coupon_code>
        ```

        **OR**

        ```
        https://<subdomain>.chargify.com/coupons/find.<format>?code=<coupon_code>&product_family_id=1
        ```
      parameters:
        - name: product_family_id
          in: query
          type: integer
        - name: code
          in: query
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-findjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons/validate.json:
    get:
      operationId: GET_coupons-validate-format
      summary: Validate a Coupon
      tags:
        - Coupon
        - incomplete
        - 'Coupons: Editing'
      description: |-
        ## Validate a Coupon

        You can verify if a specific coupon code is valid using the `validate` method. This method is useful for validating coupon codes that are entered by a customer. If the coupon is found and is valid, the coupon will be returned with a 200 status code.

        If the coupon is invalid, the status code will be 404 and the response will say why it is invalid. If the coupon is valid, the status code will be 200 and the coupon will be returned. The following reasons for invalidity are supported:

        + Coupon not found
        + Coupon is invalid
        + Coupon expired

        If you have more than one product family and if the coupon you are validating does not belong to the first product family in your site, then you will need to specify (either in the url or as a query string param) the product family id.

        Eg.

        ```
        https://<subdomain>.chargify.com/product_families/<product_family_id>/coupons/validate.<format>?code=<coupon_code>
        ```

        Or:

        ```
        https://<subdomain>.chargify.com/coupons/validate.<format>?code=<coupon_code>&product_family_id=1
        ```
      parameters:
        - name: coupon_code
          in: query
          description: The Coupon Code.
          required: false
          type: string
        - name: product_family_id
          in: query
          description: ''
          required: false
          type: number
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 66
                name: Foo Bar
                code: YEPPER9993
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-07T14:51:52-05:00'
                updated_at: '2017-11-07T15:14:24-05:00'
                start_date: '2017-11-07T14:51:52-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: full-price
                coupon_restrictions: []
        '404':
          description: Not Found
          examples:
            application/json:
              errors: Coupon code could not be found.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-validate-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/product_families/{product_family_id}/coupons.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_product_families-product_family_id-coupons-json
      summary: Read Coupons for a Product Family for a Site
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Read Coupons for a Specific Product Family

        List coupons for a specific Product Family in a Site.
      produces:
        - application/xml
      parameters:
        - name: product_family_id
          in: query
          type: integer
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/coupons/list-coupons-for-a-site-output'
          examples:
            application/json:
              - coupon:
                  id: 999999
                  name: 50% coupon
                  code: 50PERCENT
                  description: 50 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 123456
                  name: 100% coupon
                  code: 100PERCENT
                  description: 100 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 888888
                  name: 25% coupon
                  code: 25PERCENT
                  description: 25 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 25
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-couponsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/coupons/{coupon_id}.json':
    parameters:
      - name: coupon_id
        in: path
        description: The Coupon ID.
        required: true
        type: number
    put:
      operationId: PUT_coupons-coupon_id-format
      summary: Update a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Update a Coupon

        You can update a Coupon via the API with a PUT request to the resource endpoint.

        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:
        `{ "<product/component_id>": boolean_value }`
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupons/create-coupon-input'
            example:
              coupon:
                name: 15% off
                code: 15OFF
                description: 15% off for life
                percentage: '15'
                allow_negative_balance: 'false'
                recurring: 'false'
                end_date: '2012-08-29T12:00:00-04:00'
                product_family_id: '2'
                stackable: 'true'
                compounding_strategy: compound
              restricted_products:
                '1': true
              restricted_components:
                '1': true
                '2': false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_coupons-coupon_id-format
      summary: Archive a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Archive a Coupon

        You can archive a Coupon via the API with the archive method.
        Archiving makes that Coupon unavailable for future use, but allows it to remain attached and functional on existing Subscriptions that are using it.
        The `archived_at` date and time will be assigned.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: '2016-12-02T13:09:33-05:00'
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/codes.json':
    parameters:
      - name: coupon_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_coupons-coupon_id-codes-format
      summary: Add Coupon Subcodes
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Add Coupon Subcodes

        To create a Coupon subcode, POST an array of subcodes to the correct URL endpoint.
      responses:
        '201':
          description: Created
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_coupons-coupon_id-codes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_coupons-coupon_id-codes-json
      summary: Read Coupon Subcodes for a Site
      tags:
        - 'Coupons: Subcodes'
      description: |-
        ## Read Coupon Subcodes for a Site

        This request allows you to request the subcodes that are attached to a coupon.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/subcodes/retrieve-coupon-subcodes-output'
          examples:
            application/json:
              codes:
                - 3JU6PR
                - 9RO6MP
                - 8OG1VV
                - 5FL7VV
                - 2SV8XK
                - 4LW8LH
                - 3VL4GZ
                - 9UI9XO
                - 0LZ0CC
                - 8XI9JV
                - 9UV5YE
                - 3UI4GX
                - 6SL5ST
                - 9WC8IJ
                - 2KA3PZ
                - 7WR1VR
                - 3VY7MN
                - 6KC3KB
                - 7DF7YT
                - 9FH1ED
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-couponid-codesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_coupons-coupon_id-codes-format
      summary: Update Coupon Subcodes
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Update Coupon Subcodes

        You can update the subcodes for the given Coupon via the API with a PUT request to the resource endpoint.
        Send an array of new coupon subcodes.

        **Note**: All current subcodes for that Coupon will be deleted first, and replaced with the list of subcodes sent to this endpoint.
        The response will contain:

        + The created subcodes,

        + Subcodes that were not created because they already exist,

        + Any subcodes not created because they are invalid.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupon/subcodes/create-a-coupon-subcode'
            example:
              codes:
                - AAAA
                - BBBB
                - CCCC
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/subcodes/create-a-coupon-subcode-output'
          examples:
            application/json:
              codes:
                - AAAA
                - BBBB
                - CCCC
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_coupons-coupon_id-codes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/codes/{subcode}.json':
    parameters:
      - name: coupon_id
        in: path
        description: The Coupon ID.
        required: true
        type: number
      - name: subcode
        in: path
        description: The Subcode.
        required: true
        type: number
    delete:
      operationId: DELETE_coupons-coupon_id-codes-subcode-format
      summary: Delete the Coupon Subcode
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Delete the Coupon Subcode

        If the Coupon subcode is successfully removed, a "200" response code will be returned. Otherwise, a "404" error will be returned.

        ## Example

        Given a coupon with an ID of 567, and a coupon subcode of 20OFF, the URL to `DELETE` this coupon subcode would be: 

        ```
        http://subdomain.chargify.com/coupons/567/codes/20OFF.<format>
        ```

        Note: If you are using any of the allowed special characters (“%”, “@”, “+”, “-”, “_”, and “.”), you must encode them for use in the URL.

        | Special character | Encoding |
        |-------------------|----------|
        | %                 | %25      |
        | @                 | %40      |
        | +                 | %2B      |
        | –                 | %2D      |
        | _                 | %5F      |
        | .                 | %2E      |

        ## Percent Encoding Example

        Or if the coupon subcode is 20%OFF, the URL to delete this coupon subcode would be: @https://<subdomain>.chargify.com/coupons/567/codes/20%25OFF.<format>
      responses:
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_coupons-coupon_id-codes-subcode-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /customers.json:
    post:
      operationId: POST_customers-format
      summary: Create a Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Create a Customer

        You can create a new Customer at any time, or you may create a Customer at the same time you create a Subscription. The only validation restriction is that you may only create one Customer for a given `reference` value. If provided, the `reference` value must be unique. It represents a unique identifier for the Customer from your own app, i.e. the Customer’s ID. This allows you to retrieve a given Customer via a piece of shared information. Alternatively, you may choose to leave `reference` blank, and store Chargify’s unique ID for the Customer, which is in the `id` attribute.

        Only those attributes not marked as "read only" may be set via POST (create) or PUT (update) operations.

        ## Required Country Format

        Chargify requires that you use the ISO Standard Country codes when formatting country attribute of the customer.

        Countries should be formatted as 2 characters. For more information, please see the following wikipedia article on [ISO_3166-1.](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes)

        ## Required State Format

        Chargify requires that you use the ISO Standard State codes when formatting state attribute of the customer.

        + US States (2 characters): [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2:US)

        + States Outside the US (2-3 characters): To find the correct state codes outside of the US, please go to [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) and click on the link in the “ISO 3166-2 codes” column next to country you wish to populate.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/create-a-customer-input'
            example:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha@example.com
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/customer/create-a-customer-output'
          examples:
            application/json:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha@example.com
                cc_emails: null
                organization: null
                reference: null
                id: 14967442
                created_at: '2016-12-05T10:33:07-05:00'
                updated_at: '2016-12-05T10:33:07-05:00'
                address: null
                address_2: null
                city: null
                state: null
                zip: null
                country: null
                phone: null
                verified: false
                portal_customer_created_at: null
                portal_invite_last_sent_at: null
                portal_invite_last_accepted_at: null
                tax_exempt: false
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'unknown attribute: emailzzz'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_customers-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_customers-json
      summary: Read Customers for a Site
      tags:
        - Customers
      description: |-
        ## Read Customers for a Site

        This request will list all customers associated with your Site.
      parameters:
        - $ref: '#/parameters/trait:pagination50:page'
        - $ref: '#/parameters/trait:direction:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    cc_emails:
                      type: string
                    organization:
                      type: string
                    reference:
                      type: 'null'
                    id:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    address:
                      type: string
                    address_2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    country:
                      type: string
                    phone:
                      type: string
                    verified:
                      type: 'null'
                    portal_customer_created_at:
                      type: string
                    portal_invite_last_sent_at:
                      type: string
                    portal_invite_last_accepted_at:
                      type: 'null'
                    tax_exempt:
                      type: boolean
          examples:
            application/json:
              - customer:
                  first_name: Kayla
                  last_name: Test
                  email: kayla@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14126091
                  created_at: '2016-10-04T15:22:27-04:00'
                  updated_at: '2016-10-04T15:22:30-04:00'
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-04T15:22:29-04:00'
                  portal_invite_last_sent_at: '2016-10-04T15:22:30-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
              - customer:
                  first_name: 'Nick '
                  last_name: Test
                  email: nick@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14254093
                  created_at: '2016-10-13T16:52:51-04:00'
                  updated_at: '2016-10-13T16:52:54-04:00'
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-13T16:52:54-04:00'
                  portal_invite_last_sent_at: '2016-10-13T16:52:54-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
              - customer:
                  first_name: Don
                  last_name: Test
                  email: don@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14332342
                  created_at: '2016-10-19T10:49:13-04:00'
                  updated_at: '2016-10-19T10:49:19-04:00'
                  address: 1737 15th St
                  address_2: ''
                  city: Boulder
                  state: CO
                  zip: '80302'
                  country: US
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-19T10:49:19-04:00'
                  portal_invite_last_sent_at: '2016-10-19T10:49:19-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customersjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{id}.json':
    parameters:
      - name: id
        in: path
        description: The ID of a Customer.
        required: true
        type: number
    get:
      operationId: GET_customers-id-format
      summary: Read Customer Data
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Read Customer Data

        This method allows to retrieve the Customer properties by Chargify-generated Customer ID.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: non
                last_name: Ut consequat in
                email: pariatur
                cc_emails: ipsum sit sunt
                organization: anim aute enim dolore in
                reference: null
                id: 95274396
                created_at: dolor cupidatat anim culpa
                updated_at: sit elit in Lorem officia
                address: magna irure
                address_2: dolore deserunt
                city: elit nostrud ad
                state: sint eu Excepteur amet
                zip: aliquip Excepteur occaecat pariatur eiusmod
                country: pariatur dolore
                phone: eu eiusmod laboris aliqua ullamco
                verified: null
                portal_customer_created_at: ali
                portal_invite_last_sent_at: labore exercitation reprehenderit Exc
                portal_invite_last_accepted_at: null
                tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    put:
      operationId: PUT_customers-id-format
      summary: Update the Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Update the Customer

        This method allows to update the Customer.

        Only those attributes not marked as "read only" may be set via POST (create) or PUT (update) operations.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/customer/create-a-customer-input'
            example:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha.washington@example.com
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha.washington@example.com
                cc_emails: null
                organization: null
                reference: null
                id: 14967442
                created_at: '2016-12-05T10:33:07-05:00'
                updated_at: '2016-12-05T10:38:00-05:00'
                address: null
                address_2: null
                city: null
                state: null
                zip: null
                country: null
                phone: null
                verified: false
                portal_customer_created_at: null
                portal_invite_last_sent_at: null
                portal_invite_last_accepted_at: null
                tax_exempt: false
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Email: must be a valid email address'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_customers-id-format
      summary: Delete the Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Delete the Customer

        This method allows to delete the Customer.   When a delete response is received, the response status will be `204`. There will be no content sent with the status.
      responses:
        '204':
          description: No Content
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /customers/lookup.json:
    get:
      operationId: GET_customers-lookup-json
      summary: Read the Customer by Reference Value
      tags:
        - Customers
      description: |-
        ## Read the Customer by Reference Value

        Use this method to return the customer object if you have the **Reference ID (Your App)** value.
      parameters:
        - name: reference
          in: query
          description: URL encoded
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: Don
                last_name: Test
                email: don@example.com
                cc_emails: 'john@example.com, sue@example.com'
                organization: ''
                reference: null
                id: 14332342
                created_at: '2016-10-19T10:49:13-04:00'
                updated_at: '2016-10-19T10:49:19-04:00'
                address: 123 15th Street
                address_2: ''
                city: Boulder
                state: CO
                zip: '80302'
                country: US
                phone: ''
                verified: null
                portal_customer_created_at: '2016-10-19T10:49:19-04:00'
                portal_invite_last_sent_at: '2016-10-19T10:49:19-04:00'
                portal_invite_last_accepted_at: null
                tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-lookupjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{customer_id}/subscriptions.json':
    parameters:
      - name: customer_id
        in: path
        description: The Customer ID.
        required: true
        type: string
    get:
      operationId: GET_customers-customer_id-subscriptions-json
      summary: Read Subscription by Customer ID
      tags:
        - Subscriptions
      description: |-
        ## List by Customer

        This method will retreive a list of subscriptions associated with a Customer.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              - subscription:
                  id: 15236915
                  state: active
                  balance_in_cents: 0
                  total_revenue_in_cents: 14000
                  product_price_in_cents: 1000
                  product_version_number: 7
                  current_period_ends_at: '2016-11-15T14:48:10-05:00'
                  next_assessment_at: '2016-11-15T14:48:10-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-14T14:48:12-05:00'
                  expires_at: null
                  created_at: '2016-11-14T14:48:10-05:00'
                  updated_at: '2016-11-14T15:24:41-05:00'
                  cancellation_message: null
                  cancellation_method: null
                  cancel_at_end_of_period: null
                  canceled_at: null
                  current_period_started_at: '2016-11-14T14:48:10-05:00'
                  previous_state: active
                  signup_payment_id: 162269766
                  signup_revenue: '260.00'
                  delayed_cancel_at: null
                  coupon_code: 5SNN6HFK3GBH
                  payment_collection_method: automatic
                  snap_day: null
                  reason_code: null
                  customer:
                    first_name: Curtis
                    last_name: Test
                    email: curtis@example.com
                    cc_emails: jeff@example.com
                    organization: ''
                    reference: null
                    id: 14714298
                    created_at: '2016-11-14T14:48:10-05:00'
                    updated_at: '2016-11-14T14:48:13-05:00'
                    address: 123 Anywhere Street
                    address_2: ''
                    city: Boulder
                    state: CO
                    zip: '80302'
                    country: US
                    phone: ''
                    verified: false
                    portal_customer_created_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_sent_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 3792003
                    name: $10 Basic Plan
                    handle: basic
                    description: lorem ipsum
                    accounting_code: basic
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: day
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: false
                    require_credit_card: false
                    created_at: '2016-03-24T13:38:39-04:00'
                    updated_at: '2016-11-03T13:03:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 281054
                        url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
                      - id: 281240
                        url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
                      - id: 282694
                        url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
                    taxable: false
                    version_number: 7
                  credit_card:
                    id: 10191713
                    payment_type: credit_card
                    first_name: Curtis
                    last_name: Test
                    masked_card_number: XXXX-XXXX-XXXX-1
                    card_type: bogus
                    expiration_month: 1
                    expiration_year: 2026
                    billing_address: 123 Anywhere Street
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: null
                    billing_country: ''
                    billing_zip: '80302'
                    current_vault: bogus
                    vault_token: '1'
                    customer_vault_token: null
                    customer_id: 14714298
                  payment_type: credit_card
                  referral_code: w7kjc9
                  next_product_id: null
                  coupon_use_count: 1
                  coupon_uses_allowed: 1
              - subscription:
                  id: 15189649
                  state: canceled
                  balance_in_cents: 15000
                  total_revenue_in_cents: 10000
                  product_price_in_cents: 10000
                  product_version_number: 1
                  current_period_ends_at: '2017-11-10T13:14:00-05:00'
                  next_assessment_at: '2017-11-10T13:14:00-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-10T13:14:02-05:00'
                  expires_at: null
                  created_at: '2016-11-10T13:14:00-05:00'
                  updated_at: '2016-11-14T11:14:01-05:00'
                  cancellation_message: ''
                  cancellation_method: merchant_ui
                  cancel_at_end_of_period: false
                  canceled_at: '2016-11-14T11:14:01-05:00'
                  current_period_started_at: '2016-11-10T13:14:00-05:00'
                  previous_state: canceled
                  signup_payment_id: 161794022
                  signup_revenue: '100.00'
                  delayed_cancel_at: null
                  coupon_code: null
                  payment_collection_method: invoice
                  snap_day: null
                  customer:
                    first_name: Frankie
                    last_name: Bravo
                    email: testfrankie11@test.com
                    cc_emails: ''
                    organization: ''
                    reference: null
                    id: 14543712
                    created_at: '2016-11-02T10:16:17-04:00'
                    updated_at: '2016-11-14T09:54:39-05:00'
                    address: ''
                    address_2: ''
                    city: ''
                    state: ''
                    zip: ''
                    country: ''
                    phone: '5555551212'
                    verified: true
                    portal_customer_created_at: '2016-11-02T10:16:19-04:00'
                    portal_invite_last_sent_at: '2016-11-10T13:14:03-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 4038269
                    name: Annual Product
                    handle: annual-product
                    description: ''
                    accounting_code: ''
                    price_in_cents: 10000
                    interval: 12
                    interval_unit: month
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: true
                    require_credit_card: true
                    created_at: '2016-09-28T09:54:05-04:00'
                    updated_at: '2016-09-28T09:54:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 297032
                        url: 'https://general-goods.chargify.com/subscribe/b3hjynp5ss52/annual-product'
                    taxable: false
                    version_number: 1
                  credit_card:
                    id: 10188522
                    payment_type: credit_card
                    first_name: Fran
                    last_name: Becker
                    masked_card_number: null
                    card_type: null
                    expiration_month: null
                    expiration_year: null
                    billing_address: 123 Montana Way
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: CO
                    billing_country: US
                    billing_zip: '90210'
                    current_vault: bogus
                    vault_token: '123456789'
                    customer_vault_token: null
                    customer_id: 14543712
                  payment_type: bank_account
                  referral_code: hspss6
                  next_product_id: null
                  coupon_use_count: null
                  coupon_uses_allowed: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-customerid-subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/events.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: list-events
      summary: Read Events for a Subscription
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## Read Events for a Subscription

        The following request will return a list of events for a subscription.

        Each event type has its own `event_specific_data` specified.
      parameters:
        - name: filter
          in: query
          description: Any of the events listed under the introduction. `?filter=payment_success'
          type: string
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events/list-events-for-subscription'
          examples:
            application/json:
              - event:
                  id: 344799837
                  key: statement_settled
                  message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:29-04:00'
                  event_specific_data: null
              - event:
                  id: 344799815
                  key: renewal_success
                  message: Successful renewal for Amelia Example's subscription to Basic Plan
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:28-04:00'
                  event_specific_data:
                    product_id: 3792003
                    account_transaction_id: null
              - event:
                  id: 344799705
                  key: billing_date_change
                  message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:25-04:00'
                  event_specific_data: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: list-events
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /events.json:
    get:
      operationId: list-events
      summary: Read Events for a Site
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## List Events for a Site

        This method will retrieve a list of events for a site. Use query string filters to narrow down results.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events/list-site-event-output'
          examples:
            application/json:
              - event:
                  id: 343087780
                  key: subscription_state_change
                  message: State changed on Test subscription to Monthly Product from active to past_due
                  subscription_id: 14950962
                  created_at: '2016-10-27T16:42:22-04:00'
                  event_specific_data:
                    previous_subscription_state: active
                    new_subscription_state: past_due
              - event:
                  id: 343087742
                  key: billing_date_change
                  message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
                  subscription_id: 14950962
                  created_at: '2016-10-27T16:42:19-04:00'
                  event_specific_data: null
              - event:
                  id: 343085267
                  key: statement_closed
                  message: Statement 79401838 closed (but not settled) for Test's subscription to ANNUAL product
                  subscription_id: 14950975
                  created_at: '2016-10-27T16:40:40-04:00'
                  event_specific_data: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: list-events
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /events/count.json:
    get:
      operationId: GET_events_count-format
      summary: Read the Count of Events for a Site
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## Read the Count of Events for a Site

        Obtain a count of the entire events for a given site by using this method.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/event/counts'
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
          examples:
            application/json:
              count: 144
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_events_count-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /invoices.json:
    get:
      operationId: GET_list-invoices-by-subscription
      summary: Read All Invoices (Multiple Query Options)
      tags:
        - Invoice
        - incomplete
        - Invoices
      description: |-
        ## Read All Invoices (Multiple Query Options)

        ## Filters

        In order to generate a set of invoices that meet certain criteria, please use the query string filters below for best results. 

        ## Example Query String

        To get a list of invoices for a specific subscription ID, your request would be formatted as follows:

        ```http://[chargify_domain].chargify.com/invoices.<format>?subscription_id=<subcription_id>```
      parameters:
        - name: start_date
          in: query
          description: The start date in the YYYY-MM-DD format .
          required: false
          type: string
        - name: end_date
          in: query
          description: The end date in the YYYY-MM-DD format.
          required: false
          type: string
        - name: subscription_id
          in: query
          description: The Subscription ID.
          required: false
          type: number
        - name: status
          in: query
          required: false
          type: string
        - $ref: '#/parameters/trait:stateStatusQuery:State / Status Filter'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    id:
                      type: integer
                    subscription_id:
                      type: integer
                    statement_id:
                      type: integer
                    site_id:
                      type: integer
                    state:
                      type: string
                    total_amount_in_cents:
                      type: integer
                    paid_at:
                      type: 'null'
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    amount_due_in_cents:
                      type: integer
                    number:
                      type: string
                    charges:
                      type: array
                      items:
                        type: object
                        properties:
                          created_at:
                            type: string
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          memo:
                            type: string
                          kind:
                            type: string
                          amount_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          success:
                            type: boolean
                          id:
                            type: integer
                          payment_id:
                            type: 'null'
                          product_id:
                            type: integer
                          transaction_type:
                            type: string
                          gateway_transaction_id:
                            type: 'null'
                          gateway_order_id:
                            type: 'null'
                          starting_balance_in_cents:
                            type: integer
                          component_id:
                            type: 'null'
                          tax_id:
                            type: 'null'
                          customer_id:
                            type: integer
                    payments_and_credits:
                      type: array
                      items:
                        type: object
          examples:
            application/json:
              - invoice:
                  id: 1231028
                  subscription_id: 14735881
                  statement_id: 79006022
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 1000
                  paid_at: null
                  created_at: '2016-10-20T17:04:14-04:00'
                  updated_at: '2016-10-20T17:04:14-04:00'
                  amount_due_in_cents: 1000
                  number: '000013'
                  charges:
                    - created_at: '2016-10-20T17:04:14-04:00'
                      subscription_id: 14735881
                      type: Charge
                      memo: Trial Product (10/20/2016 - 11/20/2016)
                      kind: baseline
                      amount_in_cents: 1000
                      ending_balance_in_cents: 1000
                      success: true
                      id: 158945783
                      payment_id: null
                      product_id: 3861800
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: 0
                      component_id: null
                      tax_id: null
                      customer_id: 14254093
                  payments_and_credits: []
              - invoice:
                  id: 1229888
                  subscription_id: 14823387
                  statement_id: 78919321
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 5000
                  paid_at: null
                  created_at: '2016-10-19T12:53:02-04:00'
                  updated_at: '2016-10-19T12:53:02-04:00'
                  amount_due_in_cents: 5000
                  number: '000012'
                  charges:
                    - created_at: '2016-10-19T12:53:02-04:00'
                      subscription_id: 14823387
                      type: Charge
                      memo: Will this invoice get paid
                      kind: one_time
                      amount_in_cents: 5000
                      ending_balance_in_cents: -2823
                      success: true
                      id: 158769854
                      payment_id: null
                      product_id: 3794121
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: -7823
                      component_id: null
                      tax_id: null
                      customer_id: 14332158
                  payments_and_credits: []
              - invoice:
                  id: 1227981
                  subscription_id: 14788195
                  statement_id: 78808817
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 4000
                  paid_at: null
                  created_at: '2016-10-17T12:13:42-04:00'
                  updated_at: '2016-10-17T12:13:42-04:00'
                  amount_due_in_cents: 4000
                  number: '000010'
                  charges:
                    - created_at: '2016-10-17T12:13:42-04:00'
                      subscription_id: 14788195
                      type: Charge
                      memo: Basic Plan (10/17/2016 - 11/17/2016)
                      kind: baseline
                      amount_in_cents: 4000
                      ending_balance_in_cents: 4000
                      success: true
                      id: 158506054
                      payment_id: null
                      product_id: 3792003
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: 0
                      component_id: null
                      tax_id: null
                      customer_id: 14300992
                  payments_and_credits: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_list-invoices-by-subscription
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}.json':
    parameters:
      - name: invoice_id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-format
      summary: Read the Invoice by ID
      tags:
        - Invoice
        - incomplete
        - Invoices
      description: |-
        ## Read the Invoice by ID

        This method will retrieve the invoice object based on the ID provided.

        ## PDF Invoice retrieval

        Individual PDF Invoices can be retrieved by using the "Accept/Content-Type" header application/pdf or appending .pdf as the format portion of the URL:

        ```curl -u <api_key>:x -H 
        Accept:application/pdf -H 
        Content-Type:application/pdf 
        https://acme.chargify.com/invoices/1.pdf > output_file.pdf

        URL: `https://<subdomain>.chargify.com/invoices/<invoice_id>.<format>`
        Method: GET
        Required parameters: `invoice_id`
        Response: A single Invoice.
        ```
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              invoice:
                type: object
                properties:
                  id:
                    type: integer
                  subscription_id:
                    type: integer
                  statement_id:
                    type: integer
                  site_id:
                    type: integer
                  state:
                    type: string
                  total_amount_in_cents:
                    type: integer
                  paid_at:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  amount_due_in_cents:
                    type: integer
                  number:
                    type: string
                  charges:
                    type: array
                    items:
                      type: object
                      properties:
                        created_at:
                          type: string
                        subscription_id:
                          type: integer
                        type:
                          type: string
                        memo:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        ending_balance_in_cents:
                          type: integer
                        success:
                          type: boolean
                        id:
                          type: integer
                        payment_id:
                          type: integer
                        product_id:
                          type: integer
                        transaction_type:
                          type: string
                        gateway_transaction_id:
                          type: 'null'
                        gateway_order_id:
                          type: 'null'
                        starting_balance_in_cents:
                          type: integer
                        component_id:
                          type: 'null'
                        tax_id:
                          type: 'null'
                        customer_id:
                          type: integer
                  payments_and_credits:
                    type: array
                    items:
                      type: object
                      properties:
                        created_at:
                          type: string
                        subscription_id:
                          type: integer
                        type:
                          type: string
                        memo:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        ending_balance_in_cents:
                          type: integer
                        success:
                          type: boolean
                        id:
                          type: integer
                        payment_id:
                          type: 'null'
                        product_id:
                          type: integer
                        transaction_type:
                          type: string
                        gateway_transaction_id:
                          type: string
                        gateway_order_id:
                          type: 'null'
                        starting_balance_in_cents:
                          type: integer
                        component_id:
                          type: 'null'
                        tax_id:
                          type: 'null'
                        customer_id:
                          type: integer
                        card_number:
                          type: string
                        card_expiration:
                          type: string
                        card_type:
                          type: string
          examples:
            application/json:
              invoice:
                id: 1240345
                subscription_id: 14900541
                statement_id: 79334531
                site_id: 31615
                state: paid
                total_amount_in_cents: 4250
                paid_at: '2016-11-01T12:20:21-04:00'
                created_at: '2016-10-26T14:38:40-04:00'
                updated_at: '2016-11-01T12:20:21-04:00'
                amount_due_in_cents: 0
                number: '000014'
                charges:
                  - created_at: '2016-10-26T14:38:39-04:00'
                    subscription_id: 14900541
                    type: Charge
                    memo: Basic Plan (10/26/2016 - 11/26/2016)
                    kind: baseline
                    amount_in_cents: 4000
                    ending_balance_in_cents: 4000
                    success: true
                    id: 159670144
                    payment_id: 160493169
                    product_id: 3792003
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 0
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                  - created_at: '2016-10-26T14:38:39-04:00'
                    subscription_id: 14900541
                    type: Charge
                    memo: MA Tax (6.25%)
                    kind: tax
                    amount_in_cents: 250
                    ending_balance_in_cents: 4250
                    success: true
                    id: 159670145
                    payment_id: 160493169
                    product_id: 3792003
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 4000
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                payments_and_credits:
                  - created_at: '2016-11-01T12:20:20-04:00'
                    subscription_id: 14900541
                    type: Payment
                    memo: One Time Credit Card Payment for Invoice
                    kind: one_time
                    amount_in_cents: 4250
                    ending_balance_in_cents: -4450
                    success: true
                    id: 160493169
                    payment_id: null
                    product_id: 3792003
                    transaction_type: payment
                    gateway_transaction_id: '53433'
                    gateway_order_id: null
                    starting_balance_in_cents: -200
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                    card_number: XXXX-XXXX-XXXX-1
                    card_expiration: 01/2026
                    card_type: bogus
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}/payments.json':
    parameters:
      - name: invoice_id
        in: path
        description: The Invoice ID.
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-payments-format
      summary: Read Payments for an Invoice
      tags:
        - Invoice Payment
        - incomplete
        - Invoices
      description: |-
        ## Read Payments for an Invoice

        This method allows the user to display information regarding payments applied to an invoice. Specify the invoice ID, and the server response will be a list of all current payments applied to the invoice.
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-payments-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    post:
      operationId: POST_invoices-invoice_id-payments-json
      summary: Create Payment
      tags:
        - 'Invoices: Payments'
      description: |-
        ## Create Payment

        In order to specify a payment made against an invoice, specify the `amount`. 

        Please note that you may request the payment `amount_in_cents`. You may submit your request in cents as well:

        ```
        {
          "payment": {
            "amount": 10.00,
            "memo": "Lorem ipsum"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/payments/create-payment-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/payments/create-payment-output'
          examples:
            application/json:
              payment:
                id: 160567068
                subscription_id: 14900541
                type: Payment
                kind: manual
                transaction_type: payment
                success: true
                amount_in_cents: 1000
                memo: Lorem ipsum
                created_at: '2016-11-01T16:04:37-04:00'
                starting_balance_in_cents: 3750
                ending_balance_in_cents: 2750
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3792003
                tax_id: null
                component_id: null
                statement_id: 79733833
                customer_id: 14399371
                card_number: null
                card_expiration: null
                card_type: null
                refunded_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-paymentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/invoices/{id}.json':
    parameters:
      - name: id
        in: path
        description: The Invoice ID.
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-charges-format
      summary: Read Charges for an Invoice
      tags:
        - Invoice Charge
        - incomplete
        - Invoices
      description: |-
        ## Read Charges for an Invoice

        This method allows the user to display information regarding charges applied to an invoice. Specify the invoice ID, and the server response will be a list of all current charges applied to the invoice.
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/invoice/list-charges-response'
          examples:
            application/json:
              invoice:
                id: 1532074
                subscription_id: 17518841
                statement_id: 94596778
                site_id: 36547
                state: partial
                total_amount_in_cents: 5655
                paid_at: null
                created_at: '2017-07-10T11:10:15-04:00'
                updated_at: '2017-07-10T11:10:50-04:00'
                amount_due_in_cents: 155
                number: 000399
                charges:
                  - created_at: '2017-07-10T11:10:13-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
                    kind: baseline
                    amount_in_cents: 7107
                    ending_balance_in_cents: 1607
                    success: true
                    id: 193822851
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: -5500
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: TX Tax (8.25%)
                    kind: tax
                    amount_in_cents: 469
                    ending_balance_in_cents: 655
                    success: true
                    id: 193822853
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 186
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                line_items:
                  - created_at: '2017-07-10T11:10:13-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
                    kind: baseline
                    amount_in_cents: 7107
                    ending_balance_in_cents: 1607
                    success: true
                    id: 193822851
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: -5500
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Adjustment
                    memo: 'Coupon: PERCENTS - percents'
                    kind: coupon
                    amount_in_cents: -1421
                    ending_balance_in_cents: 186
                    success: true
                    id: 193822852
                    payment_id: null
                    product_id: 4465911
                    transaction_type: adjustment
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 1607
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: TX Tax (8.25%)
                    kind: tax
                    amount_in_cents: 469
                    ending_balance_in_cents: 655
                    success: true
                    id: 193822853
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 186
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:50-04:00'
                    subscription_id: 17518841
                    type: Adjustment
                    memo: this is a credit
                    kind: null
                    amount_in_cents: -500
                    ending_balance_in_cents: 155
                    success: true
                    id: 193822901
                    payment_id: null
                    product_id: 4465911
                    transaction_type: adjustment
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 655
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                payments_and_credits:
                  - created_at: '2017-07-10T11:10:15-04:00'
                    subscription_id: 17518841
                    type: InfoTransaction
                    memo: Previous balance applied
                    kind: previous_balance_applied
                    amount_in_cents: -5500
                    ending_balance_in_cents: null
                    success: true
                    id: 193822855
                    payment_id: null
                    product_id: null
                    transaction_type: info
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: null
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-charges-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}/charges.json':
    parameters:
      - name: invoice_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_invoices-invoice_id-charges-json
      summary: Create Invoice Charge
      tags:
        - 'Invoices: Charges'
      description: |-
        ## Create Invoice Charge

        Use this method to add a charge to an existing, open invoice.

        ## Request charges in cents

        You may submit your request in cents as well:

        ```
        {
          "payment": {
            "amount": 10.00,
            "memo": "Lorem ipsum"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/charges/create-invoice-charge-input'
            example:
              charge:
                amount: '10.00'
                memo: Support October 2016
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/charges/create-invoice-charge-output'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-chargesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/invoices/{invoice_id}/adjustments.json':
    parameters:
      - name: invoice_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_invoices-invoice_id-adjustments-json
      summary: Create Invoice Credit
      tags:
        - 'Invoices: Credits'
      description: |-
        ## Create Invoice Credit

        Use this method to add a credit to an existing invoice.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/credits/create-invoice-credit-input'
            example:
              adjustment:
                amount: 10
                memo: Credit for recycling old computers
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/credits/create-invoice-credit-output'
          examples:
            application/json:
              adjustment:
                id: 165068820
                subscription_id: 14823581
                type: Adjustment
                kind: null
                transaction_type: adjustment
                success: true
                amount_in_cents: -1000
                memo: Credit for recycling old computers
                created_at: '2016-12-05T13:37:28-05:00'
                starting_balance_in_cents: 177
                ending_balance_in_cents: -823
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3794121
                tax_id: null
                component_id: null
                statement_id: 79335006
                customer_id: 14332342
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-adjustmentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/invoices/:uid':
    get:
      operationId: 'GET_invoices-:uid'
      summary: Read one invoice
      tags:
        - Invoices (NEW)
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoice-new'
      x-stoplight:
        id: GET_invoices-uid
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/notes.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    post:
      operationId: POST_subscriptions-subscription_id-notes-format
      summary: Create a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Create a Note

        Use the following method to create a note for a Subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/create-note-input'
            example:
              note:
                body: New test note.
                sticky: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                id: 105025
                body: New test note.
                subscription_id: 15054201
                created_at: '2016-11-03T14:47:08-04:00'
                updated_at: '2016-11-03T14:47:08-04:00'
                sticky: true
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscription_id-notes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-notes-format
      summary: Read Notes for a Subscription
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Read Notes for a Subscription

        Use this method to retrieve a list of Notes associated with a Subscription. The response will be an array of Notes.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/list-notes-output'
            example:
              - note:
                  body: Test note.
                  created_at: '2015-06-15T13:26:47-04:00'
                  id: 5
                  sticky: false
                  subscription_id: 100046
                  updated_at: '2015-06-15T13:28:12-04:00'
              - note:
                  body: Another test note.
                  created_at: '2015-06-15T12:04:46-04:00'
                  id: 4
                  sticky: false
                  subscription_id: 100046
                  updated_at: '2015-06-15T13:26:33-04:00'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/notes/create-note-output'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-notes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/notes/{note_id}.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: note_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-notes-note_id-json
      summary: Read Specific Note
      tags:
        - incomplete
        - Notes
      description: |-
        ## Read/Show Specific Note

        Once you have obtained the ID of the note you wish to read, use this method to show a particular note attached to a subscription.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                body: Test note.
                created_at: '2015-06-15T13:26:47-04:00'
                id: 5
                sticky: false
                subscription_id: 100046
                updated_at: '2015-06-15T13:28:12-04:00'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-notes-noteidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-notes-note_id-format
      summary: Update a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Update a Note

        Use the following method to update a note for a Subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/create-note-input'
            example:
              note:
                body: Modified test note.
                sticky: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                id: 105025
                body: Modified test note.
                subscription_id: 15054201
                created_at: '2016-11-03T14:47:08-04:00'
                updated_at: '2016-11-03T14:49:09-04:00'
                sticky: true
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-notes-note_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
    delete:
      operationId: DELETE_subscriptions-subscription_id-notes-note_id-format
      summary: Delete a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Delete a Note

        Use the following method to delete a note for a Subscription.
      responses:
        '200':
          description: OK
        '422':
          description: ''
          schema:
            type: object
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-notes-note_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /offers.json:
    get:
      operationId: GET_offers-json
      summary: List Offers
      tags:
        - Offers
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              offers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    site_id:
                      type: integer
                    product_family_id:
                      type: integer
                    product_id:
                      type: integer
                    product_revisable_number:
                      type: integer
                    name:
                      type: string
                    handle:
                      type: string
                    description:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    archived_at:
                      type: 'null'
                    offer_items:
                      type: array
                      items:
                        type: object
                        properties:
                          component_id:
                            type: integer
                          price_point_id:
                            type: integer
                          starting_quantity:
                            type: string
                          editable:
                            type: boolean
                    offer_discounts:
                      type: array
                      items:
                        type: object
                        properties:
                          coupon_code:
                            type: string
          examples:
            application/json:
              offers:
                - id: 1
                  site_id: 2
                  product_family_id: 4
                  product_id: 32
                  product_revisable_number: 0
                  name: Offer One
                  handle: handle-1
                  description: An eloquent description.
                  created_at: '2018-06-04T16:19:33-04:00'
                  updated_at: '2018-06-04T16:19:33-04:00'
                  archived_at: null
                  offer_items:
                    - component_id: 22
                      price_point_id: 102
                      starting_quantity: '0.0'
                      editable: false
                  offer_discounts:
                    - coupon_code: DEF456
      x-stoplight:
        id: GET_offersjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    post:
      operationId: POST_offers-json
      summary: Create Offer
      tags:
        - Offers
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/create-offer-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/create-offer-output'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      type: string
          examples:
            application/json:
              errors:
                components:
                  - 'starting_quantity for an On/Off component can only be ''1'' or ''0'': 24'
      x-stoplight:
        id: POST_offersjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/offers/{offer_id}.json':
    parameters:
      - name: offer_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_offers-offer_id-json
      summary: Show Offer
      tags:
        - Offers
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              offer:
                type: object
                properties:
                  id:
                    type: integer
                  site_id:
                    type: integer
                  product_family_id:
                    type: integer
                  product_id:
                    type: integer
                  product_revisable_number:
                    type: integer
                  name:
                    type: string
                  handle:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  offer_items:
                    type: array
                    items:
                      type: object
                      properties:
                        component_id:
                          type: integer
                        price_point_id:
                          type: integer
                        starting_quantity:
                          type: string
                        editable:
                          type: boolean
                  offer_discounts:
                    type: array
                    items:
                      type: object
                      properties:
                        coupon_code:
                          type: string
          examples:
            application/json:
              offer:
                id: 1
                site_id: 2
                product_family_id: 4
                product_id: 32
                product_revisable_number: 0
                name: Offer One
                handle: handle-1
                description: An eloquent description.
                created_at: '2018-06-04T16:19:33-04:00'
                updated_at: '2018-06-04T16:19:33-04:00'
                offer_items:
                  - component_id: 22
                    price_point_id: 102
                    starting_quantity: '0.0'
                    editable: false
                offer_discounts:
                  - coupon_code: DEF456
        '401':
          description: ''
      x-stoplight:
        id: GET_offers-offeridjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/offers/{offer_id}/archive.json':
    parameters:
      - name: offer_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_offers-offer_id-archive-json
      summary: Archive Offer
      tags:
        - Offers
      responses:
        '200':
          description: ''
        '401':
          description: ''
      x-stoplight:
        id: PUT_offers-offerid-archivejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/offers/{offer_id}/unarchive.json':
    parameters:
      - name: offer_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_offers-offer_id-unarchive-json
      summary: Unarchive Offer
      tags:
        - Offers
      responses:
        '200':
          description: ''
          schema:
            type: object
        '401':
          description: ''
      x-stoplight:
        id: PUT_offers-offerid-unarchivejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/payments.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-payments-json
      summary: Create a Payment
      tags:
        - Payments
      description: |-
        ## Create a Payment

        This method will allow you to record an external payment on a subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payments/create-payment-input'
            example:
              payment:
                amount: 10
                memo: Client x paid with $10.00 of nickles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment:
                id: 160873334
                subscription_id: 15054201
                type: Payment
                kind: manual
                transaction_type: payment
                success: true
                amount_in_cents: 1000
                memo: Client x paid with $10.00 of nickles
                created_at: '2016-11-03T14:58:30-04:00'
                starting_balance_in_cents: -13989
                ending_balance_in_cents: -14989
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3861800
                tax_id: null
                component_id: null
                statement_id: 79870822
                customer_id: 14543792
                card_number: null
                card_expiration: null
                card_type: null
                refunded_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-paymentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /payment_profiles.json:
    post:
      operationId: POST_payment_profiles-format
      summary: Create a Payment Profile
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## Create a Payment Profile

        This method will create a payment profile for the `customer_id` identified in the `payment_profile` object. The `customer_id` is required for creating payment profiles in order to attach it to the proper object.

        You must include a `customer_id` so that Chargify will attach it to the customer entry. If no `customer_id` is included the API will return a `404`.

        ## Create a Payment Profile for ACH usage

        If you would like to create a payment method that is a Bank Account applicable for ACH payments use the following:

        ```
        {
         "payment_profile": {
          "customer_id": [Valid-Customer-ID],
          "bank_name": "Best Bank",
          "bank_routing_number": "021000089",
          "bank_account_number": "111111111111",
          "bank_account_type": "checking",
          "bank_account_holder_type": "business",
          "payment_type": "bank_account"
          }
        }
        ```

        ## Active Payment Methods

        **Creating a new payment profile for a Customer via the API will not make that Payment Profile current for any of the Customer’s Subscriptions.**

        ## Activate Payment Profile for a Susbscription

        To activate a new payment profile for a subscription, please see the documentation [here.](#endpoint:cHNDtRXoSo3kj3BHr)

        To make a change, select the Subscription in the Admin UI and choose Payment Details, then click the "Make Active Payment Method" link next to the desired Payment Profile.

        **Note:** Either the `full_number`, `expiration_month`, and `expiration_year` **or** if you have an existing `vault_token` from your gateway, that `vault_token` and the `current_vault` are required.

        The `current_vault` must be one of the following:

        + `bogus` (for testing)
        + `authorizenet`
        + `authorizenet_cim`
        + `beanstream`
        + `bpoint`
        + `braintree_blue`
        + `chargify`.
        + `cybersource`
        + `elavon`
        + `eway`
        + `eway_rapid_std`
        + `firstdata`
        + `fusebox`
        + `litle`
        + `moneris`
        + `moneris_us`
        + `orbital`
        + `payment_express`
        + `paymill`
        + `pin`
        + `quickpay`
        + `square`
        + `stripe_connect`
        + `trust_commerce`
        + `wirecard`

        Passing in the `vault_token` and `current_vault` are only allowed when creating a new payment profile.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payment-profiles/create-payment-profile-input'
            example:
              payment_profile:
                first_name: Jessica
                last_name: Test
                masked_card_number: XXXX-XXXX-XXXX-1111
                card_type: visa
                expiration_month: 10
                expiration_year: 2018
                customer_id: 19195410
                current_vault: bogus
                vault_token: '1'
                billing_address: 123 Main St.
                billing_city: Boston
                billing_state: MA
                billing_zip: '02120'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment_profile:
                id: 13731211
                first_name: Jessica
                last_name: Test
                masked_card_number: null
                card_type: visa
                expiration_month: 10
                expiration_year: 2018
                customer_id: 19195410
                current_vault: bogus
                vault_token: '1'
                billing_address: 123 Main St.
                billing_city: Boston
                billing_state: MA
                billing_zip: '02120'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
        '404':
          description: ''
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_payment_profiles-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_payment_profiles-format
      summary: List Payment Profiles for a Site
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## List Payment Profiles for a Site

        This method will return all of the active `payment_profiles` for a Site, or for one Customer within a site.  If no payment profiles are found, this endpoint will return an empty array, not a 404.
      parameters:
        - name: customer_id
          in: query
          description: The ID of the customer for which you wish to list payment profiles
          type: integer
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/payment-profiles/list-payment-profiles-for-a-site-outuput'
          examples:
            application/json:
              - payment_profile:
                  id: 10089892
                  first_name: Chester
                  last_name: Tester
                  customer_id: 14543792
                  current_vault: bogus
                  vault_token: '0011223344'
                  billing_address: 456 Juniper Court
                  billing_city: Boulder
                  billing_state: CO
                  billing_zip: '80302'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  bank_name: Bank of Kansas City
                  masked_bank_routing_number: XXXX6789
                  masked_bank_account_number: XXXX3344
                  bank_account_type: checking
                  bank_account_holder_type: personal
                  payment_type: bank_account
              - payment_profile:
                  id: 10188522
                  first_name: Frankie
                  last_name: Tester
                  customer_id: 14543712
                  current_vault: bogus
                  vault_token: '123456789'
                  billing_address: 123 Montana Way
                  billing_city: Los Angeles
                  billing_state: CA
                  billing_zip: '90210'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  bank_name: Bank of Kansas City
                  masked_bank_routing_number: XXXX6789
                  masked_bank_account_number: XXXX6789
                  bank_account_type: checking
                  bank_account_holder_type: personal
                  payment_type: bank_account
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_payment_profiles-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  '/subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}/change_payment_profile.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: payment_profile_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-payment_profiles-payment_profile_id-change_payment_profile-json
      summary: Create Default Payment Profile
      tags:
        - Payment Profiles
      description: |-
        ## Create Default Payment Profile

        This will change the default payment profile on the subscription to the existing payment profile with the id specified.

        You must elect to change the existing payment profile to a new payment profile ID in order to receive a satisfactory response from this endpoint.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/subscriptions/change-default-payment-profile-response'
          examples:
            application/json:
              payment_profile:
                id: 10211899
                first_name: Amelia
                last_name: Example
                masked_card_number: XXXX-XXXX-XXXX-1
                card_type: bogus
                expiration_month: 2
                expiration_year: 2018
                customer_id: 14399371
                current_vault: bogus
                vault_token: '1'
                billing_address: ''
                billing_city: ''
                billing_state: ''
                billing_zip: ''
                billing_country: ''
                customer_vault_token: null
                billing_address_2: ''
                payment_type: credit_card
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - This is already the current payment profile
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-paymentprofiles-paymentprofileid-changepaymentprofilejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/payment_profiles/{payment_profile_id}.json':
    parameters:
      - name: payment_profile_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_payment_profiles-payment_profile_id-json
      summary: Read Payment Profile - Bank Account
      tags:
        - Payment Profiles
      description: |-
        ## Read a Payment Profile - Bank Account

        Using the GET method you can retrieve a Payment Profile identified by its unique ID. 

        Please note that a different JSON object will be returned if the card method on file is a credit card.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payment-profile/read-payment-output-bank-account'
          examples:
            application/json:
              payment_profile:
                id: 10089892
                first_name: Chester
                last_name: Tester
                customer_id: 14543792
                current_vault: bogus
                vault_token: '0011223344'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: ''
                bank_name: Bank of Kansas City
                masked_bank_routing_number: XXXX6789
                masked_bank_account_number: XXXX3344
                bank_account_type: checking
                bank_account_holder_type: personal
                payment_type: bank_account
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_paymentprofiles-paymentprofileidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_payment_profiles-payment_profile_id-format
      summary: Update the Payment Profile
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## Update the Payment Profile

        Augment an existing `payment_profile_id` by using this endpoint and method.

        ## Partial Card Updates

        In the event that you are using the Authorize.net or Stripe payment gateways, you can update just the billing and contact information for a payment method. Note the lack of credit-card related data contained in the JSON payload. 

        In this case, the following JSON is acceptable:

        ```
        {
          "payment_profile": {
            "first_name": "Kelly",
            "last_name": "Test",
            "billing_address": "789 Juniper Court",
            "billing_city": "Boulder",
            "billing_state": "CO",
            "billing_zip": "80302",
            "billing_country": "US",
            "billing_address_2": null
          }
        }
        ```

        The result will be that you have updated the billing information for the card, yet retained the original card number data. 

        ## Specific notes on updating payment profiles

        - Merchants with **Authorize.net** or **Stripe** as their payment gateway can update their Customer’s credit cards without passing in the full credit card number and CVV.

        - If you are using **Authorize.net** or **Stripe**, Chargify will ignore the credit card number and CVV when processing an update via the API, and attempt a partial update instead. If you wish to change the card number on a payment profile, you will need to create a new payment profile for the given customer.

        - A Payment Profile cannot be updated with the attributes of another type of Payment Profile. For example, if the payment profile you are attempting to update is a credit card, you cannot pass in bank account attributes (like `bank_account_number`), and vice versa.

        - Updating a payment profile directly will not trigger an attempt to capture a past-due balance. If this is the intent, update the card details via the Subscription instead.

        - If you are using Authorize.net or Stripe, you may elect to manually trigger a retry for a past due subscription after a partial update.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payments/update-payment-profile'
            example:
              payment_profile:
                first_name: Graham
                last_name: Test
                full_number: '4111111111111111'
                card_type: master
                expiration_month: '04'
                expiration_year: '2030'
                current_vault: bogus
                vault_token: '1'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                billing_address_2: null
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment_profile:
                id: 10090015
                first_name: Graham
                last_name: Test
                masked_card_number: XXXX-XXXX-XXXX-1111
                card_type: visa
                expiration_month: 10
                expiration_year: 2022
                customer_id: 14543792
                current_vault: bogus
                vault_token: '1'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_payment_profiles-payment_profile_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: payment_profile_id
        in: path
        required: true
        type: string
    delete:
      operationId: DELETE_subscriptions-subscription_id-payment_profiles-payment_profile_id-format
      summary: Delete Payment Profile
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Delete Payment Profile

        This will delete a payment profile belonging to the Customer on the Subscription.

        **Note**: If the Customer has multiple Subscriptions, the payment profile will be removed from all of them.

        **Note**: Please note that if you delete the _default_ payment profile for a subscription, you will need to "specify another payment profile to be the default":#change-default-payment-profile through the api, or either prompt the user to enter a card in the billing portal or on the self-service page, or visit the Payment Details tab on the subscription in the Admin UI and use the "Add New Credit Card" or "Make Active Payment Method" link, (depending on whether there are other cards present).

        Response will be 204 / No content.
      responses:
        '204':
          description: No Content
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-payment_profiles-payment_profile_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/bank_accounts/{bank_account_id}/verification.json':
    parameters:
      - name: bank_account_id
        in: path
        required: true
        type: number
    put:
      operationId: PUT_bank_accounts-verification
      summary: Verify the Bank Account
      tags:
        - Payment Profiles
      description: |-
        # Verify the Bank Account

        Submit the two small deposit amounts the customer received in their bank account in order to verify the bank account. (Stripe only)
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              bank_account_verification:
                type: object
                properties:
                  deposit_1_in_cents:
                    type: integer
                  deposit_2_in_cents:
                    type: integer
            example:
              bank_account_verification:
                deposit_1_in_cents: 32
                deposit_2_in_cents: 45
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payment-profile/read-payment-output-bank-account'
          examples:
            application/json:
              payment_profile:
                id: 10089892
                first_name: Chester
                last_name: Tester
                customer_id: 14543792
                current_vault: stripe_connect
                vault_token: cus_0123abc456def
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: ''
                bank_name: Bank of Kansas City
                masked_bank_routing_number: XXXX6789
                masked_bank_account_number: XXXX3344
                bank_account_type: checking
                bank_account_holder_type: personal
                payment_type: bank_account
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'You have tried to verify this bank account 10 times. To continue trying to verify the account, please reach out to us directly.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_bank_accounts-verification
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/products.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_product_families-product_family_id-products-json
      summary: Create a Product
      tags:
        - Products
      description: |-
        ## Create a Product

        Use this method to create a product within your Chargify Site.

        ## Input Attributes (Create)

        | price_in_cents           | The product price, in integer cents                                                                                                                                                                                                                                        |
        |--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | name                     | The product name                                                                                                                                                                                                                                                           |
        | handle                   | The product API handle                                                                                                                                                                                                                                                     |
        | description              | The product description                                                                                                                                                                                                                                                    |
        | product_family_id        | Nested attributes pertaining to the product family to which this product belongs                                                                                                                                                                                           |
        | accounting_code          | The product family accounting code (has no bearing in Chargify, may be used within your app)                                                                                                                                                                               |
        | interval_unit            | A string representing the interval unit for this product, either `month` or `day`                                                                                                                                                                                          |
        | interval                 | The numerical interval. i.e. an interval of `30` coupled with an interval_unit of `day` would mean this product would renew every 30 days                                                                                                                                  |
        | initial_charge_in_cents  | The up front charge you have specified.                                                                                                                                                                                                                                    |
        | trial_price_in_cents     | The price of the trial period for a subscription to this product, in integer cents.                                                                                                                                                                                        |
        | trial_interval           | A numerical interval for the length of the trial period of a subscription to this product. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval                                             |
        | trial_interval_unit      | A string representing the trial interval unit for this product, either `month` or `day`                                                                                                                                                                                    |
        | expiration_interval      | A numerical interval for the length a subscription to this product will run before it expires. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval                                         |
        | expiration_interval_unit | A string representing the trial interval unit for this product, either month or day                                                                                                                                                                                        |
        | require_credit_card      | Boolean                                                                                                                                                                                                                                                                    |
        | request_credit_card      | Boolean                                                                                                                                                                                                                                                                    |
        | require_billing_address  | Boolean                                                                                                                                                                                                                                                                    |
        | request_billing_address  | Boolean                                                                                                                                                                                                                                                                    |
        | request_shipping_address  | Boolean                                                                                                                                                                                                                                                                    |
        | require_shipping_address  | Boolean                                                                                                                                                                                                                                                                    |
        | taxable                  | Boolean                                                                                                                                                                                                                                                                    |
        | trial_type               | The type of trial for this product, either `no_obligation` or `payment_expected`.                                                                                                                                                                                          |
        | auto_create_signup_page  | A `true` or `false` value (default true) indicating whether or not you want a Public Page" to be automatically created for this product                                                                                                                                    |
        | update_return_url        | The url to which a customer will be returned after a successful account update                                                                                                                                                                                             |
        | return_url               | If `auto_create_signup_page` is `true`, this will set the url to which a customer will be returned after a successful signup for the auto-created signup page.                                                                                                             |
        | return_params            | The parameters to be appended to both update_return_url and, (if `auto_create_signup_page` is `true`,) `return_url` for the auto-created signup page. See [Return URLs and Parameters](https://help.chargify.com/products/product-options.html#return-url-and-parameters). |
        | tax_code                 | A string representing the tax code related to the product type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.                                                                      |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/products/create-a-product-input'
            example:
              product:
                name: Gold Plan
                handle: gold
                description: This is our gold plan.
                accounting_code: '123'
                request_credit_card: true
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                auto_create_signup_page: true
                tax_code: D0000000
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/products/create-a-product-output'
          examples:
            application/json:
              product:
                id: 4364984
                name: Gold Plan
                handle: gold
                description: This is our gold plan.
                accounting_code: '123'
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: null
                created_at: '2016-11-04T16:31:15-04:00'
                updated_at: '2016-11-04T16:31:15-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: null
                trial_interval: null
                trial_interval_unit: null
                archived_at: null
                require_credit_card: true
                return_params: null
                taxable: false
                update_return_url: null
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: null
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 301078
                    return_url: null
                    return_params: null
                    url: 'https://general-goods.chargify.com/subscribe/ftgbpq7f5qpr/gold'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Trial Price: must be given if a trial interval (duration) is provided.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-productsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_products-format
      summary: Read Products for a Product Family
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read Products

        This method allows to retrieve a list of Products belonging to a Product Family. `product_family_id` is the required parameter. The response will contain a "products" array with "product" elements.

        ## 404 Response

        If the product family does not exist or fails to retrieve a list of products, a plain text message will be returned.

        ```
        A valid product_family_id is required
        ```
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/products/list-products-output'
          examples:
            application/json:
              - product:
                  id: 3801242
                  name: Free product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-04-21T16:08:39-04:00'
                  updated_at: '2016-08-03T11:27:53-04:00'
                  price_in_cents: 10000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 0
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 4
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 283460
                      return_url: null
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product'
              - product:
                  id: 3858146
                  name: Calendar Billing Product
                  handle: calendar-billing-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-07-05T13:07:38-04:00'
                  updated_at: '2016-07-05T13:07:38-04:00'
                  price_in_cents: 10000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 289193
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/gxdbfxzxhcjq/calendar-billing-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/products/{product_id}.json':
    parameters:
      - name: product_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_products-product_id-json
      summary: Read Product
      tags:
        - Products
      description: |-
        ## Read a Product

        This endpoint allows you to read the current details of a product that you've created in Chargify.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-a-product-output'
          examples:
            application/json:
              product:
                id: 4535635
                name: Paid Annual Seats
                handle: paid-annual-seats
                description: Paid annual seats for our commercial enterprise product
                accounting_code: paid-annual-seats
                request_credit_card: true
                expiration_interval: 1
                expiration_interval_unit: day
                created_at: '2017-08-25T10:25:31-05:00'
                updated_at: '2018-01-16T12:58:04-06:00'
                price_in_cents: 10000
                interval: 12
                interval_unit: month
                initial_charge_in_cents: 4900
                trial_price_in_cents: 1000
                trial_interval: 14
                trial_interval_unit: day
                archived_at: null
                require_credit_card: true
                return_params: 'id={subscription_id}&ref={customer_reference}'
                taxable: true
                update_return_url: 'http://www.example.com'
                tax_code: D0000000
                initial_charge_after_trial: false
                version_number: 4
                update_return_params: 'id={subscription_id}&ref={customer_reference}'
                product_family:
                  id: 1025627
                  name: Acme Products
                  description: ''
                  handle: acme-products
                  accounting_code: null
                public_signup_pages: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_products-product_id-json
      summary: Update a Product
      tags:
        - Products
      description: |-
        ## Update a Product

        Use this method to change aspects of an existing product. 

        ## Input Attributes Update Notes

        + `update_return_params` The parameters we will append to your `update_return_url`. See Return URLs and Parameters
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/products/update-product-input'
            example:
              product:
                name: Platinum Plan
                handle: platinum
                description: This is our platinum plan.
                accounting_code: '123'
                request_credit_card: true
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                auto_create_signup_page: true
                tax_code: D0000000
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/products/update-a-product-output'
          examples:
            application/json:
              product:
                id: 4365034
                name: Platinum Plan
                handle: platinum
                description: This is our platinum plan.
                accounting_code: '123'
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: null
                created_at: '2016-11-04T16:34:29-04:00'
                updated_at: '2016-11-04T16:37:11-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: null
                trial_interval: null
                trial_interval_unit: null
                archived_at: null
                require_credit_card: true
                return_params: null
                taxable: false
                update_return_url: null
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: null
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 301079
                    return_url: null
                    return_params: null
                    url: 'https://general-goods.chargify.com/subscribe/wgyd96tb5pj9/platinum'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Name: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_products-product_id-json
      summary: Archive a Product
      tags:
        - Products
      description: |-
        ## Archive a Product

        Sending a DELETE request to this endpoint will archive the product. All current subscribers will be unffected; their subscription/purchase will continue to be charged monthyl. 

        This will restrict the option to chose the product for purchase via the Billing Portal, as well as disable Public Signup Pages for the product.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/archive-a-product-output'
          examples:
            application/json:
              product:
                id: 4535638
                name: Business Monthly
                handle: null
                description: Business Monthly
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2017-08-25T10:25:31-05:00'
                updated_at: '2018-01-16T13:02:44-06:00'
                price_in_cents: 4900
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 0
                trial_interval: 1
                trial_interval_unit: day
                archived_at: '2018-01-16T13:02:44-06:00'
                require_credit_card: false
                return_params: ''
                taxable: false
                update_return_url: ''
                tax_code: ''
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: ''
                product_family:
                  id: 1025627
                  name: Acme Products
                  description: ''
                  handle: acme-products
                  accounting_code: null
                public_signup_pages: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/products/handle/{api_handle}.json':
    parameters:
      - name: api_handle
        in: path
        required: true
        type: string
    get:
      operationId: GET_products-handle-handle-format
      summary: Read the Product via API Handle
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read Product via API Handle

        This method allows to retrieve a Product object by its `api_handle`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/products/read-the-product-via-chargify-id'
          examples:
            application/json:
              product:
                id: 3903594
                name: No cost product
                handle: no-cost-product
                description: ''
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2016-09-02T17:11:29-04:00'
                updated_at: '2016-11-30T11:46:13-05:00'
                price_in_cents: 0
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 5
                trial_interval: 1
                trial_interval_unit: month
                archived_at: null
                require_credit_card: false
                return_params: reference=5678
                taxable: false
                update_return_url: ''
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: reference=5678
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 281174
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xgdxtk4vhtbz/no-cost-product'
                  - id: 282270
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xxqmrgtsbd9k/no-cost-product'
                  - id: 291587
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/pvhwss7zjjnh/no-cost-product'
                  - id: 294832
                    return_url: 'http://www.example.com/'
                    return_params: engine=md7a
                    url: 'https://general-goods.chargify.com/subscribe/m6tbcq4mcgpw/no-cost-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-handle-handle-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/products/{id}.json':
    parameters:
      - name: id
        in: path
        description: Product ID.
        required: true
        type: number
    get:
      operationId: GET_products-id-format
      summary: Read the Product by Product ID
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read the Product by ID

        This method allows to retrieve a Product object by its the `product_id`. The response will contain a single product object.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              product:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  handle:
                    type: string
                  description:
                    type: string
                  accounting_code:
                    type: string
                  request_credit_card:
                    type: boolean
                  expiration_interval:
                    type: 'null'
                  expiration_interval_unit:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  price_in_cents:
                    type: integer
                  interval:
                    type: integer
                  interval_unit:
                    type: string
                  initial_charge_in_cents:
                    type: 'null'
                  trial_price_in_cents:
                    type: integer
                  trial_interval:
                    type: integer
                  trial_interval_unit:
                    type: string
                  archived_at:
                    type: 'null'
                  require_credit_card:
                    type: boolean
                  return_params:
                    type: string
                  taxable:
                    type: boolean
                  update_return_url:
                    type: string
                  initial_charge_after_trial:
                    type: boolean
                  version_number:
                    type: integer
                  update_return_params:
                    type: string
                  product_family:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      handle:
                        type: string
                      accounting_code:
                        type: 'null'
                  public_signup_pages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        return_url:
                          type: string
                        return_params:
                          type: string
                        url:
                          type: string
          examples:
            application/json:
              product:
                id: 3861800
                name: Trial Product
                handle: trial-product
                description: Trial period with payment expected at end of trial.
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2016-07-08T09:53:55-04:00'
                updated_at: '2016-09-05T13:00:36-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 0
                trial_interval: 7
                trial_interval_unit: day
                archived_at: null
                require_credit_card: true
                return_params: ''
                taxable: false
                update_return_url: ''
                initial_charge_after_trial: false
                version_number: 6
                update_return_params: ''
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 294791
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /product_families.json:
    post:
      operationId: POST_product_families-product_family_id-products-format
      summary: Create a Product Family
      tags:
        - Product
        - incomplete
        - Product Families
      description: |-
        ## Create a Product Family

        This method will create a Product Family within your Chargify Domain. Create a Product Family to act as a container for your products, components and coupons.

        ## 422 Errors

        If you receive a `422 Unprocessable Entity` error, please check the JSON response for missing elements.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/product-families/create-product-family-input'
            example:
              product_family:
                name: Acme Projects
                description: Amazing project management tool
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/product-families/create-product-family-output'
          examples:
            application/json:
              product_family:
                id: 933860
                name: Acme Projects
                description: Amazing project management tool
                handle: acme-projects
                accounting_code: null
        '422':
          description: Unprocessable Entity
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_product_families-product_family_id-products-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  '/product_families/{id}.json':
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: POST_product_families-id-format
      summary: Read Product Family via Product Family ID
      tags:
        - Product Family
        - incomplete
        - Product Families
      description: |-
        ## Read Product Family via Product Family ID

        This method allows to retrieve a Product Family via the `product_family_id`. The response will contain a Product Family object.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/product-families/list-product-family-by-id'
          examples:
            application/json:
              product_family:
                id: 527890
                name: Acme Projects
                description: ''
                handle: billing-plans
                accounting_code: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_product_families-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /reason_codes.json:
    post:
      operationId: POST_reason_codes-json
      summary: Create Reason Code
      tags:
        - ReasonCode
        - Reason Codes
      description: |-
        ## Create Reason Code

        This method gives a merchant the option to create a reason codes for a given Site.

        ## ReasonCode Input Attributes

        In order to create a ReasonCode you must provide a code and a description.

        | code           | The unique identifier for the ReasonCode.                                                                                                                                                                                               |
        |--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | description | The friendly summary of what the code signifies |
        | position |  The order that code appears in in lists |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions//reason_codes/create_code_request'
            example:
              reason_code:
                code: NOTHANKYOU
                description: No thank you!
                position: 5
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/show_response'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Code: cannot be blank.'
                - 'Code: This code is already in use.'
                - 'Description: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_reasoncodesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_reason_codes-json
      summary: Read Reason Codes for a Site
      tags:
        - Reason Codes
      description: |-
        ## Index View

        This method gives a merchant the option to retrieve a list of all of the current churn codes for a given site.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/list_response'
          examples:
            application/json:
              - reason_code:
                  id: 2
                  site_id: 2
                  code: LARGE
                  description: This is too complicated
                  position: 1
                  created_at: '2017-02-16T16:49:07-05:00'
                  updated_at: '2017-02-17T16:29:51-05:00'
              - reason_code:
                  id: 1
                  site_id: 2
                  code: CH1
                  description: This doesnt meet my needs
                  position: 2
                  created_at: '2017-02-16T16:48:45-05:00'
                  updated_at: '2017-02-17T16:29:59-05:00'
              - reason_code:
                  id: 5
                  site_id: 2
                  code: HAN99
                  description: Hard to setup
                  position: 3
                  created_at: '2017-02-17T16:29:42-05:00'
                  updated_at: '2017-02-17T16:29:59-05:00'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_reasoncodesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/reason_codes/{reason_code_id}.json':
    parameters:
      - name: reason_code_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_reason_codes-reason_code_id-json
      summary: Read a Specific Reason Code
      tags:
        - Reason Codes
      description: |-
        ## Read a Specific Reason Code

        This method gives a merchant the option to retrieve a list of a particular code for a given Site by providing the unique numerical ID of the code.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/show_response'
          examples:
            application/json:
              reason_code:
                id: 1
                site_id: 2
                code: CHEAP
                description: This is muuy caro
                position: 2
                created_at: '2017-02-16T16:48:45-05:00'
                updated_at: '2017-02-17T16:29:59-05:00'
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_reason_codes-reason_code_id-json
      summary: Update Reason Code
      tags:
        - Reason Codes
      description: |-
        ## Update Reason Code

        This method gives a merchant the option to update an existing reason code for a given site.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/reason_code/update_response'
            example:
              reason_code:
                id: 1
                site_id: 2
                code: '00023'
                description: Not using the product currently
                position: 2
                created_at: '2017-02-16T16:48:45-05:00'
                updated_at: '2017-02-21T16:33:10-05:00'
      responses:
        '200':
          description: ''
          schema:
            type: object
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_reason_codes-reason_code_id-json
      summary: Delete a Reason Code
      tags:
        - ReasonCode
        - Reason Codes
      description: |-
        ## Delete a Reason Code

        This method gives a merchant the option to delete one reason code from the Churn Reason Codes. This code will be immediately removed. This action is not reversable.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_codes/delete_response'
          examples:
            application/json:
              ok: ok
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /referral_codes/validate.json:
    get:
      operationId: GET_referral_codes-validate-json
      summary: Validating Referral Codes via the API
      tags:
        - Referral Codes
      description: |-
        ## Validating Referral Codes

        Use this method to determine if the referral code is valid and applicable within your Site.
      parameters:
        - $ref: '#/parameters/trait:referralCode:code'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/referral/validate-response'
          examples:
            application/json:
              referral_code:
                id: 1032514
                site_id: 31615
                subscription_id: 16254270
                code: 9b6cdw
        '404':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: string
          examples:
            application/json:
              errors: Referral code is invalid.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_referralcodes-validatejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/refunds.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-refunds-json
      summary: Create an External Refund
      tags:
        - Refunds
      description: |-
        ## Create an External Refund

        Use the following method to record an external refund within Chargify. Please note the existence of the following object.

        ```
        "external": 1
        ```

        This addition to the payload categorizes this refund as **external**.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/refunds/external/create-an-external-refund-request'
            example:
              refund:
                amount: 20
                memo: 'Refunded with check# 123'
              external: 1
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/refunds/external/create-an-external-refund-response'
          examples:
            application/json:
              refund:
                id: 162275149
                subscription_id: 15236915
                type: Refund
                kind: manual
                transaction_type: refund
                success: true
                amount_in_cents: 2000
                memo: 'Refunded with check# 123'
                created_at: '2016-11-14T15:24:41-05:00'
                starting_balance_in_cents: 0
                ending_balance_in_cents: 0
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3792003
                tax_id: null
                component_id: null
                statement_id: 80500632
                customer_id: 14714298
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-refundsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/renewals/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-renewals-preview-json
      summary: Renewal Preview
      tags:
        - incomplete
        - Renewal Preview
      description: |-
        ## Renewal Preview

        The Chargify API allows you to preview a renewal by posting to the renewals endpoint. 


        ## Renewal Output Fields

        In the server response you will recieve an array of allocation objects with the following fields:

        | next_assessment_at        | The timestamp for the subscription’s next renewal                                                                                                                                                                         |
        |---------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | existing_balance_in_cents | An integer representing the amount of the subscription’s current balance                                                                                                                                                  |
        | subtotal_in_cents         | An integer representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal                                                                                                   |
        | total_discount_in_cents   | An integer representing the amount of the coupon discounts that will be applied to the next renewal                                                                                                                       |
        | total_tax_in_cents        | An integer representing the total tax charges that will be assessed at the next renewal                                                                                                                                   |
        | total_in_cents            | An integer representing the total amount owed, less any discounts, that will be assessed at the next renewal                                                                                                              |
        | total_amount_due_in_cents | An integer representing the existing_balance_in_cents plus the total_in_cents                                                                                                                                             |
        | uncalculated_taxes        | A boolean indicating whether or not additional taxes will be calculated at the time of renewal. This will be true if you are using Avalara and the address of the subscription is in one of your defined taxable regions. |
        | line_items                | An array of objects representing the individual transactions that will be created at the next renewal                                                                                                                     |
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              renewal_preview:
                type: object
                properties:
                  next_assessment_at:
                    type: string
                  subtotal_in_cents:
                    type: integer
                  total_tax_in_cents:
                    type: integer
                  total_discount_in_cents:
                    type: integer
                  total_in_cents:
                    type: integer
                  existing_balance_in_cents:
                    type: integer
                  total_amount_due_in_cents:
                    type: integer
                  uncalculated_taxes:
                    type: boolean
                  line_items:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_type:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        memo:
                          type: string
                        discount_amount_in_cents:
                          type: integer
                        taxable_amount_in_cents:
                          type: integer
          examples:
            application/json:
              renewal_preview:
                next_assessment_at: '2017-03-13T12:50:55-04:00'
                subtotal_in_cents: 6000
                total_tax_in_cents: 0
                total_discount_in_cents: 0
                total_in_cents: 6000
                existing_balance_in_cents: 0
                total_amount_due_in_cents: 6000
                uncalculated_taxes: false
                line_items:
                  - transaction_type: charge
                    kind: baseline
                    amount_in_cents: 5000
                    memo: Gold Product (03/13/2017 - 04/13/2017)
                    discount_amount_in_cents: 0
                    taxable_amount_in_cents: 0
                  - transaction_type: charge
                    kind: quantity_based_component
                    amount_in_cents: 1000
                    memo: 'Quantity Component: 10 Quantity Components'
                    discount_amount_in_cents: 0
                    taxable_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-renewals-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /sales_receipts.json:
    get:
      operationId: GET_sales_receipts-json
      summary: Read Sales Receipts
      tags:
        - incomplete
        - Sales Receipts
      description: |-
        ## Pagination and Filtering

        Using pagination The results can be filtered by date or number.  Traversal is possible using the number filters.

        ## Traversal/Pagination

        Pagination is achieved through the use of the `before_number` or `after_number` filters.  By default, the records are returned in descending `number` order, i.e. newest receipts first.  With each response, a `next` link is provided when there are more results.

        ### Example

        Consider a Site with 1000 Sales Receipts, numbered 1 through 1000.

        #### First Request in Traversal

        ```
        GET /sales_receipts
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts",
            "next": "https://acme.chargify.com/sales_receipts?before_number=981"
          },
          "meta": {
            "total": 1000,
            "count": 20
          },
          "data": [
            { number: 1000, ...},
            ... 18 more records ....
            { number: 981, ...}
          ]
        }
        ```

        #### Next Request in Traversal

        ```
        GET /sales_receipts?before_number=981
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?before_number=981",
            "next": "https://acme.chargify.com/sales_receipts?before_number=961"
          },
          "meta": {
            "total": 980,
            "count": 20
          },
          "data": [
            { number: 980, ...},
            ... 18 more records ....
            { number: 961, ...}
          ]
        }
        ```

        #### Last Request in Traversal

        ```
        GET /sales_receipts?before_number=21
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?before_number=21",
            "next": null
          },
          "meta": {
            "total": 20,
            "count": 20
          },
          "data": [
            { number: 20, ...},
            ... 18 more records ....
            { number: 1, ...}
          ]
        }
        ```

        #### Subsequent Fetches

        Now that we have ingested "all" of the Sales Receipts for the Site, and we have recorded that our highest `number` was 1000, we can periodically poll to get the new Receipts, always using our new highest number processed:

        ```
        GET /sales_receipts?after_number=1000
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?after_number=1000",
            "next": null
          },
          "meta": {
            "total": 3,
            "count": 3
          },
          "data": [
            { number: 1003, ...},
            { number: 1002, ...},
            { number: 1001, ...}
          ]
        }
        ```
      parameters:
        - name: before_number
          in: query
          description: Filters the result to include only Sales Receipts with numbers numerically lower than the given value.
          type: number
        - name: after_number
          in: query
          description: Filters the result to include only Sales Receipts with numbers numerically lower than the given value.
          type: number
        - name: start_date
          in: query
          description: 'A date string, in the format `YYYY-MM-DD`, that filters the result to include only Sales Receipts generated on or after the given date.'
          type: string
        - name: end_date
          in: query
          description: 'A date string, in the format `YYYY-MM-DD`, that filters the result to include only Sales Receipts generated on or before the given date.'
          type: string
        - name: direction
          in: query
          description: 'Toggles the order of the results between descending `number` order (`desc`, or newest first) or ascending `number` order (`asc`, or oldest first).'
          type: string
          default: desc
          enum:
            - desc
            - asc
        - name: Accept
          in: header
          description: '`application/json`'
          type: string
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/sales-receipts/list-sales-receipts'
          examples:
            application/json:
              links:
                self: 'http://subdomain.chargify.com/sales_receipts'
                next: 'http://subdomain.chargify.com/sales_receipts?before_number=6'
              meta:
                count: 20
                total: 25
              data: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_salesreceiptsjson
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          enabled: false
          dynamic: false
  '/sales_receipts/{id}.json':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      operationId: GET_sales_receipts-id-json
      summary: Read a Sales Receipt
      tags:
        - incomplete
        - Sales Receipts
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/sales-receipts/get-a-sales-receipt-output'
          examples:
            application/json:
              id: f22b6080-4c28-11e5-93ee-000a27020040
              site_id: 1
              subscription_id: 1
              transaction_time: '2015-08-26T15:30:45-04:00'
              number: 1
              currency: USD
              subtotal_in_cents: 7200
              discount_in_cents: 720
              taxable_subtotal_in_cents: 6480
              tax_in_cents: 549
              total_in_cents: 7029
              liability_debit_in_cents: 0
              customer:
                id: 1
                first_name: Mark
                last_name: Wahlberg
                email: marky@example.com
                organization: The Funky Bunch
                reference: marky
              shipping_address:
                line_1: 100 Shipping St.
                line_2: Apt 200
                city: Pleasantville
                state: CA
                zip: '12345'
                country: US
              billing_address:
                line_1: 1 Infinite Loop
                line_2: Suite 100
                city: Cupertino
                state: CA
                zip: '95014'
                country: US
              line_items:
                - transaction_id: 1
                  amount_in_cents: 2900
                  discount_in_cents: 290
                  tax_in_cents: 261
                  accounting_code: basic-plan-000
                  kind: baseline
                  item_type: Product
                  item_id: 1
                  item_name: Basic Plan
                  product_id: 1
                  taxable: true
                  description: Basic Plan (08/26/2015 - 09/26/2015)
                - transaction_id: 2
                  amount_in_cents: 1000
                  discount_in_cents: 100
                  tax_in_cents: 90
                  accounting_code: null
                  kind: quantity_based_component
                  item_type: QuantityBasedComponent
                  item_id: 1
                  item_name: Taxable Widget
                  product_id: 1
                  taxable: true
                  description: 'Taxable Widget: 10 units'
                - transaction_id: 3
                  amount_in_cents: 500
                  discount_in_cents: 50
                  tax_in_cents: 0
                  accounting_code: null
                  kind: quantity_based_component
                  item_type: QuantityBasedComponent
                  item_id: 2
                  item_name: Non-Taxable Widget
                  product_id: 1
                  taxable: false
                  description: 'Non-Taxable Widget: 5 units'
                - transaction_id: 4
                  amount_in_cents: 1000
                  discount_in_cents: 100
                  tax_in_cents: 90
                  accounting_code: null
                  kind: metered_component
                  item_type: MeteredComponent
                  item_id: 3
                  item_name: Taxable Minutes
                  product_id: 1
                  taxable: true
                  description: 'Taxable Minutes: 100 units'
                - transaction_id: 5
                  amount_in_cents: 500
                  discount_in_cents: 50
                  tax_in_cents: 0
                  accounting_code: null
                  kind: metered_component
                  item_type: MeteredComponent
                  item_id: 4
                  item_name: Non-Taxable Minutes
                  product_id: 1
                  taxable: false
                  description: 'Non-Taxable Minutes: 50 units'
                - transaction_id: 6
                  amount_in_cents: 100
                  discount_in_cents: 10
                  tax_in_cents: 9
                  accounting_code: null
                  kind: on_off_component
                  item_type: OnOffComponent
                  item_id: 6
                  item_name: Taxable Add-On
                  product_id: 1
                  taxable: true
                  description: Taxable Add-On
                - transaction_id: 7
                  amount_in_cents: 100
                  discount_in_cents: 10
                  tax_in_cents: 0
                  accounting_code: null
                  kind: on_off_component
                  item_type: OnOffComponent
                  item_id: 8
                  item_name: Non-Taxable Add-On
                  product_id: 1
                  taxable: false
                  description: Non-Taxable Add-On
                - transaction_id: 8
                  amount_in_cents: 1100
                  discount_in_cents: 110
                  tax_in_cents: 99
                  accounting_code: basic-plan-000
                  kind: initial
                  item_type: Product
                  item_id: 1
                  item_name: Basic Plan
                  product_id: 1
                  taxable: true
                  description: Initial/Startup fees
              discounts:
                - transaction_id: 9
                  amount_in_cents: -720
                  item_type: Coupon
                  item_id: 1
                  item_name: 10% Off
                  description: 'Coupon: 10PERCENT - Save 10% on new signups'
              taxes:
                - transaction_id: 10
                  amount_in_cents: 549
                  item_type: Tax
                  item_id: 1
                  item_name: CA Sales Tax
                  description: CA Sales Tax (10.0%)
              payments:
                - transaction_id: 11
                  liability_account: na
                  amount_in_cents: 7029
                  kind: null
                  description: 'Mark Wahlberg - Basic Plan: Signup payment'
                  payment_method:
                    masked_card_number: XXXX-XXXX-XXXX-1
                    card_expiration: 12/2022
                    card_brand: bogus
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_salesreceipts-idjson
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /sites/clear_data.json:
    post:
      operationId: POST_sites-clear_data-json
      summary: 'Clear all Site data:  (All)'
      tags:
        - Sites
      description: |-
        ## Clear all Site data:  (All)

        All product families, products, coupons, components, customers, and related subscriptions will be removed from the site.

        This call is asynchronous and there may be a delay before the site data is fully deleted. If you are clearing site data for an automated test, you will need to build in a delay and/or check that there are no products, etc., in the site before proceeding.

        ## Example

        Method: POST

        ```
        https://<subdomain>.chargify.com/sites/clear_data.json?cleanup_scope=all
        ```

        Required Parameter: cleanup_scope


        ## Response

        The response will be a string value of `200 OK`.
      parameters:
        - name: all
          in: query
          required: true
          type: string
          enum:
            - all
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_sites-cleardatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/statements/ids.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    get:
      operationId: GET_subscriptions-subscription_id-statements-ids-format
      summary: Read Statement IDs for a Subscription
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## Read Statement IDs for a Subscription

        This method will return a list of Statement IDs associated with one subscription. Use the IDs returned here in conjunction with [Read/Show by Chargify ID](#endpoint:nyiRmzkvKSQNGa6Ag).
         
        ## Sorting examples

        Say you would like to get the 10 most recently created statements. You would specify the following optional parameters:

        + sort as `created_at`
        + direction as `desc`
        + limit your `per_page` to `10.

        If you on the other hand wish to find the oldest closed statements you could do:

        + sort as `closed_at`
        + direction as `asc`
      parameters:
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: sort
          in: query
          description: 'Possible values: `created_at`, `opened_at`, or `closed_at`. This allows you to choose what you would like to sort on. (Defaults to `created_at`).'
          required: false
          type: string
        - name: direction
          in: query
          description: |+

            This parameter specifies the sorting order. With `asc` and `desc` values, you can choose whether the items are to be sorted in ascending or descending order. Default value is `asc`.

          required: false
          type: string
          enum:
            - 'Default:`asc`'
            - desc
        - name: per_page
          in: query
          description: 'This parameter indicates how many records to fetch in each request. Preset to 10,000.'
          required: false
          type: number
        - $ref: '#/parameters/trait:settledSinceUnix:settled_since'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/list-statement-ids-for-a-subscription-response'
          examples:
            application/json:
              statement_ids:
                - 79221109
                - 79221381
                - 79221642
                - 79221742
                - 79334531
                - 79702531
                - 79733833
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-statements-ids-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /statements/ids.json:
    get:
      operationId: GET_statements-ids-format
      summary: Read Statement IDs for a Site
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## List Statement IDs for a Site

        This method will return a list of Statement IDs associated with and entire Site. Use the IDs returned here in conjunction with [Read/Show by Chargify ID](#endpoint:nyiRmzkvKSQNGa6Ag).
      parameters:
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: per_page
          in: query
          description: 'This parameter indicates how many records to fetch in each request. Preset to 10,000.'
          required: false
          type: number
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
        - $ref: '#/parameters/trait:settledSinceUnix:settled_since'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/list-statement-ids-for-a-site-response'
          examples:
            application/json:
              statement_ids:
                - 67201893
                - 67266652
                - 67301249
                - 67301813
                - 80499378
                - 80499379
                - 80500632
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements-ids-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/statements.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-statements-json
      summary: Read Statements for a Subscription
      tags:
        - Statements
      description: |-
        ## List Statements for a Subscription

        This method will return the full HTML and content associated with a subscription on your Site.
      parameters:
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                statement:
                  type: object
                  properties:
                    id:
                      type: integer
                    basic_html_view:
                      type: string
                    closed_at:
                      type: string
                    created_at:
                      type: string
                    customer_billing_address:
                      type: string
                    customer_billing_address_2:
                      type: string
                    customer_billing_city:
                      type: string
                    customer_billing_country:
                      type: string
                    customer_billing_state:
                      type: string
                    customer_billing_zip:
                      type: string
                    customer_first_name:
                      type: string
                    customer_last_name:
                      type: string
                    customer_organization:
                      type: string
                    customer_shipping_address:
                      type: string
                    customer_shipping_address_2:
                      type: string
                    customer_shipping_city:
                      type: string
                    customer_shipping_country:
                      type: string
                    customer_shipping_state:
                      type: string
                    customer_shipping_zip:
                      type: string
                    ending_balance_in_cents:
                      type: integer
                    future_payments:
                      type: array
                      items:
                        type: object
                    html_view:
                      type: string
                    memo:
                      type: string
                    opened_at:
                      type: string
                    settled_at:
                      type: string
                    starting_balance_in_cents:
                      type: integer
                    subscription_id:
                      type: integer
                    text_view:
                      type: string
                    updated_at:
                      type: string
                    total_in_cents:
                      type: integer
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          kind:
                            type:
                              - 'null'
                              - string
                          transaction_type:
                            type: string
                          success:
                            type: boolean
                          amount_in_cents:
                            type: integer
                          memo:
                            type: string
                          created_at:
                            type: string
                          starting_balance_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          gateway_used:
                            type:
                              - 'null'
                              - string
                          gateway_transaction_id:
                            type:
                              - 'null'
                              - string
                          gateway_order_id:
                            type: 'null'
                          payment_id:
                            type:
                              - integer
                              - 'null'
                          product_id:
                            type: integer
                          tax_id:
                            type: 'null'
                          component_id:
                            type: 'null'
                          statement_id:
                            type: integer
                          customer_id:
                            type: integer
                          item_name:
                            type: string
                          original_amount_in_cents:
                            type: 'null'
                          discount_amount_in_cents:
                            type: 'null'
                          taxable_amount_in_cents:
                            type:
                              - integer
                              - 'null'
                          taxations:
                            type: array
                            items:
                              type: object
                              properties:
                                tax_id:
                                  type: 'null'
                                tax_charge_id:
                                  type: integer
                                tax_name:
                                  type: string
                                rate:
                                  type: string
                                tax_amount_in_cents:
                                  type: integer
                                tax_rules:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      tax_rule_id:
                                        type: 'null'
                                      country_code:
                                        type: string
                                      subdivision_code:
                                        type: string
                                      rate:
                                        type: string
                                      tax_amount_in_cents:
                                        type: integer
                                      description:
                                        type: string
                          card_number:
                            type: string
                          card_expiration:
                            type: string
                          card_type:
                            type: string
                          refunded_amount_in_cents:
                            type: integer
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          event:
                            type: object
                            properties:
                              id:
                                type: integer
                              key:
                                type: string
                              message:
                                type: string
                              subscription_id:
                                type: integer
                              created_at:
                                type: string
                              event_specific_data:
                                type:
                                  - 'null'
                                  - object
                                properties:
                                  product_id:
                                    type: integer
                                  account_transaction_id:
                                    type:
                                      - integer
                                      - 'null'
                                  previous_subscription_state:
                                    type: string
                                  new_subscription_state:
                                    type: string
          examples:
            application/json:
              - statement:
                  id: 79221109
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221109)</div>
                            <div id="billing_statement_product">Acme Projects - Trial Product</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:20:13-04:00'
                  created_at: '2016-10-24T16:20:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:12-04:00'
                  settled_at: '2016-10-24T16:20:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221109)
                    billing@example.com                                Acme Projects - Trial Product
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221109
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..: $0.00
                    Current Charges...: $0.00
                    Payments..........: $0.00
                    Ending Balance....: $0.00

                    Balance Paid......: 10/24/2016 04:20PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                    ............  .....  ...............................................  ..........
                                                                                 Totals:       $0.00

                    ### Payments

                    No payments this period


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Signup Success                                                    
                    04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                  ct                                                                
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:20:13-04:00'
                  total_in_cents: 0
                  transactions:
                    - id: 159423810
                      subscription_id: 14900541
                      type: Charge
                      kind: trial
                      transaction_type: charge
                      success: true
                      amount_in_cents: 0
                      memo: Trial Price (10/24/2016 - 10/31/2016)
                      created_at: '2016-10-24T16:20:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 0
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3861800
                      tax_id: null
                      component_id: null
                      statement_id: 79221109
                      customer_id: 14399371
                      item_name: Trial Price
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                  events:
                    - event:
                        id: 342036408
                        key: signup_success
                        message: Successful signup for Amelia Example's subscription to Trial Product
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:13-04:00'
                        event_specific_data:
                          product_id: 3861800
                          account_transaction_id: null
              - statement:
                  id: 79221381
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221381)</div>
                            <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:21:13-04:00'
                  created_at: '2016-10-24T16:21:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:14-04:00'
                  settled_at: '2016-10-24T16:21:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221381)
                    billing@example.com                                   Acme Projects - Basic Plan
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221381
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..:  $0.00
                    Current Charges...: $42.50
                    Payments..........: $42.50
                    Ending Balance....:  $0.00

                    Balance Paid......: 10/24/2016 04:21PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50

                    ### Payments

                    Date/Time     Type   Detail                                               Amount
                    ............  .....  ...............................................  ..........
                    10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
                    04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Subscription State Change                                         
                    04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                                  trialing to active                                                
                    ............  ..................................................................
                    10/24/2016    Subscription Product Change                                       
                    04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                                  ct' to 'Basic Plan'                                               
                    ............  ..................................................................
                    10/24/2016    Billing Date Change                                               
                    04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                                  n from 10/31/2016 to 10/24/2016                                   
                    ............  ..................................................................
                    10/24/2016    Renewal Success                                                   
                    04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
                    ............  ..................................................................
                    10/24/2016    Payment Success                                                   
                    04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                                  Basic Plan                                                        
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:21:13-04:00'
                  total_in_cents: 4250
                  transactions:
                    - id: 159424439
                      subscription_id: 14900541
                      type: Charge
                      kind: baseline
                      transaction_type: charge
                      success: true
                      amount_in_cents: 4000
                      memo: Basic Plan (10/24/2016 - 11/24/2016)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 4000
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: 4000
                      taxations:
                        - tax_id: null
                          tax_charge_id: 159424444
                          tax_name: MA Tax
                          rate: '0.0625'
                          tax_amount_in_cents: 250
                          tax_rules:
                            - tax_rule_id: null
                              country_code: US
                              subdivision_code: MA
                              rate: '0.0625'
                              tax_amount_in_cents: 250
                              description: MA STATE TAX - MASSACHUSETTS
                    - id: 159424444
                      subscription_id: 14900541
                      type: Charge
                      kind: tax
                      transaction_type: charge
                      success: true
                      amount_in_cents: 250
                      memo: MA Tax (6.25%)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 4000
                      ending_balance_in_cents: 4250
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                    - id: 159424449
                      subscription_id: 14900541
                      type: Payment
                      kind: null
                      transaction_type: payment
                      success: true
                      amount_in_cents: 4250
                      memo: 'Amelia Example - Basic Plan: Renewal payment'
                      created_at: '2016-10-24T16:21:13-04:00'
                      starting_balance_in_cents: 4250
                      ending_balance_in_cents: 0
                      gateway_used: bogus
                      gateway_transaction_id: '53433'
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      card_number: XXXX-XXXX-XXXX-1
                      card_expiration: 01/2026
                      card_type: bogus
                      refunded_amount_in_cents: 0
                  events:
                    - event:
                        id: 342036536
                        key: subscription_state_change
                        message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_subscription_state: trialing
                          new_subscription_state: active
                    - event:
                        id: 342036540
                        key: subscription_product_change
                        message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_product_id: 3861800
                          new_product_id: 3792003
                    - event:
                        id: 342037380
                        key: billing_date_change
                        message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:11-04:00'
                        event_specific_data: null
                    - event:
                        id: 342037470
                        key: renewal_success
                        message: Successful renewal for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
                    - event:
                        id: 342037482
                        key: payment_success
                        message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-statementsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /statements.json:
    get:
      operationId: GET_statements-json
      summary: Read Statements for a Site
      tags:
        - Statements
      description: |-
        ## List Statements for a Site

        This method will return a paginated list of all Statements generated by the Subscriptions in your Site.

        Note that this endpoint returns a "lighter" set of the Statement attributes than the "List Statements for a Subscription" endpoint.  This endpoint omits the HTML and textual representations for the Statement: `basic_html_view`, `html_view`, and `text_view`.  If you require these attributes, you can either build them yourself based on the other data returned or fetch a single subscription via the "Read/Show by Chargify ID" endpoint.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                statement:
                  type: object
                  properties:
                    id:
                      type: integer
                    basic_html_view:
                      type: string
                    closed_at:
                      type: string
                    created_at:
                      type: string
                    customer_billing_address:
                      type: string
                    customer_billing_address_2:
                      type: string
                    customer_billing_city:
                      type: string
                    customer_billing_country:
                      type: string
                    customer_billing_state:
                      type: string
                    customer_billing_zip:
                      type: string
                    customer_first_name:
                      type: string
                    customer_last_name:
                      type: string
                    customer_organization:
                      type: string
                    customer_shipping_address:
                      type: string
                    customer_shipping_address_2:
                      type: string
                    customer_shipping_city:
                      type: string
                    customer_shipping_country:
                      type: string
                    customer_shipping_state:
                      type: string
                    customer_shipping_zip:
                      type: string
                    ending_balance_in_cents:
                      type: integer
                    future_payments:
                      type: array
                      items:
                        type: object
                    html_view:
                      type: string
                    memo:
                      type: string
                    opened_at:
                      type: string
                    settled_at:
                      type: string
                    starting_balance_in_cents:
                      type: integer
                    subscription_id:
                      type: integer
                    text_view:
                      type: string
                    updated_at:
                      type: string
                    total_in_cents:
                      type: integer
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          kind:
                            type:
                              - 'null'
                              - string
                          transaction_type:
                            type: string
                          success:
                            type: boolean
                          amount_in_cents:
                            type: integer
                          memo:
                            type: string
                          created_at:
                            type: string
                          starting_balance_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          gateway_used:
                            type:
                              - 'null'
                              - string
                          gateway_transaction_id:
                            type:
                              - 'null'
                              - string
                          gateway_order_id:
                            type: 'null'
                          payment_id:
                            type:
                              - integer
                              - 'null'
                          product_id:
                            type: integer
                          tax_id:
                            type: 'null'
                          component_id:
                            type: 'null'
                          statement_id:
                            type: integer
                          customer_id:
                            type: integer
                          item_name:
                            type: string
                          original_amount_in_cents:
                            type: 'null'
                          discount_amount_in_cents:
                            type: 'null'
                          taxable_amount_in_cents:
                            type:
                              - integer
                              - 'null'
                          taxations:
                            type: array
                            items:
                              type: object
                              properties:
                                tax_id:
                                  type: 'null'
                                tax_charge_id:
                                  type: integer
                                tax_name:
                                  type: string
                                rate:
                                  type: string
                                tax_amount_in_cents:
                                  type: integer
                                tax_rules:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      tax_rule_id:
                                        type: 'null'
                                      country_code:
                                        type: string
                                      subdivision_code:
                                        type: string
                                      rate:
                                        type: string
                                      tax_amount_in_cents:
                                        type: integer
                                      description:
                                        type: string
                          card_number:
                            type: string
                          card_expiration:
                            type: string
                          card_type:
                            type: string
                          refunded_amount_in_cents:
                            type: integer
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          event:
                            type: object
                            properties:
                              id:
                                type: integer
                              key:
                                type: string
                              message:
                                type: string
                              subscription_id:
                                type: integer
                              created_at:
                                type: string
                              event_specific_data:
                                type:
                                  - 'null'
                                  - object
                                properties:
                                  product_id:
                                    type: integer
                                  account_transaction_id:
                                    type:
                                      - integer
                                      - 'null'
                                  previous_subscription_state:
                                    type: string
                                  new_subscription_state:
                                    type: string
          examples:
            application/json:
              - statement:
                  id: 79221109
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221109)</div>
                            <div id="billing_statement_product">Acme Projects - Trial Product</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:20:13-04:00'
                  created_at: '2016-10-24T16:20:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:12-04:00'
                  settled_at: '2016-10-24T16:20:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221109)
                    billing@example.com                                Acme Projects - Trial Product
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221109
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..: $0.00
                    Current Charges...: $0.00
                    Payments..........: $0.00
                    Ending Balance....: $0.00

                    Balance Paid......: 10/24/2016 04:20PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                    ............  .....  ...............................................  ..........
                                                                                 Totals:       $0.00

                    ### Payments

                    No payments this period


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Signup Success                                                    
                    04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                  ct                                                                
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:20:13-04:00'
                  total_in_cents: 0
                  transactions:
                    - id: 159423810
                      subscription_id: 14900541
                      type: Charge
                      kind: trial
                      transaction_type: charge
                      success: true
                      amount_in_cents: 0
                      memo: Trial Price (10/24/2016 - 10/31/2016)
                      created_at: '2016-10-24T16:20:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 0
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3861800
                      tax_id: null
                      component_id: null
                      statement_id: 79221109
                      customer_id: 14399371
                      item_name: Trial Price
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                  events:
                    - event:
                        id: 342036408
                        key: signup_success
                        message: Successful signup for Amelia Example's subscription to Trial Product
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:13-04:00'
                        event_specific_data:
                          product_id: 3861800
                          account_transaction_id: null
              - statement:
                  id: 79221381
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221381)</div>
                            <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:21:13-04:00'
                  created_at: '2016-10-24T16:21:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:14-04:00'
                  settled_at: '2016-10-24T16:21:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221381)
                    billing@example.com                                   Acme Projects - Basic Plan
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221381
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..:  $0.00
                    Current Charges...: $42.50
                    Payments..........: $42.50
                    Ending Balance....:  $0.00

                    Balance Paid......: 10/24/2016 04:21PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50

                    ### Payments

                    Date/Time     Type   Detail                                               Amount
                    ............  .....  ...............................................  ..........
                    10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
                    04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Subscription State Change                                         
                    04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                                  trialing to active                                                
                    ............  ..................................................................
                    10/24/2016    Subscription Product Change                                       
                    04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                                  ct' to 'Basic Plan'                                               
                    ............  ..................................................................
                    10/24/2016    Billing Date Change                                               
                    04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                                  n from 10/31/2016 to 10/24/2016                                   
                    ............  ..................................................................
                    10/24/2016    Renewal Success                                                   
                    04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
                    ............  ..................................................................
                    10/24/2016    Payment Success                                                   
                    04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                                  Basic Plan                                                        
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:21:13-04:00'
                  total_in_cents: 4250
                  transactions:
                    - id: 159424439
                      subscription_id: 14900541
                      type: Charge
                      kind: baseline
                      transaction_type: charge
                      success: true
                      amount_in_cents: 4000
                      memo: Basic Plan (10/24/2016 - 11/24/2016)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 4000
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: 4000
                      taxations:
                        - tax_id: null
                          tax_charge_id: 159424444
                          tax_name: MA Tax
                          rate: '0.0625'
                          tax_amount_in_cents: 250
                          tax_rules:
                            - tax_rule_id: null
                              country_code: US
                              subdivision_code: MA
                              rate: '0.0625'
                              tax_amount_in_cents: 250
                              description: MA STATE TAX - MASSACHUSETTS
                    - id: 159424444
                      subscription_id: 14900541
                      type: Charge
                      kind: tax
                      transaction_type: charge
                      success: true
                      amount_in_cents: 250
                      memo: MA Tax (6.25%)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 4000
                      ending_balance_in_cents: 4250
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                    - id: 159424449
                      subscription_id: 14900541
                      type: Payment
                      kind: null
                      transaction_type: payment
                      success: true
                      amount_in_cents: 4250
                      memo: 'Amelia Example - Basic Plan: Renewal payment'
                      created_at: '2016-10-24T16:21:13-04:00'
                      starting_balance_in_cents: 4250
                      ending_balance_in_cents: 0
                      gateway_used: bogus
                      gateway_transaction_id: '53433'
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      card_number: XXXX-XXXX-XXXX-1
                      card_expiration: 01/2026
                      card_type: bogus
                      refunded_amount_in_cents: 0
                  events:
                    - event:
                        id: 342036536
                        key: subscription_state_change
                        message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_subscription_state: trialing
                          new_subscription_state: active
                    - event:
                        id: 342036540
                        key: subscription_product_change
                        message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_product_id: 3861800
                          new_product_id: 3792003
                    - event:
                        id: 342037380
                        key: billing_date_change
                        message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:11-04:00'
                        event_specific_data: null
                    - event:
                        id: 342037470
                        key: renewal_success
                        message: Successful renewal for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
                    - event:
                        id: 342037482
                        key: payment_success
                        message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statementsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/statements/{statement_id}.json':
    parameters:
      - name: statement_id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: GET_statements-statement_id-format
      summary: Read by Statement ID
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## Read/Show by Chargify ID

        This method will return all of the Statement attribute fields. All of these attributes are read only.

        ## PDF Versions of Statements

        Individual PDF Statements can be retrieved by using the Accept/Content-Type header application/pdf or appending .pdf as the `<format>` portion of the URL: `/statements/1.pdf`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/read-show-by-chargify-id'
          examples:
            application/json:
              statement:
                id: 79221109
                basic_html_view: |
                  <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                    <tbody>
                      <tr id="billing_statement_logo">
                        <td colspan="2" id="billing_statement_logo_cell">
                          <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                        </td>
                      </tr>
                      <tr id="billing_statement_masthead">
                        <td id="billing_statement_merchant_information">
                          <div id="billing_statement_merchant_name">My Awesome Company</div>
                          <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                        </td>
                        <td id="billing_statement_information">
                          <div id="billing_statement_title"> (79221109)</div>
                          <div id="billing_statement_product">Acme Projects - Trial Product</div>
                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_account_information">
                          <h2 class="billing_statement_section_title">Account Information</h2>
                          <div class="billing_statement_section_content vcard">
                    <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                    <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                    <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                    <div id="billing_statement_shipping_address" class="adr">
                      <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                      <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_shipping_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                    </div>

                    <div id="billing_statement_billing_address" class="adr">
                      <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                      <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_billing_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                    </div>
                    
                  </div>

                        </td>
                        <td id="billing_statement_summary">
                          <h2 class="billing_statement_section_title"> Summary</h2>
                          <div class="billing_statement_section_content">
                    <div id="billing_statement_summary_statement_date">
                      <span class="billing_statement_summary_label"> Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                    </div>
                    <div id="billing_statement_summary_usage_period">
                      <span class="billing_statement_summary_label">Billing Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                    </div>

                    <div id="billing_statement_summary_balance_summary">
                      <div id="billing_statement_summary_starting_balance">
                        <span class="billing_statement_summary_label">Starting Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_charges">
                        <span class="billing_statement_summary_label">Current Charges:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_payments_and_credits">
                        <span class="billing_statement_summary_label">Payments:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_balance_due">
                        <span class="billing_statement_summary_label">Ending Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                    </div>

                    <div id="billing_statement_summary_balance_paid">
                      <div id="billing_statement_summary_balance_paid_date">
                        <span class="billing_statement_summary_label">Balance Paid:</span>
                        <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                      </div>
                        <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                          PAID
                        </div>
                    </div>
                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_detail" colspan="2">
                          <h2 class="billing_statement_section_title"> Detail</h2>
                          <div class="billing_statement_section_content">
                    <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                      <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Charge</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Recurring</td>
                            <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                    <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                      <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Amount</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr class="billing_statement_listing_empty_results_row">
                            <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>


                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_period_activity" colspan="2">
                          <h2 class="billing_statement_section_title">Period Activity</h2>
                          <div class="billing_statement_section_content">
                    <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                      <thead>
                        <tr>
                          <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                          <th class="billing_statement_listing_cell_event">Event</th>
                          <th class="billing_statement_listing_cell_detail">Detail</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                          <td>Signup Success</td>
                          <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                        </tr>
                      </tbody>
                    </table>
                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td  colspan="2">
                          <p>We thank you for your continued business!</p>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                closed_at: '2016-10-24T16:20:13-04:00'
                created_at: '2016-10-24T16:20:12-04:00'
                customer_billing_address: 123 Anywhere Street
                customer_billing_address_2: ''
                customer_billing_city: Anywhere
                customer_billing_country: US
                customer_billing_state: MA
                customer_billing_zip: '02120'
                customer_first_name: Amelia
                customer_last_name: Example
                customer_organization: ''
                customer_shipping_address: 123 Anywhere Street
                customer_shipping_address_2: ''
                customer_shipping_city: Anywhere
                customer_shipping_country: US
                customer_shipping_state: MA
                customer_shipping_zip: '02120'
                ending_balance_in_cents: 0
                future_payments: []
                html_view: |
                  <div id="billing_statement">
                    <div id="billing_statement_account_information_section" class="billing_statement_section">
                      <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                      <div class="billing_statement_section_content vcard">
                    <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                    <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                    <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                    <div id="billing_statement_shipping_address" class="adr">
                      <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                      <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_shipping_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                    </div>

                    <div id="billing_statement_billing_address" class="adr">
                      <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                      <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_billing_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                    </div>
                    
                  </div>

                    </div>

                    <div id="billing_statement_summary_section" class="billing_statement_section">
                      <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                      <div class="billing_statement_section_content">
                    <div id="billing_statement_summary_statement_date">
                      <span class="billing_statement_summary_label"> Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                    </div>
                    <div id="billing_statement_summary_usage_period">
                      <span class="billing_statement_summary_label">Billing Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                    </div>

                    <div id="billing_statement_summary_balance_summary">
                      <div id="billing_statement_summary_starting_balance">
                        <span class="billing_statement_summary_label">Starting Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_charges">
                        <span class="billing_statement_summary_label">Current Charges:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_payments_and_credits">
                        <span class="billing_statement_summary_label">Payments:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_balance_due">
                        <span class="billing_statement_summary_label">Ending Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                    </div>

                    <div id="billing_statement_summary_balance_paid">
                      <div id="billing_statement_summary_balance_paid_date">
                        <span class="billing_statement_summary_label">Balance Paid:</span>
                        <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                      </div>
                        <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                          PAID
                        </div>
                    </div>
                  </div>

                    </div>

                    <div id="billing_statement_detail_section" class="billing_statement_section">
                      <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                      <div class="billing_statement_section_content">
                    <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                      <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Charge</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Recurring</td>
                            <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                    <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                      <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Amount</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr class="billing_statement_listing_empty_results_row">
                            <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>


                  </div>

                    </div>

                    <div id="billing_statement_period_activity_section" class="billing_statement_section">
                      <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                      <div class="billing_statement_section_content">
                    <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                      <thead>
                        <tr>
                          <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                          <th class="billing_statement_listing_cell_event">Event</th>
                          <th class="billing_statement_listing_cell_detail">Detail</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                          <td>Signup Success</td>
                          <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                        </tr>
                      </tbody>
                    </table>
                  </div>

                    </div>
                    <div>
                      <p>We thank you for your continued business!</p>
                    </div>
                  </div>
                memo: We thank you for your continued business!
                opened_at: '2016-10-24T16:20:12-04:00'
                settled_at: '2016-10-24T16:20:13-04:00'
                starting_balance_in_cents: 0
                subscription_id: 14900541
                text_view: |
                  My Awesome Company                                                    (79221109)
                  billing@example.com                                Acme Projects - Trial Product
                  ================================================================================

                  --------
                   Summary
                  --------

                   ID......: 79221109
                   Date....: 10/24/2016
                  Billing Date......: 10/24/2016

                  Starting Balance..: $0.00
                  Current Charges...: $0.00
                  Payments..........: $0.00
                  Ending Balance....: $0.00

                  Balance Paid......: 10/24/2016 04:20PM EDT

                  -------------------
                  Account Information
                  -------------------

                  Amelia Example
                  amelia@example.com
                  555-555-1212

                  ### Shipping Address
                  123 Anywhere Street
                  Anywhere, MA 02120
                  US

                  ### Billing Address
                  123 Anywhere Street
                  Anywhere, MA 02120
                  US


                  -------
                   Detail
                  -------

                  ### Current Charges and Adjustments

                  Date/Time     Type   Detail                                              Charges
                  ............  .....  ...............................................  ..........
                  10/24/2016
                  04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                  ............  .....  ...............................................  ..........
                                                                               Totals:       $0.00

                  ### Payments

                  No payments this period


                  ---------------
                  Period Activity
                  ---------------

                  Date/Time     Event/Details                                                     
                  ............  ..................................................................
                  10/24/2016    Signup Success                                                    
                  04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                ct                                                                
                  ............  ..................................................................

                  We thank you for your continued business!
                updated_at: '2016-10-24T16:20:13-04:00'
                total_in_cents: 0
                transactions:
                  - id: 159423810
                    subscription_id: 14900541
                    type: Charge
                    kind: trial
                    transaction_type: charge
                    success: true
                    amount_in_cents: 0
                    memo: Trial Price (10/24/2016 - 10/31/2016)
                    created_at: '2016-10-24T16:20:12-04:00'
                    starting_balance_in_cents: 0
                    ending_balance_in_cents: 0
                    gateway_used: null
                    gateway_transaction_id: null
                    gateway_order_id: null
                    payment_id: null
                    product_id: 3861800
                    tax_id: null
                    component_id: null
                    statement_id: 79221109
                    customer_id: 14399371
                    item_name: Trial Price
                    original_amount_in_cents: null
                    discount_amount_in_cents: null
                    taxable_amount_in_cents: null
                    taxations: []
                events:
                  - event:
                      id: 342036408
                      key: signup_success
                      message: Successful signup for Amelia Example's subscription to Trial Product
                      subscription_id: 14900541
                      created_at: '2016-10-24T16:20:13-04:00'
                      event_specific_data:
                        product_id: 3861800
                        account_transaction_id: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements-statement_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /statements/count.json:
    get:
      operationId: GET_statements_count-format
      summary: Read the Count of Statements for a Site
      tags:
        - Transaction
        - incomplete
        - Statements
      description: |-
        ## Read the Count of Statements for a Site

        This method will return the total number of statements belonging to a site. You can use this number to formulate the pagination portion of the query string when retrieving [Statement IDs](#endpoint:EABo2azFF2x9hCF7b) for a Site.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/count-statements-response'
          examples:
            application/json:
              count: 129
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements_count-format
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          statusCode: 200
  /stats.json:
    get:
      operationId: GET_stats-json
      summary: Read Stats for a Site
      tags:
        - Stats
        - incomplete
      description: |-
        ## Read Stats

        The output of the stats endpoint will provide some useful data about your site:

        | seller_name   | Name of the Merchant               |
        |---------------|------------------------------------|
        | site_name     | Given name of Site within Chargify |
        | site_id       | ID of site                         |
        | site_currency | Current currency of Site           |

        Additionally, there will a set of fluctuating statistics regarding the Site within the `stats` object:

        | total_subscriptions | Total number of ALL subscribers on the Site                     |
        |---------------------|-----------------------------------------------------------------|
        | subscriptions_today | Total number of new subscribers on the day the request was sent |
        | total_revenue       | Total revenue for the Site                                      |
        | revenue_today       | Total revenue received today                                    |
        | revenue_this_month  | Revenue received this month                                     |
        | revenue_this_year   | Revenue received this year                                      |
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/stats/read-stats-output'
          examples:
            application/json:
              seller_name: 'Acme, Inc.'
              site_name: Production
              site_id: 12345
              site_currency: USD
              stats:
                total_subscriptions: 120
                subscriptions_today: 4
                total_revenue: '$45,978.81'
                revenue_today: '$1,405.12'
                revenue_this_month: '$10,000.00'
                revenue_this_year: '$27,935.24'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_stats-json
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-format
      summary: Read Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: '## Read a Subscription'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              subscription:
                $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 21000969
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-02-27T14:13:30-06:00'
                created_at: '2018-02-27T14:13:30-06:00'
                updated_at: '2018-02-27T14:13:30-06:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2018-03-27T15:13:30-05:00'
                next_assessment_at: '2018-03-27T15:13:30-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-02-27T14:13:30-06:00'
                previous_state: active
                signup_payment_id: 228415132
                signup_revenue: '1000.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 100000
                product_price_in_cents: 100000
                product_version_number: 1
                payment_type: credit_card
                referral_code: kszx2g
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                coupon_codes: []
                customer:
                  id: 20613561
                  first_name: Alysa
                  last_name: Test
                  organization: null
                  email: alysa@example.com
                  created_at: '2018-02-27T14:13:30-06:00'
                  updated_at: '2018-02-27T14:13:31-06:00'
                  reference: null
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: '2018-02-27T14:13:31-06:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2018-02-27T14:13:31-06:00'
                  cc_emails: null
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2017-11-07T09:20:12-06:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
                    - id: 335926
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
                credit_card:
                  id: 14345100
                  first_name: Alysa
                  last_name: Test
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 10
                  expiration_year: 2020
                  customer_id: 20613561
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: null
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-format
      summary: 'Update Subscription: Cancel Delayed Product Change'
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Update Subscription: Cancel Delayed Product Change

        To cancel a delayed product change, set `next_product_id` to an empty string:

        ```
        {
          "subscription": {    
            "next_product_id": ""  
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/update-subscription-cancel-delayed-product-change-request'
            example:
              subscription:
                next_product_id: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 21607180
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-04-20T14:20:57-05:00'
                created_at: '2018-04-20T14:20:57-05:00'
                updated_at: '2018-05-11T13:31:48-05:00'
                expires_at: null
                balance_in_cents: 49000
                current_period_ends_at: '2018-05-12T11:33:03-05:00'
                next_assessment_at: '2018-05-12T11:33:03-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: invoice
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-05-11T11:33:03-05:00'
                previous_state: active
                signup_payment_id: 237154761
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: COUPONB
                total_revenue_in_cents: 52762
                product_price_in_cents: 100000
                product_version_number: 2
                payment_type: credit_card
                referral_code: x45nc8
                coupon_use_count: 0
                coupon_uses_allowed: 1
                reason_code: null
                automatically_resume_at: null
                coupon_codes:
                  - COUPONB
                customer:
                  id: 21259051
                  first_name: K
                  last_name: c
                  organization: ''
                  email: example+nownownownow@chargify.com
                  created_at: '2018-04-20T14:20:57-05:00'
                  updated_at: '2018-04-23T15:29:28-05:00'
                  reference: null
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  portal_invite_last_sent_at: '2018-04-20T14:20:59-05:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2018-04-20T14:20:59-05:00'
                  cc_emails: ''
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2018-04-10T09:02:59-05:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 100000
                  trial_price_in_cents: 1000
                  trial_interval: 10
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 2
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Stack Overflow for Teams
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
                    - id: 335926
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
                    - id: 345555
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic'
                    - id: 345556
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic'
                credit_card:
                  id: 14839830
                  first_name: K
                  last_name: C
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2028
                  customer_id: 21259051
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: '99999'
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
        '422':
          description: Unprocessable Entity
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_subscriptions-subscription_id-format
      summary: Cancel Subscription
      tags:
        - Subscription
        - incomplete
        - 'Subscriptions: Cancellations'
      description: "## Cancel Subscription\n\nThe DELETE action causes the cancellation of the Subscription. This means, the method sets the Subscription state to \"canceled\".\n\nThere are no required parameters. Optionally, you can use the `cancellation_message` field to note the reason for cancellation. `cancellation_message` note will be stored with the Subscription.\n\nThe response returns the Subscription object with the canceled state: `\"state\": \"canceled\",` or `<state>canceled</state>`. The `canceled_at` field records the timestamp of the most recent cancellation.\n\n## Cancel Subscription \n\nAdd the following key/value pairs to the DELETE request when cancelling a subscription.\n\n| cancellation_message | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about the reason for cancellation.       |\n|----------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| reason_code          | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to indicate why a subscription was canceled.            |\n\n## Cancel Subscription with Reason Code\n\nIf you'd like to cancel a subscription and add a reason/churn code, use the following JSON:\n\n```\n{\n\t\"subscription\": {\n\t\t\"reason_code\": \"CODE\"\n\t}\n}\n```"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 15254809
                state: canceled
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2016-11-15T15:33:44-05:00'
                created_at: '2016-11-15T15:33:44-05:00'
                updated_at: '2016-11-15T17:13:06-05:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2017-08-29T12:00:00-04:00'
                next_assessment_at: '2017-08-29T12:00:00-04:00'
                canceled_at: '2016-11-15T17:13:06-05:00'
                cancellation_message: Canceling the subscription via the API
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: merchant_api
                current_period_started_at: '2016-11-15T15:33:44-05:00'
                previous_state: active
                signup_payment_id: 0
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 1000
                product_version_number: 7
                payment_type: credit_card
                referral_code: tg8qbq
                coupon_use_count: null
                coupon_uses_allowed: null
                customer:
                  id: 14731081
                  first_name: John
                  last_name: Doe
                  organization: Acme Widgets
                  email: john.doe@example.com
                  created_at: '2016-11-15T15:33:44-05:00'
                  updated_at: '2016-11-15T15:33:45-05:00'
                  reference: '123'
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: '2016-11-15T15:33:45-05:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2016-11-15T15:33:45-05:00'
                  cc_emails: null
                product:
                  id: 3792003
                  name: $10 Basic Plan
                  handle: basic
                  description: lorem ipsum
                  accounting_code: basic
                  request_credit_card: false
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-03-24T13:38:39-04:00'
                  updated_at: '2016-11-03T13:03:05-04:00'
                  price_in_cents: 1000
                  interval: 1
                  interval_unit: day
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 7
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 281054
                      return_url: 'http://www.example.com?successfulsignup'
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
                    - id: 281240
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
                    - id: 282694
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
                credit_card:
                  id: 10202898
                  first_name: John
                  last_name: Doe
                  masked_card_number: XXXX-XXXX-XXXX-1111
                  card_type: visa
                  expiration_month: 12
                  expiration_year: 2020
                  customer_id: 14731081
                  current_vault: authorizenet
                  vault_token: '12345'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: null
                  billing_country: null
                  customer_vault_token: '67890'
                  billing_address_2: null
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/reactivate.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-reactivate-format
      summary: Reactivate Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Reactivate a Subscription

        Chargify offers the ability to reactivate a previously canceled Subscription. For details on how the reactivation works, and how to reactivate Subscriptions through the Admin Interface, see [Reactivation](https://docs.chargify.com/reactivation).

        + The response returns the Subscription object in the active state. 
        + The `canceled_at` and `cancellation_message` fields do not have values.
        + The method works for canceled Subscriptions. 
        + It will not work for items not marked as "Canceled", "Unpaid", or "Trial Ended".

        ## Optional Parameters

        | include_trial    | Boolean, default `0`. If 1 is sent the reactivated subscription will include a trial if one is available. If `0` is sent, the trial period will be ignored. This parameter should be sent in a query string, and does not need to be nested inside a subscription object |
        |------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | preserve_balance | Boolean, default ‘0’. If ‘1’ is passed, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.                                                                                                                   |
        | coupon_code      | The coupon code to be applied during reactivation.                                                                                                                                                                                                                       |

        ## Reactivation Scenarios

        ## Reactivating a canceled subscription with an invalid payment profile

        + Given you have a canceled subscription with ID "1000"
        + The subscription has an invalid payment profile
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        The response status should be "422 Unprocessable Entity"
        + The subscription should be canceled with the following response
        ```
              {
              "errors": ["The credit card on file could not be charged."]
              }
        ```
         ## Attempting to reactivate an already active subscription
        + Given you have an active subscription with ID "1000"
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        The response status should be "422 Unprocessable Entity"
        + The subscription should be active with the following JSON response

        ```
              {
              "errors": ["Cannot reactivate a subscription that is not marked \"Canceled\", \"Unpaid\", or \"Trial Ended\"."]
              }
         ```
         
        ## Reactivating a canceled subscription while preserving the balance

        + Given you have a product with ID "2002" that costs $19
        + You have a canceled subscription with ID "1000" to a product with ID "2002"
            + 1 charge should exist for $19
            + 1 payment should exist for $19
        + When the subscription has a negative balance of "19"
        A PUT request is sent to `https://acme.chargify.com/subscriptions/1000/reactivate.json?preserve_balance=1`

        + Then the response status should be "200 OK"

        And the resulting charges will be: 
        + 2 charges for $19
        + 1 payments should exist for $19
        + The subscription should be active
        + The subscription balance should be zero

        ## Reactivating a canceled subscription with a coupon
        + Given you have a canceled subscription with ID "1000"
        + It has no current period defined
        + You have a coupon named "Early Bird"
        + The coupon is set to recur for 6 periods
        + The coupon code is "EARLYBIRD"
        + Send a PUT request to 

        `https://acme.chargify.com/subscriptions/1000/reactivate.json?coupon_code=EARLYBIRD`

        + The response status should be "200 OK"
        + The subscription should be active
        + The subscription should have applied a coupon with code "EARLYBIRD"

        ## Reactivating a canceled subscription with a trial, without the include_trial flag

        + Given you have a canceled subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`
        + The response status should be "200 OK"
        + The subscription should be active
          
        ## Reactivating a canceled subscription with a trial, with the include_trial flag

        + Given you have a canceled subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json?include_trial=1`

        + The response status should be "200 OK"
        + The subscription should be trialing

        ## Reactivating a trial ended subscription

        + Given you have a trial_ended subscription with ID "1000"
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json`
        + The response status should be "200 OK"
        + The subscription should be active

        ## Reactivating a trial ended subscription, without the include_trial flag

        + Given you have a trial_ended subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        + The response status should be "200 OK"
        + The subscription should be active
          
        ## Reactivating a trial ended subscription, with the include_trial flag

        + Given you have a trial_ended subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json?include_trial=1`
        + The response status should be "200 OK"
        + The subscription should be trialing
      parameters:
        - name: include_trial
          in: query
          description: 'Boolean, default 0. If "1" is sent, the reactivated Subscription will include a trial if one is available. If 0 is sent, the trial period will be ignored. This parameter should be sent in a query string, and does not need to be nested inside a Subscription object.'
          type: boolean
        - name: preserve_balance
          in: query
          description: 'Boolean, default ‘0’. If ‘1’ is passed, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.'
          type: boolean
        - name: coupon_code
          in: query
          description: The coupon code to be applied during reactivation.
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: Unprocessable Entity
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - The credit card on file could not be charged.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-reactivate-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/retry.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-retry-format
      summary: Retry Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Retry a Subscription

        Chargify offers the ability to retry collecting the balance due on a past due Subscription without waiting for the next scheduled attempt.

        ## Successful Reactivation

        The response will be `200 OK` with the updated Subscription.

        ## Failed Reactivation

        The response will be `422 "Unprocessable Entity`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
          examples:
            application/json:
              errors: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-retry-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/reset_balance.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-reset_balance-xml
      summary: Reset Subscription Balance
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Reset a Subscription Balance

        Chargify offers the ability to easily reset the balance of a Subscription to zero.

        If a Subscription has a positive balance, this API call will issue a credit to the Subscription for the outstanding balance.

        This is particularly helpful if you want to reactivate a canceled Subscription without charging the Customer for their previously owed balance.

        ## Past Due & Unpaid Subscriptions

        If you have a subscription that is in the `past_due` or `unpaid` state, when you reset the balance, the subscription will transition to `active`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-reset_balance-xml
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/delayed_cancel.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-delayed_cancel-json
      summary: 'Cancel Subscription: Delayed Method'
      tags:
        - 'Subscriptions: Cancellations'
      description: "## Delayed Cancel\nChargify offers the ability to cancel a subscription at the end of the current billing period. This period is set by its current product.\n\nRequesting to cancel the subscription at the end of the period sets the `cancel_at_end_of_period` flag to true.\n\nNote that you cannot set `cancel_at_end_of_period` at subscription creation, or if the subscription is past due.\n\n## Delayed Cancel with Reason Code\n\nIf you'd like to cancel a subscription using the delayed cancellation method, and add a reason/churn code, use the following JSON:\n\n```\n{\n\t\"subscription\": {\n\t\t\"cancellation_message\": \"Switching providers\",\n\t\t\"reason_code\": \"CODE\"\n\t}\n}\n```"
      consumes:
        - application/xml
      produces:
        - application/xml
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              subscription:
                $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/xml:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-delayedcanceljson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_subscriptions-subscription_id-delayed_cancel-json
      summary: 'Cancel Subscription: Remove Delayed Method'
      tags:
        - 'Subscriptions: Cancellations'
      description: |-
        ## Remove Delayed Cancel
        Removing the delayed cancellation on a subscription will ensure that it doesn't get canceled at the end of the period that it's on. The request will reset the `cancel_at_end_of_period` flag to `false`.
      consumes:
        - application/xml
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscriptionid-delayedcanceljson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/charges.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-charges-json
      summary: Create a charge
      tags:
        - 'Subscriptions: Charges'
      description: |-
        ## Create a charge

        Creating a charge requires a valid, live subscription. The subscription must be referenced by `subscription_id` (available via the API when subscriptions are read or listed – more).

        A payment in the amount of the assessed charge is automatically captured from the credit card on file for the subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/charges/create-a-charge-request-post'
            example:
              charge:
                memo: Amount collected
                amount: '10.00'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/charges/create-a-charge-response-post'
          examples:
            application/json:
              charge:
                id: 157750635
                subscription_id: 14593192
                type: Charge
                kind: one_time
                transaction_type: charge
                success: true
                amount_in_cents: 100
                memo: This is the description of the one time charge.
                created_at: '2016-10-11T11:51:45-04:00'
                starting_balance_in_cents: 15000
                ending_balance_in_cents: 15100
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: 157750636
                product_id: 3861800
                tax_id: null
                component_id: null
                statement_id: 78204384
                customer_id: 14126091
                original_amount_in_cents: null
                discount_amount_in_cents: null
                taxable_amount_in_cents: null
                taxations: []
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Memo: cannot be blank.'
                - 'Amount: is not a number.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-chargesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/add_coupon.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    post:
      operationId: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
      summary: Add Multiple Coupons to Existing Subscription
      tags:
        - Coupon
        - incomplete
        - 'Subscriptions: Coupons'
      description: |-
        ## Add Multiple Coupons to Existing Subscription

        An existing subscription can accommodate multiple discounts/coupon codes. This is only applicable if each coupon is stackable. For more information on stackable coupons, we recommend reviewing our [coupon documentation.](https://help.chargify.com/products/product-coupons.html#stackable-coupons)
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/add-multiple-coupons-to-existing-subscription-input'
            example:
              codes:
                - COUPON_1
                - COUPON_2
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/add-multiple-coupons-to-existing-subscription-input'
          examples:
            application/json:
              subscription:
                id: 21607180
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-04-20T14:20:57-05:00'
                created_at: '2018-04-20T14:20:57-05:00'
                updated_at: '2018-05-11T13:53:44-05:00'
                expires_at: null
                balance_in_cents: 49000
                current_period_ends_at: '2018-05-12T11:33:03-05:00'
                next_assessment_at: '2018-05-12T11:33:03-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: invoice
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-05-11T11:33:03-05:00'
                previous_state: active
                signup_payment_id: 237154761
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: COUPONA
                total_revenue_in_cents: 52762
                product_price_in_cents: 100000
                product_version_number: 2
                payment_type: credit_card
                referral_code: x45nc8
                coupon_use_count: 0
                coupon_uses_allowed: 1
                reason_code: null
                automatically_resume_at: null
                coupon_codes:
                  - COUPONA
                  - COUPONB
                customer:
                  id: 21259051
                  first_name: K
                  last_name: C
                  organization: ''
                  email: example@chargify.com
                  created_at: '2018-04-20T14:20:57-05:00'
                  updated_at: '2018-04-23T15:29:28-05:00'
                  reference: null
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  portal_invite_last_sent_at: '2018-04-20T14:20:59-05:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2018-04-20T14:20:59-05:00'
                  cc_emails: ''
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2018-04-10T09:02:59-05:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 100000
                  trial_price_in_cents: 1000
                  trial_interval: 10
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 2
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: My Product Family
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
                    - id: 335926
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
                    - id: 345555
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic'
                    - id: 345556
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic'
                credit_card:
                  id: 14839830
                  first_name: John
                  last_name: Doe
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2028
                  customer_id: 21259051
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: '99999'
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
        '422':
          description: ''
          schema:
            type: object
            properties:
              codes:
                type: array
                items:
                  type: string
              subscription:
                type: array
                items:
                  type: string
          examples:
            application/json:
              codes:
                - 'Coupon Codes: Subscription already has at least one non-stackable coupon.'
              subscription:
                - Coupon is invalid.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/remove_coupon.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    delete:
      operationId: DELETE_subscriptions-subscription_id-remove_coupon-format
      summary: Remove the Coupon from the Subscription
      tags:
        - Coupon
        - incomplete
        - 'Subscriptions: Coupons'
      description: |-
        ## Remove the Coupon from the Subscription Response

        If the Coupon is successfully removed, the string will be returned. 

        ```Coupon succesfully removed``` 

        Otherwise, the "422 Unprocessable Entity" error will be returned.

        ## Documentation

        For more information on the expected behaviour of removing a coupon from a subscription, please see our documentation [here.](https://help.chargify.com/subscriptions/coupons.html#removing-a-coupon)
      parameters:
        - name: coupon_code
          in: query
          description: The Coupon code.
          required: true
          type: string
      responses:
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              subscription:
                - There's no coupon applied to this subscription
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-remove_coupon-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/resume.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-resume-json
      summary: Resume Subscription
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Resume Subscription

        Resume a paused (on-hold) subscription.  If the normal next renewal date has not passed, the subscription will return to active and will renew on that date.  Otherwise, it will behave like a reactivation, setting the billing date to 'now' and charging the subscriber.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-resumejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/hold.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-hold-json
      summary: Hold (Pause) Subscription
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Pause Subscription

        This will place the subscription in the on_hold state and it will not renew.

        ## Limitations

        You may not place a subscription on hold if the `next_billing` date is within 24 hours.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscriptions/hold-subscription-request'
            example:
              hold:
                automatically_resume_at: '2017-05-25T11:25:00Z'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: on-hold
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - This subscription is not eligible to be put on hold.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-holdjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-hold-json
      summary: Update On-Hold Subscription Attributes
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Update On-Hold Subscription Attributes

        To update a subscription's resume date, use this method to change or update the `automatically_resume_at` date.

        ### Remove the resume date

        Alternately, you can change the `automatically_resume_at` to `null` if you would like the subscription to not have a resume date.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/update-on-hold-subscriptions-input'
            example:
              hold:
                automatically_resume_at: '2019-01-20'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/update-on-hold-subscriptions-output'
          examples:
            application/json:
              subscription:
                id: 20359140
                state: on_hold
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-01-05T17:15:50-06:00'
                created_at: '2018-01-05T17:15:49-06:00'
                updated_at: '2018-01-09T10:26:14-06:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2023-01-05T17:15:00-06:00'
                next_assessment_at: '2023-01-05T17:15:00-06:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-01-05T17:15:49-06:00'
                previous_state: active
                signup_payment_id: 219829722
                signup_revenue: '100.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 10009991
                product_price_in_cents: 10000
                product_version_number: 1
                payment_type: credit_card
                referral_code: 8y7jqr
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: '2019-01-20T00:00:00-06:00'
                coupon_codes: []
                customer:
                  id: 19948683
                  first_name: Vanessa
                  last_name: Test
                  organization: ''
                  email: vanessa@example.com
                  created_at: '2018-01-05T17:15:49-06:00'
                  updated_at: '2018-01-05T17:15:51-06:00'
                  reference: null
                  address: 123 Anywhere Ln
                  address_2: ''
                  city: Boston
                  state: MA
                  zip: '02120'
                  country: US
                  phone: 555-555-1212
                  portal_invite_last_sent_at: '2018-01-05T17:15:51-06:00'
                  portal_invite_last_accepted_at: null
                  verified: null
                  portal_customer_created_at: '2018-01-05T17:15:51-06:00'
                  cc_emails: null
                  tax_exempt: false
                product:
                  id: 4535643
                  name: Annual Product
                  handle: annual-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-08-25T10:25:31-05:00'
                  updated_at: '2017-08-25T10:25:31-05:00'
                  price_in_cents: 10000
                  interval: 12
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages: []
                credit_card:
                  id: 13826563
                  first_name: Bomb 3
                  last_name: Test
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2028
                  customer_id: 19948683
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: 123 Anywhere Lane
                  billing_city: Boston
                  billing_state: Ma
                  billing_zip: '02120'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscriptionid-holdjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions/preview.json:
    post:
      operationId: POST_subscriptions-preview-json
      summary: Create Subscription Preview - Component Price Points
      tags:
        - 'Subscriptions: Preview'
      description: |-
        ## Create Subscription Preview with Price Points

        This example **does not** use contact information to create a subscription preview. It's optional, bear in mind!

        If you do not use a `price_point_id` then the default price point will be used to calculate the preview amounts.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscription-preview-price-point-id-request'
            example:
              subscription:
                product_handle: monthly-product
                components:
                  - component_id: 462149
                    price_point_id: 200543
                    allocated_quantity: 10
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription-preview-price-points-response'
          examples:
            application/json:
              subscription_preview:
                current_billing_manifest:
                  line_items:
                    - transaction_type: charge
                      kind: baseline
                      amount_in_cents: 5000
                      memo: Monthly product  (02/05/2018 - 03/05/2018)
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                    - transaction_type: charge
                      kind: component
                      amount_in_cents: 20000
                      memo: 'HUNDO: 10 HUNDOs'
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                      component_id: 462149
                  total_in_cents: 25000
                  total_discount_in_cents: 0
                  total_tax_in_cents: 0
                  subtotal_in_cents: 25000
                  start_date: '2018-02-05T19:36:55Z'
                  end_date: '2018-03-05T19:36:55Z'
                  period_type: recurring
                  existing_balance_in_cents: 0
                next_billing_manifest:
                  line_items:
                    - transaction_type: charge
                      kind: baseline
                      amount_in_cents: 5000
                      memo: Monthly product  (03/05/2018 - 04/05/2018)
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                    - transaction_type: charge
                      kind: component
                      amount_in_cents: 20000
                      memo: 'HUNDO: 10 HUNDOs'
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                      component_id: 462149
                  total_in_cents: 25000
                  total_discount_in_cents: 0
                  total_tax_in_cents: 0
                  subtotal_in_cents: 25000
                  start_date: '2018-03-05T19:36:55Z'
                  end_date: '2018-04-05T19:36:55Z'
                  period_type: recurring
                  existing_balance_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/migrations.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-migrations-json
      summary: Create Migration with Trial
      tags:
        - 'Subscriptions: Product Changes / Migrations / Upgrades / Downgrades'
      description: |-
        ## Create Migration with Trial

        In order to create a migration with a trial, you must pass the product_id or product_handle in the object when you send a POST request. Additionally, you must pass `"include_trial": 1` as part of the request object.

        The response will be the updated subscription.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              migration:
                type: object
                properties:
                  product_id:
                    type: integer
                  include_trial:
                    type: integer
            example:
              migration:
                product_id: 3861800
                include_trial: 1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/migrations/create-migration-input-trial-output'
          examples:
            application/json:
              subscription:
                id: 15054201
                state: trialing
                trial_started_at: '2016-11-03T13:43:36-04:00'
                trial_ended_at: '2016-11-10T12:43:36-05:00'
                activated_at: '2016-11-02T10:20:57-04:00'
                created_at: '2016-11-02T10:20:55-04:00'
                updated_at: '2016-11-03T13:43:36-04:00'
                expires_at: null
                balance_in_cents: -13989
                current_period_ends_at: '2016-11-10T12:43:36-05:00'
                next_assessment_at: '2016-11-10T12:43:36-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2016-11-03T13:43:35-04:00'
                previous_state: active
                signup_payment_id: 160680121
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 14000
                product_price_in_cents: 1000
                product_version_number: 6
                payment_type: credit_card
                referral_code: ghnhvy
                coupon_use_count: null
                coupon_uses_allowed: null
                customer:
                  id: 14543792
                  first_name: Frankie
                  last_name: Test
                  organization: null
                  email: testfrankie111@test.com
                  created_at: '2016-11-02T10:20:55-04:00'
                  updated_at: '2016-11-02T10:20:58-04:00'
                  reference: null
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: '5555551212'
                  portal_invite_last_sent_at: '2016-11-02T10:20:58-04:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2016-11-02T10:20:58-04:00'
                  cc_emails: null
                product:
                  id: 3861800
                  name: Trial Product
                  handle: trial-product
                  description: Trial period with payment expected at end of trial.
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-07-08T09:53:55-04:00'
                  updated_at: '2016-09-05T13:00:36-04:00'
                  price_in_cents: 1000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: 0
                  trial_interval: 7
                  trial_interval_unit: day
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 6
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 294791
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product'
                credit_card:
                  id: 10088716
                  first_name: F
                  last_name: NB
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2017
                  customer_id: 14543792
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: 123 Montana Way
                  billing_city: Billings
                  billing_state: MT
                  billing_zip: '59101'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: Apt. 10
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-migrationsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/migrations/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-migrations-preview-json
      summary: Create Preview of Product Migration
      tags:
        - 'Subscriptions: Product Changes / Migrations / Upgrades / Downgrades'
      description: "## Preview Migration\n\nRequired Parameters: `product_id` or `product_handle`\n\nResponse: Calculated migration values:\n\n| prorated_adjustment_in_cents | Integer, The amount of the prorated adjustment that would be issued for the current subscription. |\n|------------------------------|---------------------------------------------------------------------------------------------------|\n| charge_in_cents              | Integer, The amount of the charge that would be created for the new product.                      |\n| payment_due_in_cents         | Integer, The amount of the payment due in the case of an upgrade.                                 |\n| credit_applied_in_cents      | Integer, The amount of the credit that would be left in the case of a                             |\n## Previews and trials\n\nYou may add the option to preview a trial as well by sending\n\n```\n{\n\t\"migration\": {\n\t\t\"product_id\": 3861800\n\t}\n}}\n```"
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/migrations/preview-migration-input'
            example:
              migration:
                product_id: 3861800
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/migrations/preview-migration-output'
          examples:
            application/json:
              migration:
                prorated_adjustment_in_cents: 0
                charge_in_cents: 5000
                payment_due_in_cents: 0
                credit_applied_in_cents: 0
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Subscription must be active
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-migrations-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/override.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-override-format
      summary: Subscription Override
      tags:
        - Subscription Override
        - 'Subscriptions: Override'
      description: |-
        ## Subscriptions Override Responses

        ### Successful – 204 No Content

        On a successful update, a `204` HTTP response is sent along with no body. You can assume the update was successful, and fetch the subscription again if needed.

        ```
        HTTP/1.1 204 No Content
        Cache-Control: no-cache
        Connection: keep-alive
        Date: Tue, 03 Nov 2015 21:40:48 GMT
        Status: 204 No Content
        ```

        ### Unpermitted Parameters – 400 Bad Request

        If unpermitted parameters are sent, a `400` HTTP response is sent along with a string giving the reason for the problem, e.g.

        ```
        Unpermitted paramters in request: created_at
        ```

        Note: this will be changing to a JSON or XML response in the near future.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscriptions/subscription-override-request'
            example:
              subscription:
                activated_at: '1999-12-01'
                canceled_at: '2000-12-31'
                cancellation_message: Original cancellation in 2000
                expires_at: '2001-07-15'
      responses:
        '204':
          description: No Content
          examples:
            application/json:
              subscription:
                activated_at: '1999-12-01'
                canceled_at: '2000-12-31'
                cancellation_message: Original cancellation in 2000
                expires_at: '2001-07-15'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-override-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /transactions.json:
    get:
      operationId: GET_transactions-format
      summary: Read Transactions for a Site
      tags:
        - Transactions
      description: |-
        ## Read Transactions for a Site

        This method will return the full list of transactions for a Site. Pay close attention to filters and pagination in order to control results.

        **Notes about ID/Date Filters**

        - Using `since_id` and/or `max_id` is known as creating an “ID Filter”.

        - Using `since_date` and/or `until_date` is known as creating a “Date Filter”.

        - You may ONLY make use of either an ID Filter or a Date Filter in any one request.

        - If you specify both an ID Filter and a Date Filter, the Date Filter will be ignored.

        **Pagination Notes**

        Stepping through pages of results by incrementing the page number is typically less performant than using an ID Filter with `since_id`, especially at high values of page.
        For example, instead of these successive requests to traverse pagination:

            GET /transactions.json?page=1&per_page=200
            GET /transactions.json?page=2&per_page=200

        It is usually faster to use `since_id` to continue fetching from the last ID you observed:

            GET /transactions.json?since_id=0&per_page=200&direction=asc
            GET /transactions.json?since_id=1567&per_page=200&direction=asc

        In the above example, 1567 is derived by adding 1 to the “last” ID you received from the first request.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:txnKinds:kinds'
        - $ref: '#/parameters/trait:txnSinceId:since_id'
        - $ref: '#/parameters/trait:txnMaxId:max_id'
        - $ref: '#/parameters/trait:txnSinceDate:since_date'
        - $ref: '#/parameters/trait:txnUntilDate:until_date'
        - $ref: '#/parameters/trait:txnDirection:direction'
        - $ref: '#/parameters/trait:txnOrderBy:order_by'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              - transaction:
                  id: 162640678
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Pookie Test - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162640676
                  subscription_id: 15268319
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 2000
                  memo: 'Pookie Test - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 2000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669162
                  customer_id: 14743895
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
        '404':
          description: ''
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transactions-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/transactions/{transaction_id}.json':
    parameters:
      - name: transaction_id
        in: path
        description: The Transaction ID.
        required: true
        type: string
    get:
      operationId: GET_transaction_id-format
      summary: Read Transaction by ID
      tags:
        - incomplete
        - Transactions
      description: |-
        ## List transaction by ID

        Given that you have a valid transaction ID, you can retrieve its full details.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              transaction:
                id: 237759849
                subscription_id: 21607180
                type: Payment
                kind: one_time
                transaction_type: payment
                success: true
                amount_in_cents: 10000
                memo: 'Payment for: 123'
                created_at: '2018-04-24T16:48:19-05:00'
                starting_balance_in_cents: 10000
                ending_balance_in_cents: 0
                gateway_used: bogus
                gateway_transaction_id: '53433'
                gateway_order_id: null
                payment_id: null
                product_id: 4610619
                tax_id: null
                component_id: null
                statement_id: 113513284
                customer_id: 21259051
                item_name: null
                parent_id: null
                role: null
                card_number: XXXX-XXXX-XXXX-1
                card_expiration: 01/2028
                card_type: bogus
                refunded_amount_in_cents: 0
        '404':
          description: Not Found
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transaction_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/transactions.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-transactions-format
      summary: Read Transactions for a Subscription
      tags:
        - incomplete
        - Transactions
      description: |-
        ## List Transactions for a Subscription.

        Given that you have subscriber's ID, you can retrieve a list of transactions associated with the subscription.

        The sort order is based on the `created_at` timestamp and cannot be changed.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:txnKinds:kinds'
        - $ref: '#/parameters/trait:txnSinceId:since_id'
        - $ref: '#/parameters/trait:txnMaxId:max_id'
        - $ref: '#/parameters/trait:txnSinceDate:since_date'
        - $ref: '#/parameters/trait:txnUntilDate:until_date'
        - $ref: '#/parameters/trait:txnDirection:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              - transaction:
                  id: 162640678
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Amelia Example - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162640663
                  subscription_id: 15268262
                  type: Charge
                  kind: baseline
                  transaction_type: charge
                  success: true
                  amount_in_cents: 1000
                  memo: $10 Basic Plan (11/17/2016 - 11/18/2016)
                  created_at: '2016-11-17T14:03:13-05:00'
                  starting_balance_in_cents: 0
                  ending_balance_in_cents: 1000
                  gateway_used: null
                  gateway_transaction_id: null
                  gateway_order_id: null
                  payment_id: 162640678
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: $10 Basic Plan
                  parent_id: null
                  role: null
                  original_amount_in_cents: 1000
                  discount_amount_in_cents: 0
                  taxable_amount_in_cents: null
                  taxations: []
              - transaction:
                  id: 162520504
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Amelia Example - $10 Basic Plan: Signup payment'
                  created_at: '2016-11-16T13:47:44-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80612887
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162520501
                  subscription_id: 15268262
                  type: Charge
                  kind: baseline
                  transaction_type: charge
                  success: true
                  amount_in_cents: 1000
                  memo: $10 Basic Plan (11/16/2016 - 11/17/2016)
                  created_at: '2016-11-16T13:47:43-05:00'
                  starting_balance_in_cents: 0
                  ending_balance_in_cents: 1000
                  gateway_used: null
                  gateway_transaction_id: null
                  gateway_order_id: null
                  payment_id: 162520504
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80612887
                  customer_id: 14743839
                  item_name: $10 Basic Plan
                  parent_id: null
                  role: null
                  original_amount_in_cents: 1000
                  discount_amount_in_cents: 0
                  taxable_amount_in_cents: null
                  taxations: []
        '404':
          description: OK
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-transactions-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /transactions/count.json:
    get:
      operationId: GET_transactions_count-format
      summary: Read the Count of Transactions for a Site
      tags:
        - Transaction
        - incomplete
        - Transactions
      description: |-
        ## Read the Count of Transactions for a Site

        This method returns the full count of transactions associated with a Site.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/count-transactions'
          examples:
            application/json:
              count: 290
        '404':
          description: Not Found
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transactions_count-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /webhooks.json:
    get:
      operationId: GET_webhooks-format
      summary: Read Webhooks for a Site
      tags:
        - Webhook
        - incomplete
        - Webhooks
      description: '## List Webhooks for a Site'
      parameters:
        - name: status
          in: query
          description: ''
          required: false
          type: string
          enum:
            - successful
            - failed
            - pending
            - paused
        - name: since_date
          in: query
          description: Format YYYY-MM-DD. Returns Webhooks with the `created_at date` greater than or equal to the one specified.
          required: true
          type: string
        - name: until_date
          in: query
          description: Format YYYY-MM-DD. Returns Webhooks with the `created_at` date less than or equal to the one specified.
          required: true
          type: string
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: per_page
          in: query
          description: This parameter indicates how many records to fetch in each request.
          required: false
          type: number
        - name: order
          in: query
          description: 'The order in which the Webhooks are retured, either “newest_first” or “oldest_first”'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhooks/list-webhook-output'
          examples:
            application/json:
              - webhook:
                  event: statement_settled
                  id: 141765032
                  created_at: '2016-11-08T16:22:26-05:00'
                  last_error: 404 Resource Not Found (retry 5 of 5)
                  last_error_at: '2016-11-08T16:43:54-05:00'
                  accepted_at: null
                  last_sent_at: '2016-11-08T16:43:54-05:00'
                  last_sent_url: 'http://requestb.in/11u45x71'
                  successful: false
                  body: 'id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384'
                  signature: 7c606ec4628ce75ec46e284097ce163a
                  signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
              - webhook:
                  event: payment_success
                  id: 141765008
                  created_at: '2016-11-08T16:22:25-05:00'
                  last_error: 404 Resource Not Found (retry 5 of 5)
                  last_error_at: '2016-11-08T16:43:54-05:00'
                  accepted_at: null
                  last_sent_at: '2016-11-08T16:43:54-05:00'
                  last_sent_url: 'http://requestb.in/11u45x71'
                  successful: false
                  body: 'id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364'
                  signature: fbcf2f6be579f9658cff90c4373e0ca2
                  signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_webhooks-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /webhooks/replay.json:
    post:
      operationId: POST_webhooks-replay-format
      summary: Replay Webhooks for Site
      tags:
        - Webhook
        - incomplete
        - Webhooks
      description: |-
        ## Reply Webhooks for Site

        Posting to the replay endpoint does not immediate resend the webhooks. They are added to the background job queue and should be resent momentarily.

        ## Required Parameters:

        `id`: An array of webhook ids to replay in the query string.
      parameters:
        - name: id
          in: query
          description: The ID of the webhook you wish to replay.
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhooks/replay-webhooks-site'
          examples:
            application/json:
              status: ok
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_webhooks-replay-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
parameters:
  'trait:pagination20:page':
    name: page
    in: query
    description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
    type: number
    default: ''
  'trait:pagination20:per_page':
    name: per_page
    in: query
    description: This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any `per_page` value over 200 will be changed to 200.
    type: number
    default: ''
    maximum: 200
  'trait:pathParameters:subscription_id':
    name: subscription_id
    in: query
    required: true
    type: string
  'trait:pathParameters:format':
    name: format
    in: query
    required: true
    type: string
  'trait:autoInvite:auto_invite':
    name: auto_invite
    in: query
    description: You must specify this value when sending an Invitation email at the same time as enabling Billing Portal.
    required: true
    type: integer
  'trait:pagination50:page':
    name: page
    in: query
    description: 'Pass an integer in the page parameter via the query string to access subsequent pages of 50 transactions '
    type: number
    default: ''
  'trait:startdateEnddateQuery:start_date':
    name: start_date
    in: query
    description: YYYY-MM-DD
    type: string
    format: date
  'trait:startdateEnddateQuery:end_date':
    name: end_date
    in: query
    description: YYYY-MM-DD
    type: string
    format: date
  'trait:invoiceStatusQuery:status':
    name: status
    in: query
    type: string
    enum:
      - paid
      - unpaid
      - partial
      - archived
  'trait:eventsFilters:page':
    name: page
    in: query
    type: integer
  'trait:eventsFilters:per_page':
    name: per_page
    in: query
    type: integer
  'trait:eventsFilters:since_id':
    name: since_id
    in: query
    type: integer
  'trait:eventsFilters:max_id':
    name: max_id
    in: query
    type: integer
  'trait:eventsFilters:direction':
    name: direction
    in: query
    type: string
    default: desc
    enum:
      - 'asc, desc'
  'trait:pagination30:page':
    name: page
    in: query
    type: integer
  'trait:metafieldsNameRequiredCurrentNameOptional:name':
    name: name
    in: query
    required: true
    type: string
  'trait:metafieldsNameRequiredCurrentNameOptional:current_name':
    name: current_name
    in: query
    description: This only applies when you are updating an existing record and you wish to rename the field. Note you must supply name and current_name to rename the field
    required: false
    type: string
  'trait:metafieldsNameOptional:name':
    name: name
    in: query
    type: string
  'trait:componentParameters:since_id':
    name: since_id
    in: query
    description: Returns usages with an id greater than or equal to the one specified
    type: integer
  'trait:componentParameters:max_id':
    name: max_id
    in: query
    description: Returns usages with an id less than or equal to the one specified
    type: integer
  'trait:componentParameters:since_date':
    name: since_date
    in: query
    description: 'Returns usages with a `created_at` date greater than or equal to midnight (12:00 AM) on the date specified.'
    type: string
    format: date
  'trait:componentParameters:until_date':
    name: until_date
    in: query
    description: ' Returns usages with a `created_at` date less than or equal to midnight (12:00 AM) on the date specified.'
    type: string
    format: date
  'trait:componentParameters:page':
    name: page
    in: query
    description: The page number and number of results used for pagination. By default results are paginated 20 per page.
    type: string
  'trait:componentParameters:per_page':
    name: per_page
    in: query
    description: The page number and number of results used for pagination. By default results are paginated 20 per page.
    type: string
  'trait:metafieldsNameRequired:name':
    name: name
    in: query
    required: true
    type: string
  'trait:txnSinceId:since_id':
    name: since_id
    in: query
    description: Returns transactions with an id greater than or equal to the one specified
    type: integer
  'trait:txnKinds:kinds':
    name: kinds
    in: query
    description: 'An array of transaction types, see above'
    type: string
  'trait:txnSinceDate:since_date':
    name: since_date
    in: query
    description: '(format YYYY-MM-DD) Returns transactions with a `created_at` timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnUntilDate:until_date':
    name: until_date
    in: query
    description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnDirection:direction':
    name: direction
    in: query
    description: can be either asc for ascending or desc for descending order. (defaults to desc) The sort order is based on the created_at timestamp then id for transactions within the same second.
    type: string
    default: desc
  'trait:txnOrderBy:order_by':
    name: order_by
    in: query
    description: 'Either `id` or `created_at`. Using an ID filter (`since_id`/`max_id`) will force id order, while using a Date filter (`since_date`/`until_date`) will force created_at order. Otherwise, your requested value will be used.'
    type: string
  'trait:subscriptionQueryString:page':
    name: page
    in: query
    description: 'A integer value which specifies which page of results to fetch, starting at 1. Fetching successively higher page numbers will return additional results, until there are no more results to return (in which case an empty result set will be returned). Defaults to 1.'
    type: string
    default: 1
  'trait:subscriptionQueryString:per_page':
    name: per_page
    in: query
    description: 'how many records to fetch in each request, defaults to 20. The maximum allowed is 200 – any per_page value over 200 will be changed to 200.'
    type: integer
    default: 20
    maximum: 200
  'trait:subscriptionQueryString:state':
    name: state
    in: query
    description: 'The current state of the subscription. '
    type: string
    enum:
      - active
      - canceled
      - expired
      - expired_cards
      - on_hold
      - past_due
      - pending_cancellation
      - pending_renewal
      - suspended
      - trial_ended
      - trialing
      - unpaid
  'trait:subscriptionQueryString:product':
    name: product
    in: query
    description: The product id of the subscription. (Note that the product handle cannot be used.)
    type: string
  'trait:subscriptionQueryString:product_revision_number':
    name: product_revision_number
    in: query
    description: 'The revision number of the product. If supplied, product is required. Please note that revision is an internal, zero-based identifier, and differs from the Version number displayed in the Admin UI. Example: To filter for version “v2”, supply a product_revision_number of 1.'
    type: integer
  'trait:subscriptionQueryString:coupon':
    name: coupon
    in: query
    description: The numeric id of the coupon currently applied to the subscription. (This can be found in the URL when editing a coupon. Note that the coupon code cannot be used.)
    type: string
  'trait:subscriptionQueryString:date_field':
    name: date_field
    in: query
    description: ' The date field to filter on, such as canceled_at or updated_at. See the Subscription Output Attributes for a full list.'
    type: string
    format: date
  'trait:subscriptionQueryString:start_date':
    name: start_date
    in: query
    description: 'The start date (format YYYY-MM-DD) with which to filter the `date_field`. Returns subscriptions with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:subscriptionQueryString:end_date':
    name: end_date
    in: query
    description: 'The end date (format YYYY-MM-DD) with which to to filter the `date_field`. Returns subscriptions with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnMaxId:max_id':
    name: max_id
    in: query
    description: Returns transactions with an id less than or equal to the one specified
    type: integer
  'trait:direction:direction':
    name: direction
    in: query
    description: May be asc or desc to sort customers by time of creation
    type: string
    default: asc
  'trait:searchString:q':
    name: q
    in: query
    description: 'Search by email, ID, reference, organization.'
    type: string
  'trait:subscriptionIdQuery:subscription_id':
    name: subscription_id
    in: query
    type: integer
  'trait:metadataValue:value':
    name: value
    in: query
    description: Can be a single item or a list of metadata
    type: string
  'trait:stateStatusQuery:State / Status Filter':
    name: State / Status Filter
    in: query
    description: |+

    type: string
    enum:
      - trialing
      - trial_ended
      - active
      - soft_failure
      - past_due
      - canceled
      - unpaid
      - expired
  'trait:sinceId:since_id':
    name: since_id
    in: query
    type: string
  'trait:sort:sort':
    name: sort
    in: query
    type: string
    default: created_at
    enum:
      - created_at
      - opened_at
      - closed_at
  'trait:referralCode:code':
    name: code
    in: query
    description: The referral code you are trying to validate
    required: true
    type: string
  'trait:statementsList:sort':
    name: sort
    in: query
    description: |-
      Allows specification of the order of the returned list.  The list can be sorted by one of the following specifiers:

      * `closed_at`: Sort by the time the statement was closed (i.e. the end of the period it covers)
      * `created_at`: Sort by the time the statement was created
      * `opened_at`: Sort by the time the statement was opened (i.e. the beginning of the period it covers)
      * `settled_at`: Sort by the time the statement was settled

      See also the `direction` parameter.
    type: string
    enum:
      - created_at
      - opened_at
      - closed_at
      - settled_at
  'trait:statementsList:direction':
    name: direction
    in: query
    description: |-
      Specifies the direction of the sort on the given `sort` key:

      * `asc`: Sort in ascending (lowest to highest) order
      * `desc`: Sort in descending (highest to lowest) order
    type: string
    enum:
      - asc
      - desc
  'trait:settledSinceUnix:settled_since':
    name: settled_since
    in: query
    description: 'Format: UNIX timestamp'
    type: integer
    enum:
      - 1509408720
definitions:
  webhooks/list-webhook-output:
    title: List Webhook Output
    type: array
    items:
      type: object
      properties:
        webhook:
          type: object
          properties:
            event:
              type: string
            id:
              type: integer
            created_at:
              type: string
            last_error:
              type: string
            last_error_at:
              type: string
            accepted_at:
              type: 'null'
            last_sent_at:
              type: string
            last_sent_url:
              type: string
            successful:
              type: boolean
            body:
              type: string
            signature:
              type: string
            signature_hmac_sha_256:
              type: string
    example:
      - webhook:
          event: statement_settled
          id: 141765032
          created_at: '2016-11-08T16:22:26-05:00'
          last_error: 404 Resource Not Found (retry 5 of 5)
          last_error_at: '2016-11-08T16:43:54-05:00'
          accepted_at: null
          last_sent_at: '2016-11-08T16:43:54-05:00'
          last_sent_url: 'http://requestb.in/11u45x71'
          successful: false
          body: 'id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384'
          signature: 7c606ec4628ce75ec46e284097ce163a
          signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
      - webhook:
          event: payment_success
          id: 141765008
          created_at: '2016-11-08T16:22:25-05:00'
          last_error: 404 Resource Not Found (retry 5 of 5)
          last_error_at: '2016-11-08T16:43:54-05:00'
          accepted_at: null
          last_sent_at: '2016-11-08T16:43:54-05:00'
          last_sent_url: 'http://requestb.in/11u45x71'
          successful: false
          body: 'id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364'
          signature: fbcf2f6be579f9658cff90c4373e0ca2
          signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
    x-stoplight:
      id: webhooks/list-webhook-output
      name: List Webhook Output
      public: true
  events/list-events-for-subscription:
    title: Read Events for Subscription
    type: array
    items:
      type: object
      properties:
        event:
          type: object
          properties:
            id:
              type: integer
            key:
              type: string
            message:
              type: string
            subscription_id:
              type: integer
            created_at:
              type: string
            event_specific_data:
              type:
                - 'null'
                - object
    example:
      - event:
          id: 344799837
          key: statement_settled
          message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:29-04:00'
          event_specific_data: null
      - event:
          id: 344799815
          key: renewal_success
          message: Successful renewal for Amelia Example's subscription to Basic Plan
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:28-04:00'
          event_specific_data:
            product_id: 3792003
            account_transaction_id: null
      - event:
          id: 344799705
          key: billing_date_change
          message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:25-04:00'
          event_specific_data: null
    x-stoplight:
      id: events/list-events-for-subscription
      name: Read Events for Subscription
      public: true
  notes/create-note-output:
    title: Create Note Output
    type: object
    properties:
      note:
        type: object
        properties:
          id:
            type: integer
          body:
            type: string
          subscription_id:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
          sticky:
            type: boolean
    example:
      note:
        id: 105025
        body: New test note.
        subscription_id: 15054201
        created_at: '2016-11-03T14:47:08-04:00'
        updated_at: '2016-11-03T14:47:08-04:00'
        sticky: true
    x-stoplight:
      id: notes/create-note-output
      name: Create Note Output
      public: true
  events/list-site-event-output:
    title: Read Site Event Output
    type: array
    items:
      type: object
      properties:
        event:
          type: object
          properties:
            id:
              type: integer
            key:
              type: string
            message:
              type: string
            subscription_id:
              type: integer
            created_at:
              type: string
            event_specific_data:
              type:
                - 'null'
                - object
              properties:
                previous_subscription_state:
                  type: string
                new_subscription_state:
                  type: string
    example:
      - event:
          id: 343087780
          key: subscription_state_change
          message: State changed on Test subscription to Monthly Product from active to past_due
          subscription_id: 14950962
          created_at: '2016-10-27T16:42:22-04:00'
          event_specific_data:
            previous_subscription_state: active
            new_subscription_state: past_due
      - event:
          id: 343087742
          key: billing_date_change
          message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
          subscription_id: 14950962
          created_at: '2016-10-27T16:42:19-04:00'
          event_specific_data: null
      - event:
          id: 343085267
          key: statement_closed