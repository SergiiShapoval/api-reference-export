swagger: '2.0'
info:
  version: v1
  title: Chargify
  description: |-
    ## Welcome

    This is a place to put general notes and extra information, for internal use.

    To get started designing/documenting this API, select a version on the left. # Title
    No Description
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  <<api_key>>:
    type: basic
paths:
  '/subscriptions/{subscription_id}/adjustments.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-adjustments-json
      summary: Create an Adjustment
      tags:
        - Adjustment
        - Adjustments
      description: |-
        ## Create an Adjustment via API

        Creating an adjustment requires a valid, live subscription. The subscription must be referenced by `id`. For more information on creating a subscription, please see our [Subscriptions Introduction.](#docTextSection:aDNGencbmFC7h2NEW)

        In order to create an adjustment, pass an amount and an optional memo. The amount can be specified by either the `amount` parameter or the `amount_in_cents` parameter. The amount can be specified as a positive or a negative number. 

        Optionally, the `adjustment_method` parameter can be specified.

        ## Create an Adjustment via UI

        For more information on how to record an adjustment via the UI, please see our documentation [here.](http://help.chargify.com/subscriptions/adjustments.html#how-to-record-an-adjustment)

        ## Scenarios for adjustments

        | Scenario 1 | To create an Adjustment on a Subscription to increase the balance by a certain dollar amount, include the following to your request: | `"amount":"4.00"`                                            |
        |------------|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|
        | Scenario 2 | To increase the Subscription balance by a certain amount of cents, use the following attribute in your request:                      | `"amount_in_cents":100`                                      |
        | Scenario 3 | To decrease the Subscription balance by a certain dollar amount, the request must contain:                                           | `"amount":"-4.00"`                                           |
        | Scenario 4 | To decrease the Subscription balance by a certain amount of cents, use:                                                              | `"amount_in_cents":"-400"`                                   |
        | Scenario 5 | To set the Subscription balance to an exact dollar amount, include the following attributes to the request:                          | `"adjustment_method":"target", "amount":"100.00"`            |
        | Scenario 6 | To set the Subscription balance to an exact positive amount of cents, the request must contain the following attributes:             | `"adjustment_method":"target",` `"amount_in_cents":"10000"`  |
        | Scenario 7 | To set the Subscription balance to an exact negative amount of cents, use the following attributes in the request:                   | `"adjustment_method":"target",` `"amount_in_cents":"-10000"` |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/adjustments/request'
            example:
              adjustment:
                amount: '75'
                memo: Recording usage for May 2020
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/adjustments/response'
          examples:
            application/json:
              adjustment:
                amount: '75'
                memo: Recording usage for May 2020
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-adjustmentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: true
          statusCode: 201
  '/subscriptions/{subscription_id}/components/{component_id}/allocations.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
      - name: component_id
        in: path
        description: The Component ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-components-component_id-allocations-json
      summary: Create Allocation for On/Off Component
      tags:
        - 'Components: On/Off Toggling'
      description: |-
        ## Create Allocation for On/Off Component

        For full documentation on configuring allocations for subscriptions, please view the [Allocations](#docTextSection:Fupxh2M7fACmdwsDm) endpoint documentation.

        After a subscription has been created, you may enable of disable the on/off componentat any time. To do this, use the [Allocations](#endpoint:3stsG5oibfdivng9j) endpoint.

        The method creates a new allocation, setting the current allocated quantity for the Component and recording a memo.

        **Notice**: Allocations can only be updated for Quantity and On/Off Components.

        ## Input Fields

        | **Input Fields** | **Description** |
        |----------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | quantity |For On/Off components, use `1 `for on and `0` for off. By default, this is an integer.   |
        | memo | (optional) A memo to record along with the allocation |
        | proration_upgrade_scheme | (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided. |
        | proration_downgrade_scheme | (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided. |
        | payment_collection_method | (optional, default `automatic`) For subscriptions on invoice billing, when `proration_upgrade_scheme` is set to either `prorate-attempt-capture` or `full-price-attempt-capture` and `payment_collection_method` is set to invoice, a mid-period invoice will be created from any charges that are a result of the allocation change. The charge will not appear on the invoice created at the next renewal. For subscriptions on statement billing, this option is ignored. |

        ## Output Fields

        | Output Fields              | Description                                                                                                                                                             |
        |----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | component_id               | The integer component ID for the allocation. This references a component that you have created in your Product setup                                                    |
        | subscription_id            | The integer subscription ID for the allocation. This references a unique subscription in your Site                                                                      |
        | quantity                   | In the case of a on/off component, the quantity will be either `1` for enabled, or `0` for off.                                                                                                               |
        | previous_quantity          | The allocated quantity that was in effect before this allocation was created. In the case of an on/off component, it will be either `1` for enabled, or `0` for off.                                                                                            |
        | memo                       | The memo passed when the allocation was created                                                                                                                         |
        | proration_upgrade_scheme   | The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.                                                       |
        | proration_downgrade_scheme | The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.                                                      |
        | timestamp                  | The time that the allocation was recorded, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format and UTC timezone, i.e. `2012-11-20T22:00:37Z`                                                               |
        | payment                    | If capture was attempted for a mid-period allocation, includes `amount_in_cents`, `success`, `memo` and `id` attributes describing the payment, or null if no card was on file. |

        ## On/Off Component Example

        The following example will toggle an on/off component to ON. A value of `0` will toggle the component to OFF.

        ```
        {
          "allocation": {
            "quantity": 5,
            "memo": "Recoding component purchase of Acme Support"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/onoff/toggling-on-off-request'
            example:
              allocation:
                component_id: 399850
                quantity: 0
                price_point_id: 130350
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/onoff/toggling-on-off-response'
          examples:
            application/json:
              - allocation:
                  component_id: 399853
                  subscription_id: 18342261
                  quantity: 0
                  previous_quantity: 1
                  memo: null
                  timestamp: '2017-07-10T21:00:38Z'
                  proration_upgrade_scheme: no-prorate
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 121003
                  previous_price_point_id: 121003
                  payment: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-components-componentid-allocationsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-allocations-json
      summary: Read Allocations for a Subscription's Quantity-based Components
      tags:
        - 'Components: On/Off Toggling'
      description: |-
        ## Read Allocations for Quantity-based Component Usage for a Subscription

        Use this endpoint to read the previously allocated components for a subscription.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-allocations-for-a-subscriptions-quantity-based-components'
          examples:
            application/json:
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '100.0'
                  previous_quantity: '50.0'
                  memo: Third record
                  timestamp: '2018-01-03T15:15:41Z'
                  proration_upgrade_scheme: prorate-delay-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '50.0'
                  previous_quantity: '10.0'
                  memo: Second record
                  timestamp: '2018-01-03T15:15:13Z'
                  proration_upgrade_scheme: full-price-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
              - allocation:
                  component_id: 426645
                  subscription_id: 20310847
                  quantity: '10.0'
                  previous_quantity: '0.0'
                  memo: First record
                  timestamp: '2018-01-03T15:14:46Z'
                  proration_upgrade_scheme: full-price-delay-capture
                  proration_downgrade_scheme: no-prorate
                  price_point_id: 149418
                  previous_price_point_id: 149418
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentid-allocationsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{customer_id}/management_link.json':
    parameters:
      - name: customer_id
        in: path
        description: The Customer ID.
        required: true
        type: integer
    get:
      operationId: GET_portal-customers-customer_id-management_link-format
      summary: Read the Management Link
      tags:
        - Billing Portal
        - incomplete
      description: |-
        ## Read the Management Link

        This method will provide to the API user the exact URL required for a subscriber to access the Billing Portal.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/billing-portal-get-response'
          examples:
            application/json:
              url: 'https://www.billingportal.com/manage/19804639/1517596469/bd16498719a7d3e6'
              fetch_count: 1
              created_at: '2018-02-02T18:34:29Z'
              new_link_available_at: '2018-02-17T18:34:29Z'
              expires_at: '2018-04-08T17:34:29Z'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Billing Portal is not enabled for this customer.
        '429':
          description: ''
          schema:
            $ref: '#/definitions/billing-portal/request'
          examples:
            application/json:
              errors:
                error: Too many requests for this customer's management link
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_portal-customers-customer_id-management_link-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/portal/customers/{customer_id}/enable.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: integer
    post:
      operationId: POST_portal-customers-customer_id-enable-json
      summary: Enabling Billing Portal for Customer
      tags:
        - Billing Portal
      description: |-
        ## Enabling Billing Portal for Customer

        You can enable Billing Portal access for a Customer, with the option of sending the Customer an Invitation email at the same time.

        ## When the Billing Portal is already enabled for a Customer

        ```json
        {
          "errors": [ "Portal is already enabled for this customer." ]
        }
        ```
      parameters:
        - name: auto_invite
          in: query
          description: 'When set to 1, an Invitation email will be sent to the Customer. When set to 0, or not sent, an email will not be sent.'
          type: boolean
        - name: body
          in: body
          schema:
            $ref: '#/definitions/billing-portal-request-enable-post'
      responses:
        '200':
          description: ''
          schema:
            type: object
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_portal-customers-customerid-enablejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{id}/enable.json':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      operationId: POST_portal-customers-id-enable-json
      summary: Enabling Billing Portal and Sending Invite Simultaneously
      tags:
        - Billing Portal
      description: '## Enabling Billing Portal and Sending Invite Simultaneously'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/billing-portal-request-enable-post'
        - $ref: '#/parameters/trait:autoInvite:auto_invite'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/billing-portal-simul-response-post'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Portal is already enabled for this customer.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_portal-customers-id-enablejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/portal/customers/{customer_id}/invitations/revoke.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: integer
    delete:
      operationId: DELETE_portal-customers-customer_id-invitations-revoke-json
      summary: Revoke Billing Portal Invitation for Customer
      tags:
        - Billing Portal
      description: |-
        ## Revoke Billing Portal Invitation for Customer

        You can revoke a customer's Billing Portal invitation.

        If you attempt to revoke an invitation when the Billing Portal is already disabled for a Customer, you will receive a 422 error response.

        ## Limitations

        This endpoint will only return a JSON response.
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              last_sent_at:
                type: string
              last_accepted_at:
                type: string
              uninvited_count:
                type: integer
          examples:
            application/json:
              last_sent_at: Not Invited
              last_accepted_at: Invite Revoked
              uninvited_count: 8
        '422':
          description: ''
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_portal-customers-customerid-invitations-revokejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/{plural_kind}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
      - name: plural_kind
        in: path
        required: true
        type: string
        enum:
          - metered_components
          - quantity_based_components
          - on_off_components
    post:
      operationId: POST_product_families-product_family_id-plural_kind-json
      summary: Create Component within a Product Family
      tags:
        - Component
        - Components
      description: "## Create Component within a Product Family\n\nThis request will create a component under the specified product family. Please note that you may not edit components via API. To do so, please log into the application.\n\n## Plural Kind  \n\nIn order to create a component via API, a `plural_kind` is required. Plural kind is defined as the endpoint for the type of component you wish to create.\n\nUse one of the following:\n\n+ metered_components\n+ quantity_based_components\n+ on_off_components\n\n## Metered Component Example\n\n```\n{\n  \"metered_component\": {\n    \"name\": \"Text messages\",\n    \"unit_name\": \"text message\",\n    \"taxable\": false,\n    \"pricing_scheme\": \"stairstep\",\n    \"prices\": [\n      {\n        \"starting_quantity\": 1,\n        \"unit_price\": 1,\n        \"component\": null\n      }\n    ]\n  }\n}\n```\n\n## Quantity Based Example\n\n**Per Unit Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Component\",\n\t\t\"description\": \"Example of JSON per-unit component example\",\n\t\t\"pricing_scheme\": \"per_unit\",\n\t\t\"unit_price\": \"10\",\n\t\t\"taxable\": \"1\"\n\t},\n\t\"display_on_hosted_page\": \"1\",\n\t\"allow_fractional_quantities\": \"1\",\n\t\"public_signup_page_ids\": [\"323397\"]\n}\n```\n\n**Stairstep Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON stairstep example\",\n\t\t\"pricing_scheme\": \"stairstep\",\n\t\t\"unit_price\": \"\",\n\t  \"taxable\": \"1\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"100\",\n\t\t\t\t\"unit_price\": \"50\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"101\",\n\t\t\t\t\"ending_quantity\": \"200\",\n\t\t\t\t\"unit_price\": \"10\"\n\t\t\t},\n\t\t\t\"display_on_hosted_page\": \"1\",\n\t\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\t\"public_signup_page_ids\": [\"323397\"]\n\t\t}\n\t}\n}\n```\n\n**Volume Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON volume component example\",\n\t\t\"pricing_scheme\": \"volume\",\n\t\t\"taxable\": \"1\",\n\t\t\"unit_price\": \"\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"10\",\n\t\t\t\t\"unit_price\": \"10\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"11\",\n\t\t\t\t\"ending_quantity\": \"20\",\n\t\t\t\t\"unit_price\": \"5\"\n\t\t\t}\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\"public_signup_page_ids\": [\"323397\"]\n\t},\n\t\"commit\": \"Create Component\",\n\t\"product_family_id\": \"997233\"\n}\n```\n\n**Tiered Example**\n\n```\n{\n\t\"quantity_based_component\": {\n\t\t\"name\": \"Quantity Based Component\",\n\t\t\"unit_name\": \"Quantity Based Component\",\n\t\t\"description\": \"Example of JSON for tiered quantity based component\",\n\t  \"taxable\": \"1\",\n\t\t\"pricing_scheme\": \"tiered\",\n\t\t\"unit_price\": \"\",\n\t\t\"prices_attributes\": {\n\t\t\t\"0\": {\n\t\t\t\t\"starting_quantity\": \"1\",\n\t\t\t\t\"ending_quantity\": \"20\",\n\t\t\t\t\"unit_price\": \"50\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"starting_quantity\": \"21\",\n\t\t\t\t\"ending_quantity\": \"40\",\n\t\t\t\t\"unit_price\": \"25\"\n\t\t\t}\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"allow_fractional_quantities\": \"1\",\n\t\t\"public_signup_page_ids\": [\"323397\"]\n\t}\n}\n```\n\n\n## On/Off Component\n\n```\n{\n\t\"on_off_component\": {\n\t\t\"name\": \"Annual Support Services\",\n\t\t\"description\": \"Prepay for support services\",\n\t\t\"taxable\": \"1\",\n\t\t\"price_attributes\": {\n\t\t\t\"unit_price\": \"100.00\",\n\t\t\t\"starting_quantity\": \"0\"\n\t\t},\n\t\t\"display_on_hosted_page\": \"1\",\n\t\t\"public_signup_page_ids\": [\"320495\"]\n}\n```"
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/component/create'
            example:
              metered_component:
                name: Text messages
                unit_name: text message
                taxable: false
                pricing_scheme: stairstep
                prices:
                  - starting_quantity: 1
                    unit_price: 1
                    component: null
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              component:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  pricing_scheme:
                    type: string
                  unit_name:
                    type: string
                  unit_price:
                    type: 'null'
                  product_family_id:
                    type: integer
                  price_per_unit_in_cents:
                    type: 'null'
                  kind:
                    type: string
                  archived:
                    type: boolean
                  taxable:
                    type: boolean
                  description:
                    type: 'null'
                  prices:
                    type: array
                    items:
                      type: object
                      properties:
                        starting_quantity:
                          type: integer
                        ending_quantity:
                          type: 'null'
                        unit_price:
                          type: string
          examples:
            application/json:
              component:
                id: 292609
                name: Text messages
                pricing_scheme: stairstep
                unit_name: text message
                unit_price: null
                product_family_id: 528484
                price_per_unit_in_cents: null
                kind: metered_component
                archived: false
                taxable: false
                description: null
                prices:
                  - starting_quantity: 1
                    ending_quantity: null
                    unit_price: '1.0'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Name: cannot be blank.'
                - 'Unit name: cannot be blank.'
                - 'Pricing scheme: cannot be blank.'
                - At least 1 price bracket must be defined
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-pluralkindjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/quantity_based_components.{format}':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
      - name: format
        in: path
        required: true
        type: string
    post:
      operationId: POST_product_families-product_family_id-quantity_based_components-format
      summary: Create Component with Price Points
      tags:
        - Components
      description: |-
        ## Create a Component with Price Points

        This endpoint will allow you to create a componenent within Chargify that has multiple price points.

        ## Component Documentation

        For more information on components, please see our documentation [here.](https://help.chargify.com/products/product-components.html)
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/create-component-with-price-points-request'
            example:
              quantity_based_component:
                name: Widget
                description: widget
                unit_name: widget
                pricing_scheme: volume
                default_price_point_name: Initial
                default_price_point_handle: initial-handle
                prices:
                  - starting_quantity: '1'
                    ending_quantity: '100'
                    unit_price: '5.00'
                  - starting_quantity: '101'
                    unit_price: '4.00'
                price_points:
                  - name: Wholesale
                    handle: wholesale-handle
                    pricing_scheme: tiered
                    prices:
                      - starting_quantity: '1'
                        ending_quantity: '2'
                        unit_price: '1'
                public_signup_page_ids:
                  - '1'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/create-response-post'
          examples:
            application/json:
              component:
                id: 292609
                name: Text messages
                pricing_scheme: stairstep
                unit_name: text message
                unit_price: null
                product_family_id: 528484
                price_per_unit_in_cents: null
                kind: metered_component
                archived: false
                taxable: false
                description: null
                default_price_point_id: 75
                prices:
                  - starting_quantity: 1
                    ending_quantity: null
                    unit_price: '1.0'
                price_point_count: 2
                price_points_url: /components/292609/price_points
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-quantitybasedcomponentsformat
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/components.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
    get:
      operationId: GET_product_families-product_family_id-components-json
      summary: Read Components for a Product Family
      tags:
        - incomplete
        - Component
        - Components
      description: |-
        ## Read Components for a Product Family

        This request will return a list of components for a particular product family.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/read-components-for-a-product-family-output'
          examples:
            application/json:
              - component:
                  id: 399850
                  name: $1.00 component
                  pricing_scheme: per_unit
                  unit_name: Component
                  unit_price: '1.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: quantity_based_component
                  archived: false
                  taxable: false
                  description: Component
                  default_price_point_id: 121000
                  prices:
                    - id: 630687
                      component_id: 399850
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '1.0'
                      price_point_id: 121000
                      formatted_unit_price: $1.00
                  price_point_count: 2
                  price_points_url: 'https://general-goods.chargify.com/components/399850/price_points'
                  tax_code: null
              - component:
                  id: 399853
                  name: Annual Support Services
                  pricing_scheme: null
                  unit_name: on/off
                  unit_price: '100.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: on_off_component
                  archived: false
                  taxable: true
                  description: Prepay for support services
                  default_price_point_id: 121003
                  price_point_count: 4
                  price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                  tax_code: D0000000
              - component:
                  id: 386937
                  name: Cancellation fee
                  pricing_scheme: null
                  unit_name: on/off
                  unit_price: '35.0'
                  product_family_id: 997233
                  price_per_unit_in_cents: null
                  kind: on_off_component
                  archived: false
                  taxable: false
                  description: ''
                  default_price_point_id: 108307
                  price_point_count: 1
                  price_points_url: 'https://general-goods.chargify.com/components/386937/price_points'
                  tax_code: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-componentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/components/{component_id}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: integer
      - name: component_id
        in: path
        required: true
        type: integer
    get:
      operationId: GET_product_families-product_family_id-components-component_id-json
      summary: Read Specific Component for a Product Family
      tags:
        - Component
        - Components
      description: |-
        ## Read a Specific Component for a Product Family

        This request will return information regarding a component from a specific product family.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/list-specific-component-product-family-get'
          examples:
            application/json:
              component:
                id: 399853
                name: Annual Support Services
                pricing_scheme: null
                unit_name: on/off
                unit_price: '100.0'
                product_family_id: 997233
                price_per_unit_in_cents: null
                kind: on_off_component
                archived: false
                taxable: true
                description: Prepay for support services
                default_price_point_id: 121003
                price_point_count: 4
                price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                tax_code: D0000000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-components-componentidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /components/lookup.json:
    get:
      operationId: GET_components-lookup-json
      summary: Lookup Specific Component by Handle
      tags:
        - Component
        - Components
      description: |-
        ## Lookup a Specific Component by Handle

        This request will return information regarding a component having the handle you provide. You can identify your components with a handle so you don't have to save or reference the IDs we generate.
      parameters:
        - name: handle
          in: query
          description: The handle of the component you wish to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/component/list-specific-component-product-family-get'
          examples:
            application/json:
              component:
                id: 399853
                name: Annual Support Services
                pricing_scheme: null
                unit_name: on/off
                unit_price: '100.0'
                product_family_id: 997233
                price_per_unit_in_cents: null
                kind: on_off_component
                archived: false
                taxable: true
                description: Prepay for support services
                default_price_point_id: 121003
                price_point_count: 4
                price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
                tax_code: D0000000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_components-lookupjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components/{component_id}.json':
    parameters:
      - name: subscription_id
        in: path
        description: The ID of the Subscription from which you want to get a listing of applied Components.
        required: true
        type: integer
      - name: component_id
        in: path
        description: The ID of the Component you want to retrieve information about.
        required: true
        type: integer
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-json
      summary: Reading Current Quantity
      tags:
        - 'Components: On/Off Toggling'
      description: |-
        ## Reading Current Quantity

        You can query the API to receive the current quantity for a Quantity Component by sending a GET request.

        ## Querying data via Chargify gem

        You can also query the current quantity via the [official Chargify Gem.]( http://github.com/chargify/chargify_api_ares)

        ```# First way
        component = Chargify::Subscription::Component.find(1, :params => {:subscription_id => 7})
        puts component.allocated_quantity
        # => 23

        # Second way
        component = Chargify::Subscription.find(7).component(1)
        puts component.allocated_quantity
        # => 23
        ```
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/quantity/reading-current-quantity-response'
          examples:
            application/json:
              component:
                component_id: 399850
                subscription_id: 18342261
                allocated_quantity: 29
                name: Bronze Subscriptions 123
                kind: quantity_based_component
                unit_name: Bronze Subscriptions
                pricing_scheme: per_unit
                price_point_id: 121000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components.json':
    parameters:
      - name: subscription_id
        in: path
        description: The ID of the Subscription from which you want to get a listing of applied Components.
        required: true
        type: integer
    get:
      operationId: GET_subscriptions-subscription_id-components-format
      summary: Read Components for a Subscription
      tags:
        - Component
        - Component Line Items
      description: |-
        ## Read Components for a Subscription

        This request will list a subscription's applied components.

        ## Archived Components

        When requesting to list components for a given subscription, if the subscription contains **archived** components they will be listed in the server response.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/components/read-components-get'
          examples:
            application/json:
              - {}
              - component:
                  unit_name: Text messages
                  name: text_messages
                  kind: metered_component
                  component_id: 98322708341
                  subscription_id: 38855254509
                  allocated_quantity: 1500
                  unit_balance: 5000
              - component:
                  enabled: true
                  subscription_id: 30336331837
                  unit_balance: 5000
                  name: text messages
              - {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-components-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/components/{component_id}/usages.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-components-component_id-usages-json
      summary: Create Usage for Subscription
      tags:
        - 'Components: Metered Usage'
      description: |-
        ## Create Usage for Subscription

        This request will record metered usage for a subscription.

        ## Price Point ID usage

        If you are using price points, for metered components, Chargify gives you the option to specify a price point in your request.

        You do not need to specify a price point ID. If a price point is not included, the default price point for the component will be used when the usage is recorded.

        If an invalid `price_point_id` is submitted, the endpoint will return an error. 

        ## Recording zero usage

        In the event that you would like to record an amount of `0` for a subscriber's component, you must substract the amount from the current usage.

        Example:

        Currently recorded:

        ```{
          "usage": {
            "quantity": 5000,
            "memo": "My memo"
          }
        }
        ```

        To record a zero amount, POST the following payload:

        ```{
          "usage": {
            "quantity": -5000,
            "memo": "My memo"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/metered/create-usage-input'
            example:
              usage:
                quantity: 1000
                price_point_id: '149416'
                memo: My memo
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/metered/create-usage-output'
          examples:
            application/json:
              usage:
                id: 138522957
                memo: My memo
                created_at: '2017-11-13T10:05:32-06:00'
                price_point_id: 149416
                quantity: 1000
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Price point: could not be found.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-components-componentid-usagesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-components-component_id-usages-json
      summary: Read Usage by Component for a Subscription
      tags:
        - 'Components: Metered Usage'
      description: |-
        ## Read Usage by Component

        This request will return a list of the usages associated with a subscription for a particular metered component.

        This endpoint is not compatible with quantity-based components.

        ## Since Date and Until Date Usage 

        Note: The `since_date` and `until_date` attributes each default to midnight on the date specified. For example, in order to list usages for January 20th, you would need to append the following to the URL. 

        ```?since_date=2016-01-20&until_date=2016-01-21```
      parameters:
        - $ref: '#/parameters/trait:componentParameters:since_id'
        - $ref: '#/parameters/trait:componentParameters:max_id'
        - $ref: '#/parameters/trait:componentParameters:since_date'
        - $ref: '#/parameters/trait:componentParameters:until_date'
        - $ref: '#/parameters/trait:componentParameters:page'
        - $ref: '#/parameters/trait:componentParameters:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/metered/read-usage-output-subscription'
          examples:
            application/json:
              - usage:
                  id: 109806402
                  memo: ''
                  created_at: '2016-11-29T15:22:18-05:00'
                  quantity: 100
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-components-componentid-usagesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions.json:
    post:
      operationId: POST_subscriptions-json
      summary: Create Subscription
      tags:
        - 'Components: Metered Usage'
      description: "## Create Subscription\n\nWhen creating a Subscription, you must specify Product and Customer properties.\n\nCredit card details may be required, depending on the options for the Product being subscribed. The Product can be specified by `product_id` or by `product_handle` (API Handle).\n\nThe `customer_id` is required, unless `customer_reference` or a set of `customer_attributes` is given.\nThe `customer_reference` is required, unless `customer_id` or a set of `customer_attributes` is given.\n\n## Product Handle vs. Product ID\n\nThe `product_handle` is required, unless the `product_id` value is provided instead. The Product ID is not currently published, so we recommend using the API Handle (`product_handle`) instead.\n\n## Calendar Billing\n\nThe `calendar_billing` cannot be used when also specifying `next_billing_at`.\n\n## Taxable Subscriptions\n\nIf your intent is to charge your subscribers tax via [Avalara Taxes](https://help.chargify.com/taxes/avalara-managed-sales-tax.html) or [Custom Taxes](https://help.chargify.com/taxes/custom-taxes.html), there are a few considerations to be made regarding collecting subscription data. For subscribers to be eligible to be taxed, the following information for the `customer` object or `payment_profile` object must by supplied:\n\n+ A subscription to a [taxable product](https://help.chargify.com/products/product-editing.html#tax-settings)\n+ [Full valid billing or shipping address](https://help.chargify.com/taxes/avalara-managed-sales-tax.html#full-address-required-for-taxable-subscriptions) to identify the tax locale\n+ The portion of the address that houses the [state information](https://help.chargify.com/taxes/avalara-managed-sales-tax.html#required-state-format-for-taxable-subscriptions) of either adddress must adhere to the ISO standard of a 2-3 character limit/format.\nThe portion of the address that houses the [country information](https://help.chargify.com/taxes/avalara-managed-sales-tax.html#required-country-format-for-taxable-subscriptions) must adhere to the ISO standard of a 2 character limit/format.\n\n\n## Existing Customers\n\nAn existing Customer can be specified by `customer_id` (its ID within Chargify) or `customer_reference` (a unique value within your application that you have shared with Chargify). \n\nUse the following JSON example to form an object that will create a subscription for an already existing customer.\n\n```\n    {\n    \t\"subscription\": {\n    \t\t\"product_handle\": \"basic\",\n    \t\t\"customer_id\": 2000,\n    \t\t\"credit_card_attributes\": {\n    \t\t\t\"full_number\": \"1\",\n    \t\t\t\"expiration_month\": \"10\",\n    \t\t\t\"expiration_year\": \"2020\"\n    \t\t}\n    \t}\n    }\n```\n\n## Existing Customer with Existing Payment Profile\n\n```\n{\n  \"subscription\": {\n    \"product_handle\": \"product-xyz\",\n    \"customer_id\": 17346006,\n    \"payment_profile_id\": 11991557\n  }\n}\n```\n\n## New Customer\n\nA new Customer can be created by providing `customer_attributes`.\n\n## Create Subscription with Coupon\n\nUse the following JSON example to create a subscription with a coupon. This JSON is applicable when a payment method is not required for a product.\n\nFor more information on creating subscriptions with a coupon code, please see the section on creating a subscription with coupon [here.](#endpoint:YFHw4XRYxaqLwGNvk)\n\n```\n      {\n      \t\"subscription\": {\n      \t\t\"product_handle\": \"basic\",\n      \t\t\"customer_attributes\": {\n      \t\t\t\"first_name\": \"Joe\",\n      \t\t\t\"last_name\": \"Blow\",\n      \t\t\t\"email\": \"joe@example.com\"\n      \t\t},\n      \t\t\"credit_card_attributes\": {\n      \t\t\t\"full_number\": \"1\",\n      \t\t\t\"expiration_month\": \"10\",\n      \t\t\t\"expiration_year\": \"2020\"\n      \t\t},\n      \t\t\"coupon_code\": \"SUB111\"\n      \t}\n      }\n```      \n\n## Create Subscription with Coupon and Payment Profile\n\nUse the following JSON example to create a subscription with a coupon. This JSON is applicable when a payment method is required for a product.\n\nFor more information on creating subscriptions with a coupon code, please see the section on creating a subscription with coupon [here.](#endpoint:YFHw4XRYxaqLwGNvk)\n\n```\n{\n  \"subscription\": {\n    \"product_handle\": \"basic\",\n    \"customer_attributes\": {\n      \"first_name\": \"Joe\",\n      \"last_name\": \"Public\",\n      \"email\": \"joe@example.com\"\n    },\n    \"credit_card_attributes\": {\n      \"full_number\": \"1\",\n      \"expiration_month\": \"10\",\n      \"expiration_year\": \"2020\"\n    },\n    \"coupon_code\": \"100OFF\"\n  }\n}\n```\n\n\n## Subscription with Future Billing Date\n\n```\n      {\n      \t\"subscription\": {\n      \t\t\"product_handle\": \"basic\",\n      \t\t\"customer_attributes\": {\n      \t\t\t\"first_name\": \"Joe\",\n      \t\t\t\"last_name\": \"Blow\",\n      \t\t\t\"email\": \"joe@example.com\"\n      \t\t},\n      \t\t\"credit_card_attributes\": {\n      \t\t\t\"full_number\": \"1\",\n      \t\t\t\"expiration_month\": \"10\",\n      \t\t\t\"expiration_year\": \"2020\"\n      \t\t},\n      \t\t\"next_billing_at\": \"2020-06-01\"\n      \t}\n      }\n```\n\n## Subscription with On-Off Component\n\n```\n      {\n      \t\"subscription\": {\n      \t\t\"product_handle\": \"basic\",\n      \t\t\"customer_attributes\": {\n      \t\t\t\"first_name\": \"Joe\",\n      \t\t\t\"last_name\": \"Blow\",\n      \t\t\t\"email\": \"joe@example.com\"\n      \t\t},\n      \t\t\"credit_card_attributes\": {\n      \t\t\t\"full_number\": \"1\",\n      \t\t\t\"expiration_month\": \"10\",\n      \t\t\t\"expiration_year\": \"2020\"\n      \t\t},\n      \t\t\"components\": [{\n      \t\t\t\"component_id\": 2500,\n      \t\t\t\"enabled\": true\n      \t\t}]\n      \t}\n      }\n```\n\n## Subscription with Metered Components\n\n```\n {\n    \t\"subscription\": {\n    \t\t\"product_handle\": \"basic\",\n    \t\t\"customer_attributes\": {\n    \t\t\t\"first_name\": \"Joe\",\n    \t\t\t\"last_name\": \"Blow\",\n    \t\t\t\"email\": \"joe1049am@example.com\"\n    \t\t},\n    \t\t\"credit_card_attributes\": {\n    \t\t\t\"full_number\": \"1\",\n    \t\t\t\"expiration_month\": \"10\",\n    \t\t\t\"expiration_year\": \"2020\"\n    \t\t},\n    \t\t\"components\": [{\n    \t\t\t\"component_id\": 195268,\n    \t\t\t\"unit_balance\": 20\n    \t\t}]\n    \t}\n    }\n```\n\n## Subscription with Quantity-Based Component\n\n```\n     {\n     \t\"subscription\": {\n     \t\t\"product_handle\": \"basic\",\n     \t\t\"customer_attributes\": {\n     \t\t\t\"first_name\": \"Joe\",\n     \t\t\t\"last_name\": \"Blow\",\n     \t\t\t\"email\": \"joe@example.com\"\n     \t\t},\n     \t\t\"credit_card_attributes\": {\n     \t\t\t\"full_number\": \"1\",\n     \t\t\t\"expiration_month\": \"10\",\n     \t\t\t\"expiration_year\": \"2020\"\n     \t\t},\n     \t\t\"components\": [{\n     \t\t\t\"component_id\": 2500,\n     \t\t\t\"allocated_quantity\": 14\n     \t\t}]\n     \t}\n     }\n```\n\n## Subscription with a Non-Default Component Price Point\nWhen creating a subscription with a component, a `price_point_id` can be passed in along with the `component_id` to specify which price point to use. If not passed in, the default price point will be used.\n\nNote: if an invalid `price_point_id` is used, the subscription will still proceed but will use the component's default price point.\n\n```\n     {\n     \t\"subscription\": {\n     \t\t\"product_handle\": \"basic\",\n     \t\t\"customer_attributes\": {\n     \t\t\t\"first_name\": \"Joe\",\n     \t\t\t\"last_name\": \"Blow\",\n     \t\t\t\"email\": \"joe@example.com\"\n     \t\t},\n     \t\t\"credit_card_attributes\": {\n     \t\t\t\"full_number\": \"1\",\n     \t\t\t\"expiration_month\": \"10\",\n     \t\t\t\"expiration_year\": \"2020\"\n     \t\t},\n     \t\t\"components\": [{\n     \t\t\t\"component_id\": 2500,\n     \t\t\t\"price_point_id\": 499,\n     \t\t\t\"allocated_quantity\": 14\n     \t\t}]\n     \t}\n     }\n```\n\n## Subscription with Calendar Billing\n\n```\n  {\n      \t\"subscription\": {\n      \t\t\"product_handle\": \"gold\",\n      \t\t\"customer_attributes\": {\n      \t\t\t\"first_name\": \"Allison\",\n      \t\t\t\"last_name\": \"Test\",\n      \t\t\t\"email\": \"allison@example.com\"\n      \t\t},\n            \"calendar_billing\": {\n              \"snap_day\": 1,\n              \"calendar_billing_first_charge\": \"immediate\"\n            },                \n      \t\t\"credit_card_attributes\": {\n      \t\t\t\"full_number\": \"1\",\n      \t\t\t\"expiration_month\": \"10\",\n      \t\t\t\"expiration_year\": \"2020\"\n      \t\t}\n      \t}\n      }\n```\n\n### Subscription with ACH as Payment Profile\n\n```\n{\n\t\"subscription\": {\n\t\t\"product_handle\": \"gold-product\",\n\t\t\"customer_attributes\": {\n\t\t\t\"first_name\": \"John\",\n\t\t\t\"last_name\": \"Doe\",\n\t\t\t\"email\": \"john.doe@example.com\",\n\t\t\t\"reference\": \"123\",\n\t\t\t\"organization\": \"Acme Widgets\"\n\t\t},\n\t\t\"bank_account_attributes\": {\n\t\t\t\"bank_name\": \"Best Bank\",\n\t\t\t\"bank_routing_number\": \"021000089\",\n\t\t\t\"bank_account_number\": \"111111111111\",\n\t\t\t\"bank_account_type\": \"checking\",\n\t\t\t\"bank_account_holder_type\": \"business\",\n\t\t\t\"payment_type\": \"bank_account\"\n\t\t}\n\t}\n}\n```\n\n## Subscription with Referral Code\n\nUse the following JSON to create a subscription using a referral code. Note that the `ref` key/value pair must be part of the subscription object. \n\n```\n{\n\t\"subscription\": {\n\t\t\"product_handle\": \"product-handle\",\n\t\t\"ref\": \"1q2w3e\",\n\t\t\"customer_attributes\": {\n\t\t\t\"first_name\": \"Graham\",\n\t\t\t\"last_name\": \"Example\",\n\t\t\t\"email\": \"alysa@example.com\"\n\t\t},\n\t\t\"credit_card_attributes\": {\n\t\t\t\"full_number\": \"1\",\n\t\t\t\"expiration_month\": \"10\",\n\t\t\t\"expiration_year\": \"2020\"\n\t\t}\n\t}\n}\n```\n\n## Subscription for existing customer on invoice collection method\n\n```\n{\n\t\"subscription\": {\n\t\t\"product_handle\": \"test\",\n\t\t\"customer_id\": \"12345\",\n\t\t\"payment_collection_method\": \"invoice\"\n\t}\n}\n```\n\n## Subscription with existing metafields\n\nIn the example below, the custom fields `color` and `comments` exist in the example site. \n\nWhen the request below is sent, the metafields are populated with the supplied metadata. No new metafields are created.\n\n```\n{\n    \"subscription\": {\n        \"product_handle\": \"basic\",\n        \"customer_attributes\": {\n            \"first_name\": \"Alysa\",\n            \"last_name\": \"Test\",\n            \"email\": \"alysa@example.com\"\n        },\n        \"credit_card_attributes\": {\n            \"full_number\": \"1\",\n            \"expiration_month\": \"10\",\n            \"expiration_year\": \"2020\"\n        },\n        \"metafields\": {\n            \"color\": \"blue\",\n            \"comments\": \"Thanks!\"\n        }\n    }\n}\n```\n\n\n## Subscription with on-the-fly metafields and metadata\n\nIn the example below, the custom fields `color` and `comments` do not exist as current custom fields / metafields in the example site. \n\nWhen the request below is sent, the metafields are created and populated with the corresponding metadata from the key/value pair submitted.\n\n```\n{\n    \"subscription\": {\n        \"product_handle\": \"basic\",\n        \"customer_attributes\": {\n            \"first_name\": \"Alysa\",\n            \"last_name\": \"Test\",\n            \"email\": \"alysa@example.com\"\n        },\n        \"credit_card_attributes\": {\n            \"full_number\": \"1\",\n            \"expiration_month\": \"10\",\n            \"expiration_year\": \"2020\"\n        },\n        \"metafields\": {\n            \"color\": \"blue\",\n            \"comments\": \"Thanks!\"\n        }\n    }\n}\n```\n\n## Subscription with Paypal as the payment profile \n\nAt the time of publication, the `payment_method_nonce` is ignored but must be present. \n\n```\n{ \"subscription\": {\n    \"product_handle\":\"test-product-b\",\n    \"customer_attributes\": {\n      \"first_name\":\"Amelia\",\n      \"last_name\":\"Johnson\",\n      \"email\":\"amelia@example.com\",\n      \"organization\":\"My Awesome Company\"\n    },\n    \"payment_profile_attributes\":{\n      \"paypal_email\": \"amelia@example.com\",\n      \"current_vault\": \"braintree_blue\",\n      \"vault_token\":\"58271347\",\n      \"payment_type\":\"paypal_account\",\n      \"payment_method_nonce\": \"[ignored-but-must-be-present]\"\n    }\n  }\n\n```"
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscriptions/create-subscription-request'
            example:
              subscription:
                product_handle: basic
                customer_attributes:
                  first_name: Alysa
                  last_name: Test
                  email: alysa@example.com
                credit_card_attributes:
                  full_number: '1'
                  expiration_month: '10'
                  expiration_year: '2020'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Credit card expiration year: cannot be blank.'
                - 'Last name: cannot be blank.'
                - 'Credit card expiration month: cannot be blank.'
                - 'Email address: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-json
      summary: Read Subscriptions for a Site
      tags:
        - Subscriptions
      description: |-
        ## Read Subscriptions for a Site

        This method will return an array of subscriptions from a Site. Pay close attention to query string filters and pagination in order to control responses from the server.

        ## Search for a subscription

        Use the query strings below to search for a subscription using the criteria available. The return value will be an array.
      parameters:
        - name: ''
          in: query
          type: string
        - $ref: '#/parameters/trait:subscriptionQueryString:page'
        - $ref: '#/parameters/trait:subscriptionQueryString:per_page'
        - $ref: '#/parameters/trait:subscriptionQueryString:state'
        - $ref: '#/parameters/trait:subscriptionQueryString:product'
        - $ref: '#/parameters/trait:subscriptionQueryString:product_revision_number'
        - $ref: '#/parameters/trait:subscriptionQueryString:coupon'
        - $ref: '#/parameters/trait:subscriptionQueryString:date_field'
        - $ref: '#/parameters/trait:subscriptionQueryString:start_date'
        - $ref: '#/parameters/trait:subscriptionQueryString:end_date'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscriptions/list-subscriptions-output'
          examples:
            application/json:
              - subscription:
                  id: 15236915
                  state: active
                  balance_in_cents: 0
                  total_revenue_in_cents: 14000
                  product_price_in_cents: 1000
                  product_version_number: 7
                  current_period_ends_at: '2016-11-15T14:48:10-05:00'
                  next_assessment_at: '2016-11-15T14:48:10-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-14T14:48:12-05:00'
                  expires_at: null
                  created_at: '2016-11-14T14:48:10-05:00'
                  updated_at: '2016-11-14T15:24:41-05:00'
                  cancellation_message: null
                  cancellation_method: null
                  cancel_at_end_of_period: null
                  canceled_at: null
                  current_period_started_at: '2016-11-14T14:48:10-05:00'
                  previous_state: active
                  signup_payment_id: 162269766
                  signup_revenue: '260.00'
                  delayed_cancel_at: null
                  coupon_code: 5SNN6HFK3GBH
                  payment_collection_method: automatic
                  snap_day: null
                  customer:
                    first_name: Curtis
                    last_name: Test
                    email: curtis@example.com
                    cc_emails: null
                    organization: ''
                    reference: null
                    id: 14714298
                    created_at: '2016-11-14T14:48:10-05:00'
                    updated_at: '2016-11-14T14:48:13-05:00'
                    address: 123 Anywhere Street
                    address_2: ''
                    city: Boulder
                    state: CO
                    zip: '80302'
                    country: US
                    phone: ''
                    verified: false
                    portal_customer_created_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_sent_at: '2016-11-14T14:48:13-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 3792003
                    name: $10 Basic Plan
                    handle: basic
                    description: lorem ipsum
                    accounting_code: basic
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: day
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: false
                    require_credit_card: false
                    created_at: '2016-03-24T13:38:39-04:00'
                    updated_at: '2016-11-03T13:03:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 281054
                        url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
                      - id: 281240
                        url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
                      - id: 282694
                        url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
                    taxable: false
                    version_number: 7
                  credit_card:
                    id: 10191713
                    payment_type: credit_card
                    first_name: Curtis
                    last_name: Test
                    masked_card_number: XXXX-XXXX-XXXX-1
                    card_type: bogus
                    expiration_month: 1
                    expiration_year: 2026
                    billing_address: 123 Anywhere Street
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: null
                    billing_country: ''
                    billing_zip: '80302'
                    current_vault: bogus
                    vault_token: '1'
                    customer_vault_token: null
                    customer_id: 14714298
                  payment_type: credit_card
                  referral_code: w7kjc9
                  next_product_id: null
                  coupon_use_count: 1
                  coupon_uses_allowed: 1
              - subscription:
                  id: 15189649
                  state: canceled
                  balance_in_cents: 15000
                  total_revenue_in_cents: 10000
                  product_price_in_cents: 10000
                  product_version_number: 1
                  current_period_ends_at: '2017-11-10T13:14:00-05:00'
                  next_assessment_at: '2017-11-10T13:14:00-05:00'
                  trial_started_at: null
                  trial_ended_at: null
                  activated_at: '2016-11-10T13:14:02-05:00'
                  expires_at: null
                  created_at: '2016-11-10T13:14:00-05:00'
                  updated_at: '2016-11-14T11:14:01-05:00'
                  cancellation_message: ''
                  cancellation_method: merchant_ui
                  cancel_at_end_of_period: false
                  canceled_at: '2016-11-14T11:14:01-05:00'
                  current_period_started_at: '2016-11-10T13:14:00-05:00'
                  previous_state: canceled
                  signup_payment_id: 161794022
                  signup_revenue: '100.00'
                  delayed_cancel_at: null
                  coupon_code: null
                  payment_collection_method: invoice
                  snap_day: null
                  customer:
                    first_name: Frankie
                    last_name: Bravo
                    email: testfrankietest.com
                    cc_emails: ''
                    organization: ''
                    reference: null
                    id: 14543712
                    created_at: '2016-11-02T10:16:17-04:00'
                    updated_at: '2016-11-14T09:54:39-05:00'
                    address: ''
                    address_2: ''
                    city: ''
                    state: ''
                    zip: ''
                    country: ''
                    phone: '5555551212'
                    verified: true
                    portal_customer_created_at: '2016-11-02T10:16:19-04:00'
                    portal_invite_last_sent_at: '2016-11-10T13:14:03-05:00'
                    portal_invite_last_accepted_at: null
                  product:
                    id: 4038269
                    name: Annual Product
                    handle: annual-product
                    description: ''
                    accounting_code: ''
                    price_in_cents: 10000
                    interval: 12
                    interval_unit: month
                    initial_charge_in_cents: null
                    expiration_interval: null
                    expiration_interval_unit: never
                    trial_price_in_cents: null
                    trial_interval: null
                    trial_interval_unit: month
                    initial_charge_after_trial: false
                    return_params: ''
                    request_credit_card: true
                    require_credit_card: true
                    created_at: '2016-09-28T09:54:05-04:00'
                    updated_at: '2016-09-28T09:54:05-04:00'
                    archived_at: null
                    update_return_url: ''
                    update_return_params: ''
                    product_family:
                      id: 527890
                      name: Acme Projects
                      handle: billing-plans
                      accounting_code: null
                      description: ''
                    public_signup_pages:
                      - id: 297032
                        url: 'https://general-goods.chargify.com/subscribe/b3hjynp5ss52/annual-product'
                    taxable: false
                    version_number: 1
                  credit_card:
                    id: 10188522
                    payment_type: credit_card
                    first_name: Frank
                    last_name: Test
                    masked_card_number: null
                    card_type: null
                    expiration_month: null
                    expiration_year: null
                    billing_address: 123 Montana Way
                    billing_address_2: ''
                    billing_city: Boulder
                    billing_state: CO
                    billing_country: US
                    billing_zip: '80302'
                    current_vault: bogus
                    vault_token: '123456789'
                    customer_vault_token: null
                    customer_id: 14543712
                  payment_type: bank_account
                  referral_code: hspss6
                  next_product_id: null
                  coupon_use_count: null
                  coupon_uses_allowed: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/allocations.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-sub_id-allocations-json
      summary: Create Multiple Allocations
      tags:
        - Allocation
        - 'Components: Quantity Allocations'
      description: |-
        ## Create Multiple Allocations

        The endpoint creates multiple allocations, setting the current allocated quantity for each the Component and recording a memo. If a proration scheme is provided, the charges that are created will be rolled up into a single payment.

        Creates multiple Allocations, setting the current allocated quantity for each the component and recording a memo. If a proration scheme is provided, the charges that are created will be rolled up into a single payment.

        This endpoint only responds to JSON. It is not available for XML.

        ## Input Fields

        | Input Fields | Description |
        |----------------------------|------------------------------------------------------------------------------------------------------------------|
        | allocations | An array of allocations, each containing a `component_id`, `quantity`, and `memo` |
        | proration_upgrade_scheme | (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided. |
        | proration_downgrade_scheme | (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided. |

        ## Output Fields

        An array of allocation objects with the following fields:

        | Output Fields | Desscription |
        |----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | component_id | The integer component ID for the allocation. This references a component that you have created in your Product setup |
        | subscription_id | The integer subscription ID for the allocation. This references a unique subscription in your Site |
        | quantity | The allocated quantity set in to effect by the allocation.By default this should be an integer. If decimal allocations are enabled for the component, it will be a decimal number. For On/Off components, use 1 for on and 0 for off. |
        | previous_quantity | The allocated quantity that was in effect before this allocation was created |
        | memo | The memo passed when the allocation was created |
        | proration_upgrade_scheme | The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period. |
        | proration_downgrade_scheme | The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period. |
        | timestamp | The time that the allocation was recorded, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format and UTC timezone, i.e. `2012-11-20T22:00:37Z` |
        | payment | If capture was attempted for a mid-period allocation, includes `amount_in_cents`, `success`, `memo` and `id` attributes describing the payment, or null if no card was on file. |

        ## JSON: Fetch second page (up to 50 more) of allocations

        Response is an array, ordered most recent first. In this example, there are no results in page 2 (response is an empty array) indicating that all allocations for this component and subscription have already been fetched.

        **Request**

        ```json
        curl -u <api_key>:X https://<subdomain>.chargify.com/subscriptions/2585595/components/11960/allocations.json
        ```

        **Response**

        ```
        []
        ```

        ## Response Status Codes

        | 201 Created              | Allocation created successfully                                                         |
        |--------------------------|-----------------------------------------------------------------------------------------|
        | 422 Unprocessable Entity | Invalid inputs provided: inspect the errors in the response for details                 |
        | 401 Unauthorized         | Authentication credentials were incorrect                                               |
        | 404 Not Found            | Either no component with the given comp_id, or no subscription with given sub_id exists |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/allocation/multiple-request-post'
            example:
              proration_upgrade_scheme: prorate-attempt-capture
              proration_downgrade_scheme: no-prorate
              allocations:
                - component_id: 123
                  quantity: 10
                  memo: foo
                - component_id: 456
                  quantity: 5
                  memo: bar
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/allocation/multiple-response-post'
          examples:
            application/json:
              - allocation:
                  component_id: 193159
                  subscription_id: 15540611
                  quantity: 10
                  previous_quantity: 0
                  memo: foo
                  timestamp: '2016-12-08T19:09:15Z'
                  proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  payment:
                    amount_in_cents: 1451
                    success: true
                    memo: 'Payment for: Prorated component allocation changes.'
                    id: 165473487
              - allocation:
                  component_id: 277221
                  subscription_id: 15540611
                  quantity: 5
                  previous_quantity: 0
                  memo: bar
                  timestamp: '2016-12-08T19:09:15Z'
                  proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  payment:
                    amount_in_cents: 1451
                    success: true
                    memo: 'Payment for: Prorated component allocation changes.'
                    id: 165473487
        '401':
          description: ''
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Quantity: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-sub_id-allocations-json
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/allocations/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST-preview-allocation
      summary: Preview Allocations
      tags:
        - Allocation
        - 'Components: Quantity Allocations'
      description: "## Preview an Allocation\n\nChargify offers the ability to preview a potential subscription's **quantity-based** or **on/off** component allocation in the middle of the current billing period.  This is useful if you want users to be able to see the effect of a component operation before actually doing it.\n\n## Input Fields\n\n| Input Fields                 \t| Description                                                                                                                           \t|\n|------------------------------\t|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\t|\n| allocations                   \t| An array of allocations, each containing a component_id, quantity, and memo                                                                                                                                                                                                                                                                                                             \t|\n| proration_upgrade_scheme   \t| (optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.                                                                                                                                                                                                                                                                                                                                                              \t|\n| proration_downgrade_scheme \t| (optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.                                                                                                                                                \n\n## Output Fields\n\n### An allocation preview object with the following fields:\n\n| Output Fields              | Description                                                                                                                                                             |\n|----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| start_date               | The start date of the allocation preview.                                                    |\n| end_date            | The end date of the allocation preview.                                                                      |\n| period_type          | The period type for this preview.  This is always 'prorated' for mid- period allocations.                                                                                            |\n| subtotal_in_cents                       | The subtotal for this preview.                                                                                                                         |\n| total_tax_in_cents   |         The total tax in cents.                                               |\n| total_discount_in_cents |    The total discount in cents.                                                   |\n| total_in_cents                  |    The total in cents.                                                            |\n| existing_balance_in_cents                    |  The existing balance in cents.  |\n| direction | The direction of this allocation.  Valid values are 'upgrade' or 'downgrade'. |\n| proration_scheme | The proration scheme for this allocation. |\n| line_items | An array of line_items, each containing transaction_type, kind, amount_in_cents, memo, discount_amount_in_cents, taxable_amount_in_cents,component_id|\n\n## Response Status Codes\n\n| 201 Created              | Allocation created successfully                                                         |\n|--------------------------|-----------------------------------------------------------------------------------------|\n| 422 Unprocessable Entity | Invalid inputs provided: inspect the errors in the response for details                 |\n| 401 Unauthorized         | Authentication credentials were incorrect                                               |\n| 404 Not Found            | Either no component with the given comp_id, or no subscription with given sub_id exists |"
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              proration_upgrade_scheme:
                type: string
              proration_downgrade_scheme:
                type: string
              allocations:
                type: array
                items:
                  type: object
                  properties:
                    component_id:
                      type: integer
                    quantity:
                      type: integer
                    memo:
                      type: string
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              allocation_preview:
                type: object
                properties:
                  start_date:
                    type: string
                  end_date:
                    type: string
                  subtotal_in_cents:
                    type: integer
                  total_tax_in_cents:
                    type: integer
                  total_discount_in_cents:
                    type: integer
                  total_in_cents:
                    type: integer
                  direction:
                    type: string
                  proration_scheme:
                    type: string
                  line_items:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_type:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        memo:
                          type: string
                        discount_amount_in_cents:
                          type: integer
                        taxable_amount_in_cents:
                          type: integer
                        component_id:
                          type: integer
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    kind:
                      type: string
                    component_id:
                      type: integer
                    'on':
                      type: string
                    message:
                      type: string
          examples:
            application/json:
              errors:
                - kind: allocation
                  component_id: 379512
                  'on': base
                  message: Allocations can only be updated for quantity and on/off components.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST-preview-allocation
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_components-component_id-price_points-json
      summary: Create Price Point
      tags:
        - 'Components: Price Points'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-request'
            example:
              price_point:
                name: Wholesale
                handle: wholesale-handle
                pricing_scheme: stairstep
                prices:
                  - starting_quantity: '1'
                    ending_quantity: '100'
                    unit_price: '5.00'
                  - starting_quantity: '101'
                    unit_price: '4.00'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: null
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_components-componentid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_components-component_id-price_points-json
      summary: Read Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        ## Read Price Points

        Use this endpoint to read current price points that are associated with a component.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/list-price-points-response'
          examples:
            application/json:
              price_points:
                - id: 80
                  default: false
                  name: Wholesale Two
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: wholesale-two
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 121
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '5.0'
                - id: 81
                  default: false
                  name: MSRP
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: msrp
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 122
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_components-componentid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/bulk.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_components-component_id-price_points-bulk-json
      summary: Create Bulk Price Points
      tags:
        - 'Components: Price Points'
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/bulk-create-price-points-request'
            example:
              price_points:
                - name: Wholesale
                  handle: wholesale
                  pricing_scheme: per_unit
                  prices:
                    - starting_quantity: 1
                      unit_price: 5
                - name: MSRP
                  handle: msrp
                  pricing_scheme: per_unit
                  prices:
                    - starting_quantity: 1
                      unit_price: 4
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/list-price-points-response'
          examples:
            application/json:
              price_points:
                - id: 80
                  default: false
                  name: Wholesale Two
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: wholesale-two
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 121
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '5.0'
                - id: 81
                  default: false
                  name: MSRP
                  pricing_scheme: per_unit
                  component_id: 74
                  handle: msrp
                  archived_at: null
                  created_at: '2017-07-05T13:55:40-04:00'
                  updated_at: '2017-07-05T13:55:40-04:00'
                  prices:
                    - id: 122
                      component_id: 74
                      starting_quantity: 1
                      ending_quantity: null
                      unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_components-componentid-pricepoints-bulkjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-json
      summary: Update Price Point
      tags:
        - 'Components: Price Points'
      description: |-
        When updating a price point, it's prices can be updated as well by creating new prices or editing / removing existing ones.

        Passing in a price bracket without an `id` will attempt to create a new price. 

        Including an `id` will update the corresponding price, and including the `_destroy` flag set to true along with the `id` will remove that price.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/update-price-point-request'
            example:
              price_point:
                name: Default
                prices:
                  - id: 1
                    ending_quantity: 100
                    unit_price: 5
                  - id: 2
                    _destroy: 'true'
                  - starting_quantity: 101
                    unit_price: 4
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}/default.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-default-json
      summary: Promoting Price Point to Default
      tags:
        - 'Components: Price Points'
      description: |-
        Sets a new default price point for the component. This new default will apply to all new subscriptions going forward - existing subscriptions will remain on their current price point.

        See [Price Points Documentation](https://help.chargify.com/products/product-components.html#price-points) for more information on price points and moving subscriptions between price points.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/components/create-response-post'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointid-defaultjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}.{format}':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
      - name: format
        in: path
        required: true
        type: string
    delete:
      operationId: DELETE_components-component_id-price_points-price_point_id-format
      summary: Archive Price Point
      tags:
        - 'Components: Price Points'
      description: A price point can be archived at any time. Subscriptions using a price point that has been archived will continue using it until they're moved to another price point.
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              price_point:
                type: object
                properties:
                  id:
                    type: integer
                  default:
                    type: boolean
                  name:
                    type: string
                  pricing_scheme:
                    type: string
                  component_id:
                    type: integer
                  handle:
                    type: string
                  archived_at:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  prices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        component_id:
                          type: integer
                        starting_quantity:
                          type: integer
                        ending_quantity:
                          type:
                            - integer
                            - 'null'
                        unit_price:
                          type: string
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: '2017-07-06T15:04:00-04:00'
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_components-componentid-pricepoints-pricepointidformat
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/components/{component_id}/price_points/{price_point_id}/unarchive.json':
    parameters:
      - name: component_id
        in: path
        required: true
        type: string
      - name: price_point_id
        in: path
        required: true
        type: string
    put:
      operationId: PUT_components-component_id-price_points-price_point_id-unarchive-json
      summary: Unarchive Price Point
      tags:
        - 'Components: Price Points'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/create-price-point-response'
          examples:
            application/json:
              price_point:
                id: 79
                default: false
                name: Wholesale
                pricing_scheme: stairstep
                component_id: 74
                handle: wholesale-handle
                archived_at: null
                created_at: '2017-07-05T13:44:30-04:00'
                updated_at: '2017-07-05T13:44:30-04:00'
                prices:
                  - id: 119
                    component_id: 74
                    starting_quantity: 1
                    ending_quantity: 100
                    unit_price: '5.0'
                  - id: 120
                    component_id: 74
                    starting_quantity: 101
                    ending_quantity: null
                    unit_price: '4.0'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_components-componentid-pricepoints-pricepointid-unarchivejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/price_points.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-price_points-json
      summary: Bulk Update a Subscription's Component's Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        ## Bulk Update a Subscription's Component's Price Points

        Updates the price points on one or more of a subscription's components.

        The `price_point` key can take either a:
        1. Price point id (integer)
        2. Price point handle (string)
        3. `"_default"` string, which will reset the price point to the component's current default price point.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/components/price-points/bulk-update-a-subscription-s-component-s-price-points'
            example:
              components:
                - component_id: 997
                  price_point: 1022
                - component_id: 998
                  price_point: wholesale-handle
                - component_id: 999
                  price_point: _default
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/bulk-update-a-subscription-s-component-s-price-points'
          examples:
            application/json:
              components:
                - component_id: 997
                  price_point: 1022
                - component_id: 998
                  price_point: wholesale-handle
                - component_id: 999
                  price_point: _default
        '422':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                price_point:
                  type:
                    - integer
                    - string
                message:
                  type: string
          examples:
            application/json:
              - component_id: 997
                price_point: 10023
                message: Price Point does not belong to Component
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-pricepointsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/price_points/reset.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-price_points-reset-json
      summary: Bulk Reset a Subscription's Component's Price Points
      tags:
        - 'Components: Price Points'
      description: |-
        Resets all of a subscription's components to use the current default.

        **Note**: this will update the price point for all of the subscription's components, even ones that have not been allocated yet.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/components/price-points/bulk-reset-a-subscription-s-component-s-price-points'
          examples:
            application/json:
              subscription:
                id: -80293620
                state: mollit exercitation ipsum
                trial_started_at: null
                trial_ended_at: null
                activated_at: nostrud nulla et
                created_at: qui L
                updated_at: in veniam aute in
                expires_at: null
                balance_in_cents: 50504234
                current_period_ends_at: Lorem anim eu
                next_assessment_at: adipisicing ullamco
                canceled_at: null
                cancellation_message: mol
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: Duis qui Excepteur laboris reprehenderit
                snap_day: null
                cancellation_method: eiusmod ipsum pariatur et adipisicing
                current_period_started_at: Ut quis non
                previous_state: 'occaecat proident sunt cillum '
                signup_payment_id: -45156092
                signup_revenue: do aliquip ea
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: -49740952
                product_price_in_cents: 87617888
                product_version_number: 13656635
                payment_type: null
                referral_code: null
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: -26151968
                customer:
                  id: 15208337
                  first_name: ipsum culpa in labore eiusmod
                  last_name: esse
                  organization: null
                  email: ex eiusmod
                  created_at: ad occaecat cillum
                  updated_at: ut aute proident est
                  reference: laboris ea cupidatat
                  address: null
                  address_2: null
                  city: id eiusmod proident
                  state: magna eiusmod anim non
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: null
                  portal_invite_last_accepted_at: reprehenderit labore voluptate
                  verified: null
                  portal_customer_created_at: nisi aute reprehenderit Excepteur Duis
                  cc_emails: eiusmod sunt
                  tax_exempt: true
                product:
                  id: -74447756
                  name: eu mollit nulla ut aute
                  handle: esse dolor anim
                  description: Lorem ut et non
                  accounting_code: nisi
                  request_credit_card: false
                  expiration_interval: null
                  expiration_interval_unit: fugiat aute do culpa dolor
                  created_at: officia sint
                  updated_at: sed
                  price_in_cents: -4151649
                  interval: 20680876
                  interval_unit: nisi qui incididunt
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: sit
                  archived_at: null
                  require_credit_card: true
                  return_params: magna eu
                  taxable: true
                  update_return_url: exercitation in
                  tax_code: Excepteur aliqua sunt in
                  initial_charge_after_trial: true
                  version_number: 41642597
                  update_return_params: dolore labore
                  product_family:
                    id: -5356997
                    name: officia amet Lorem proident enim
                    description: Duis
                    handle: ea dolore dolore sunt
                    accounting_code: null
                  public_signup_pages: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-pricepoints-resetjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/{resource}/{resource_id}/metadata.json':
    parameters:
      - name: resource
        in: path
        required: true
        type: string
        enum:
          - customers
          - subscriptions
      - name: resource_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_resource-resource_id-metadata-json
      summary: Create Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Create Metadata

        This method will create a metadata name and populate the metdata field on-the-fly.

        ### Subscription or Customer Resource

        Please pay special attention to the resource  you use when creating metadata. 

        ## Customer Metadata Disclaimer

        If you create metadata for the customer, it will not be visible in the subscription in the application. Customer metadata can only be updated via API.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              metadata:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
            example:
              metadata:
                - name: Color
                  value: Blue
                - name: Something
                  value: Useful
        - $ref: '#/parameters/trait:metadataValue:value'
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_resource-resource_id-metadata-json
      summary: Update Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Update Metadata

        This method allows you to update the existing metadata associated with a subscription or customer. 

        ## URL Construction

        Please note that as you replace the `resource` portion of the URL, use one of the following formations

        ```
        /subscriptions/{subscription_id}/metadata.{format}
        ```

        OR

        ```
        /customers/{customer_id}/metadata.{format}
        ```
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  current_name:
                    type: string
                  name:
                    type: string
                  value:
                    type: string
            example:
              metadata:
                current_name: Color
                name: Shirt Color
                value: Blue
        - $ref: '#/parameters/trait:metadataValue:value'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/update-metadata-output'
          examples:
            application/json:
              - value: Blue
                resource_id: 15479934
                name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_resource-resource_id-metadata-json
      summary: Delete Metadata
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Delete Metadata

        This method removes the metadata from the subscriber/customer cited.

        ## Query String Usage

        For instance if you wanted to delete the metadata for customer 99 named weight you would request:

        ```
        https://acme.chargify.com/customers/99/metadata.json?name=weight
        ```

        ## Successful Response

        For a success, there will be a code `200` and the plain text response `true`.

        ## Unsuccessful Response

        When a failed response is encountered, you will receive a `404` response and the plain text response of `true`.
      parameters:
        - name: name
          in: query
          type: string
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_resource-resourceid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions/metadata.json:
    get:
      operationId: GET_subscriptions-metadata-json
      summary: Read Metadata for Subscribers
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata by Subscription

        This method will provide you information on usage of metadata across your subscribers. 

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/read-metadata-subscribers-output'
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: The quick brown fox
                  resource_id: 15479934
                  name: Comments
                - value: L
                  resource_id: 15479934
                  name: T-Shirt Size
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /customers/metadata.json:
    get:
      operationId: GET_customers-metadata-json
      summary: Read Metadata for Customers
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Site 

        This endpoint will list the number of pages of metadata information that are contained within a site.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              total_count:
                type: integer
              current_page:
                type: integer
              total_pages:
                type: integer
              per_page:
                type: integer
              metadata:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                    resource_id:
                      type: integer
                    name:
                      type: string
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: Red
                  resource_id: 19186044
                  name: Shirt Color
                - value: Blue
                  resource_id: 19186076
                  name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{customer_id}/metadata.json':
    parameters:
      - name: customer_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_customers-customer_id-metadata-json
      summary: Read Metadata for a Customer
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Customer

        This endpoint will list the metadata associated with a customer. Additionally, the endpoint will return the number of pages of metadata information that are contained within a site.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metadata/read-metadata-for-a-site'
          examples:
            application/json:
              total_count: 1
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: Red
                  resource_id: 19186044
                  name: Shirt Color
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-customerid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/metadata.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-metadata-json
      summary: Read Metadata for a Subscriber
      tags:
        - 'Custom Fields: Metadata'
      description: |-
        ## Read Metadata for a Subscriber

        This request will list all of the metadata belonging to a particular subscription.

        ## Metadata Data

        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/list-metadata-for-a-subscriber-output'
          examples:
            application/json:
              total_count: 2
              current_page: 1
              total_pages: 1
              per_page: 20
              metadata:
                - value: The quick brown fox
                  resource_id: 15479934
                  name: Comments
                - value: L
                  resource_id: 15479934
                  name: T-Shirt Size
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-metadatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/{resource}/metafields.json':
    parameters:
      - name: resource
        in: path
        description: ''
        required: true
        type: string
        enum:
          - subscriptions
          - customers
    post:
      operationId: POST_resource-metafields-json
      summary: Create Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Create Metafields

        Use the following method to create metafields for your Site. Metafields can be populated with metadata after the fact.

        ## Create Multiple Metafields 

        In order to create multiple metafields in one request, use the following JSON format:

        ```
        {
            "metafields": [
              {"name": "Color"},
              {"name": "Brand"}
            ]
          }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/metadata/create-metadata-input'
            example:
              metafields:
                name: Color
                scope:
                  hosted:
                    - '1'
                    - '2'
                    - '3'
                  csv: '0'
                  invoices: '1'
                  statements: '1'
                  portal: '0'
        - $ref: '#/parameters/trait:metafieldsNameRequiredCurrentNameOptional:name'
        - $ref: '#/parameters/trait:metafieldsNameRequiredCurrentNameOptional:current_name'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/create-metafields-output'
          examples:
            application/json:
              - name: Color
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
              - name: Brand
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_resource-metafields-json
      summary: Read Metafields Stats for Site
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Read Metafields

        This endpoint lists associated with a Site. The metafield description and usage is contained in the response. 

        ## Data Count 

        When `data_count` is encountered in the response for metafields, this indicates the amount of subscriptions this metafield has been applied to in Chargify.
      parameters:
        - $ref: '#/parameters/trait:metafieldsNameOptional:name'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/list-metafields-output'
          examples:
            application/json:
              total_count: 1
              current_page: 1
              total_pages: 1
              per_page: 20
              metafields:
                - name: Pants
                  scope:
                    hosted: []
                    csv: '0'
                    statements: '0'
                    invoices: '0'
                    portal: '0'
                  data_count: 1
                  input_type: text
                  enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_resource-metafields-json
      summary: Update Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Update Metafields

        Use the following method to update metafields for your Site. Metafields can be populated with metadata after the fact.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/metafields/update-metafields-input'
            example:
              metafields:
                current_name: shirt
                name: new-shirt
                scope:
                  hosted:
                    - '1'
                    - '1'
                    - '1'
                  csv: '1'
                  invoices: '1'
                  statements: '1'
                  portal: '0'
        - $ref: '#/parameters/trait:metafieldsNameRequired:name'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/metafields/update-metafields-output'
          examples:
            application/json:
              - name: Shirts
                scope:
                  hosted: []
                  csv: '0'
                  statements: '0'
                  invoices: '0'
                  portal: '0'
                data_count: 0
                input_type: text
                enum: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_resource-metafields-json
      summary: Delete Metafields
      tags:
        - 'Custom Fields: Metafields'
      description: |-
        ## Delete Metafields

        Use the following method to delete a metafield. This will remove the metafield from the Site. 

        Additionally, this will remove the metafield and associated metadata with all Subscriptions on the Site.

        ## Server Response

        The server will response with code `200` for successful, and `404` for unsuccessful.

        ## Example

        If you wanted to delete the metafield for customers named strength you would request:

        ```https://my-subdomain.chargify.com/customers/metafields.json?name=strength```
      parameters:
        - $ref: '#/parameters/trait:metafieldsNameRequired:name'
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_resource-metafieldsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons.json:
    post:
      operationId: POST_coupons-format
      summary: Create  Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Create a Coupon

        This request will create a coupon, based on the provided information.

        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:
        `{ "<product/component_id>": boolean_value }`

        The coupon's `code` may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): “%”, “@”, “+”, “-”, “_”, and “.”
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupons/create-coupon-input'
            example:
              coupon:
                name: 15% off
                code: 15OFF
                description: 15% off for life
                percentage: '15'
                allow_negative_balance: 'false'
                recurring: 'false'
                end_date: '2012-08-29T12:00:00-04:00'
                product_family_id: '2'
                stackable: 'true'
                compounding_strategy: compound
              restricted_products:
                '1': true
              restricted_components:
                '1': true
                '2': false
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_coupons-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
    get:
      operationId: GET_coupons-format
      summary: Read Coupons for the Default Product Family for a Site
      tags:
        - Coupon
        - incomplete
        - 'Coupons: Editing'
      description: |-
        ## Read Coupons for the Default Product Family

        You can retrieve a list of coupons that belong to the default product family for a site via this method.

        The default product family is the one that was created first for the site, (with the lowest ID number,) that has not been archived.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/list-coupons-for-a-site-output'
          examples:
            application/json:
              - coupon:
                  id: 999999
                  name: 50% coupon
                  code: 50PERCENT
                  description: 50 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 123456
                  name: 100% coupon
                  code: 100PERCENT
                  description: 100 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 888888
                  name: 25% coupon
                  code: 25PERCENT
                  description: 25 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 25
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/product_families/{product_family_id}/coupons/{coupon_id}.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
      - name: coupon_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_coupons-coupon_id-format
      summary: Read a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Read a Coupon

        You can retrieve the Coupon via the API with the Show method. You must identify the Coupon in this call by the ID parameter that Chargify assigns.
        If instead you would like to find a Coupon using a Coupon code, see the Coupon Find method.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              coupon:
                type: object
                properties:
                  id:
                    type: integer
                    description: |
                      The ID of the coupon
                  name:
                    type: string
                    description: The internal coupon name. This information is never displayed to customers.
                  code:
                    type: string
                    description: 'The coupon code. This is used by you or your customers to apply the coupon to a subscription. The code may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): `%`, `@`, `+`, `-`, `_`, and `.`'
                  description:
                    type: string
                    description: The coupon description. This will be displayed to the customers after the coupon validation.
                  amount_in_cents:
                    type: integer
                    description: The amount in cents of the discount of the coupon.
                  product_family_id:
                    type: integer
                    description: 'The ID of the product family to which the coupon belongs. The coupon can be added only to products in this product family. '
                  created_at:
                    type: string
                    description: The timestamp when the coupon was created.
                    format: date-time
                  updated_at:
                    type: string
                    description: The timestamp when the coupon was updated
                    format: date-time
                  start_date:
                    type: string
                    description: The start date of the coupon
                    format: date-time
                  end_date:
                    type:
                      - 'null'
                      - string
                    description: The expiration date of the coupon
                    format: date-time
                  percentage:
                    type:
                      - 'null'
                      - number
                    description: 'The discount percentage. Should be an integer between 1 and 100. You should set the percentage or the amount, but not both.'
                    minimum: 1
                    maximum: 100
                  recurring:
                    type: boolean
                    description: 'If true, the discount will be applied at signup and every renewal (for the number of renewals given by duration_period_count). Otherwise, discount will be applied only at signup.'
                  duration_period_count:
                    type:
                      - number
                      - integer
                      - 'null'
                    description: Number of renewals the coupon is good for. Recurring should be set to true. Setting recurring to true and leaving this blank indicates that the coupon applies indefinitely.
                  duration_interval:
                    type:
                      - 'null'
                      - integer
                    description: Integer used to measure the interval unit.
                  duration_interval_unit:
                    type:
                      - 'null'
                      - string
                    description: Description of the number of days/months the coupon should be applied.
                  allow_negative_balance:
                    type: boolean
                    description: 'Boolean. If true, credits will carry forward to next billing. Otherwise discount may not exceed total of the charges.'
                  archived_at:
                    type:
                      - 'null'
                      - string
                    description: Timestamp indicating when this coupon was archived
                    format: date-time
                  conversion_limit:
                    type: 'null'
                    description: Number of times this coupon (or any of its codes) may be added to a subscription
                  stackable:
                    type: boolean
                    description: If true coupon can be combined with other stackable coupons to produce a larger discount. If false coupon cannot be combined with other coupons.
                  compounding_strategy:
                    type: string
                    description: ''
                    enum:
                      - compound
                      - full-price
                  coupon_restrictions:
                    type: array
                    items:
                      type: object
          examples:
            application/json:
              coupon:
                id: 66
                name: Foo Bar
                code: YEPPER9993
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-07T14:51:52-05:00'
                updated_at: '2017-11-07T15:14:24-05:00'
                start_date: '2017-11-07T14:51:52-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: full-price
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/usage.json':
    parameters:
      - name: coupon_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_coupons-coupon_id-usage-json
      summary: Read Coupon Usage for a Site
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Read Coupon Usage for a Site

        This request will provide details about the coupon usage as an array of data hashes, one per product.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/coupon-usage-output'
          examples:
            application/json:
              - name: No cost product
                id: 3903594
                signups: 0
                savings: 0
                savings_in_cents: 0
                revenue: 0
                revenue_in_cents: 0
              - name: Product that expires
                id: 3853680
                signups: 0
                savings: 0
                savings_in_cents: 0
                revenue: 0
                revenue_in_cents: 0
              - name: Trial Product
                id: 3861800
                signups: 1
                savings: 30
                savings_in_cents: 3000
                revenue: 20
                revenue_in_cents: 2000
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-couponid-usagejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons/find.json:
    get:
      operationId: GET_coupons-find-json
      summary: Finding a Coupon
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Finding a Coupon

        You can search for a coupon via the API with the find method. By passing a code parameter, the find will attempt to locate a coupon that matches that code. If no coupon is found, a 404 is returned.

        If you have more than one product family and if the coupon you are trying to find does not belong to the first product family in your site, then you will need to specify (either in the url or as a query string param) the product family id.

        You can retrieve a coupon via the API with the show method. You must identify the coupon in this call by the id parameter that Chargify assigns. If instead you would like to find a coupon using a coupon code, see the Coupon Find method.

        ```
        https://<subdomain>.chargify.com/product_families/<product_family_id>/coupons/find.<format>?code=<coupon_code>
        ```

        **OR**

        ```
        https://<subdomain>.chargify.com/coupons/find.<format>?code=<coupon_code>&product_family_id=1
        ```
      parameters:
        - name: product_family_id
          in: query
          type: integer
        - name: code
          in: query
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-findjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /coupons/validate.json:
    get:
      operationId: GET_coupons-validate-format
      summary: Validate a Coupon
      tags:
        - Coupon
        - incomplete
        - 'Coupons: Editing'
      description: |-
        ## Validate a Coupon

        You can verify if a specific coupon code is valid using the `validate` method. This method is useful for validating coupon codes that are entered by a customer. If the coupon is found and is valid, the coupon will be returned with a 200 status code.

        If the coupon is invalid, the status code will be 404 and the response will say why it is invalid. If the coupon is valid, the status code will be 200 and the coupon will be returned. The following reasons for invalidity are supported:

        + Coupon not found
        + Coupon is invalid
        + Coupon expired

        If you have more than one product family and if the coupon you are validating does not belong to the first product family in your site, then you will need to specify (either in the url or as a query string param) the product family id.

        Eg.

        ```
        https://<subdomain>.chargify.com/product_families/<product_family_id>/coupons/validate.<format>?code=<coupon_code>
        ```

        Or:

        ```
        https://<subdomain>.chargify.com/coupons/validate.<format>?code=<coupon_code>&product_family_id=1
        ```
      parameters:
        - name: coupon_code
          in: query
          description: The Coupon Code.
          required: false
          type: string
        - name: product_family_id
          in: query
          description: ''
          required: false
          type: number
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 66
                name: Foo Bar
                code: YEPPER9993
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-07T14:51:52-05:00'
                updated_at: '2017-11-07T15:14:24-05:00'
                start_date: '2017-11-07T14:51:52-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: full-price
                coupon_restrictions: []
        '404':
          description: Not Found
          examples:
            application/json:
              errors: Coupon code could not be found.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-validate-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/product_families/{product_family_id}/coupons.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_product_families-product_family_id-coupons-json
      summary: Read Coupons for a Product Family for a Site
      tags:
        - 'Coupons: Editing'
      description: |-
        ## Read Coupons for a Specific Product Family

        List coupons for a specific Product Family in a Site.
      produces:
        - application/xml
      parameters:
        - name: product_family_id
          in: query
          type: integer
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/coupons/list-coupons-for-a-site-output'
          examples:
            application/json:
              - coupon:
                  id: 999999
                  name: 50% coupon
                  code: 50PERCENT
                  description: 50 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 123456
                  name: 100% coupon
                  code: 100PERCENT
                  description: 100 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 50
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
              - coupon:
                  id: 888888
                  name: 25% coupon
                  code: 25PERCENT
                  description: 25 PERCENT OFF
                  amount_in_cents: null
                  product_family_id: 527890
                  created_at: '2016-10-21T17:02:08-04:00'
                  updated_at: '2016-10-21T17:06:11-04:00'
                  start_date: '2016-10-21T17:02:08-04:00'
                  end_date: null
                  percentage: 25
                  recurring: true
                  duration_period_count: null
                  duration_interval: 1
                  duration_interval_unit: day
                  allow_negative_balance: true
                  archived_at: null
                  conversion_limit: 100
                  stackable: false
                  compounding_strategy: compound
                  coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_productfamilies-productfamilyid-couponsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/coupons/{coupon_id}.json':
    parameters:
      - name: coupon_id
        in: path
        description: The Coupon ID.
        required: true
        type: number
    put:
      operationId: PUT_coupons-coupon_id-format
      summary: Update a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Update a Coupon

        You can update a Coupon via the API with a PUT request to the resource endpoint.

        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:
        `{ "<product/component_id>": boolean_value }`
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupons/create-coupon-input'
            example:
              coupon:
                name: 15% off
                code: 15OFF
                description: 15% off for life
                percentage: '15'
                allow_negative_balance: 'false'
                recurring: 'false'
                end_date: '2012-08-29T12:00:00-04:00'
                product_family_id: '2'
                stackable: 'true'
                compounding_strategy: compound
              restricted_products:
                '1': true
              restricted_components:
                '1': true
                '2': false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: null
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_coupons-coupon_id-format
      summary: Archive a Coupon
      tags:
        - Coupon
        - 'Coupons: Editing'
      description: |-
        ## Archive a Coupon

        You can archive a Coupon via the API with the archive method.
        Archiving makes that Coupon unavailable for future use, but allows it to remain attached and functional on existing Subscriptions that are using it.
        The `archived_at` date and time will be assigned.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/create-coupon-output'
          examples:
            application/json:
              coupon:
                id: 67
                name: Foo Bar
                code: YEPPER99934
                description: my cool coupon
                amount_in_cents: 10000
                product_family_id: 4
                created_at: '2017-11-08T10:01:15-05:00'
                updated_at: '2017-11-08T10:01:15-05:00'
                start_date: '2017-11-08T10:01:15-05:00'
                end_date: null
                percentage: null
                recurring: false
                duration_period_count: null
                duration_interval: null
                duration_interval_unit: null
                allow_negative_balance: false
                archived_at: '2016-12-02T13:09:33-05:00'
                conversion_limit: null
                stackable: true
                compounding_strategy: compound
                coupon_restrictions: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_coupons-coupon_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/codes.json':
    parameters:
      - name: coupon_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_coupons-coupon_id-codes-format
      summary: Add Coupon Subcodes
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Add Coupon Subcodes

        To create a Coupon subcode, POST an array of subcodes to the correct URL endpoint.
      responses:
        '201':
          description: Created
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_coupons-coupon_id-codes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_coupons-coupon_id-codes-json
      summary: Read Coupon Subcodes for a Site
      tags:
        - 'Coupons: Subcodes'
      description: |-
        ## Read Coupon Subcodes for a Site

        This request allows you to request the subcodes that are attached to a coupon.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/coupons/subcodes/retrieve-coupon-subcodes-output'
          examples:
            application/json:
              codes:
                - 3JU6PR
                - 9RO6MP
                - 8OG1VV
                - 5FL7VV
                - 2SV8XK
                - 4LW8LH
                - 3VL4GZ
                - 9UI9XO
                - 0LZ0CC
                - 8XI9JV
                - 9UV5YE
                - 3UI4GX
                - 6SL5ST
                - 9WC8IJ
                - 2KA3PZ
                - 7WR1VR
                - 3VY7MN
                - 6KC3KB
                - 7DF7YT
                - 9FH1ED
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_coupons-couponid-codesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_coupons-coupon_id-codes-format
      summary: Update Coupon Subcodes
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Update Coupon Subcodes

        You can update the subcodes for the given Coupon via the API with a PUT request to the resource endpoint.
        Send an array of new coupon subcodes.

        **Note**: All current subcodes for that Coupon will be deleted first, and replaced with the list of subcodes sent to this endpoint.
        The response will contain:

        + The created subcodes,

        + Subcodes that were not created because they already exist,

        + Any subcodes not created because they are invalid.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupon/subcodes/create-a-coupon-subcode'
            example:
              codes:
                - AAAA
                - BBBB
                - CCCC
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupons/subcodes/create-a-coupon-subcode-output'
          examples:
            application/json:
              codes:
                - AAAA
                - BBBB
                - CCCC
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_coupons-coupon_id-codes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/coupons/{coupon_id}/codes/{subcode}.json':
    parameters:
      - name: coupon_id
        in: path
        description: The Coupon ID.
        required: true
        type: number
      - name: subcode
        in: path
        description: The Subcode.
        required: true
        type: number
    delete:
      operationId: DELETE_coupons-coupon_id-codes-subcode-format
      summary: Delete the Coupon Subcode
      tags:
        - Coupon Subcode
        - incomplete
        - 'Coupons: Subcodes'
      description: |-
        ## Delete the Coupon Subcode

        If the Coupon subcode is successfully removed, a "200" response code will be returned. Otherwise, a "404" error will be returned.

        ## Example

        Given a coupon with an ID of 567, and a coupon subcode of 20OFF, the URL to `DELETE` this coupon subcode would be: 

        ```
        http://subdomain.chargify.com/coupons/567/codes/20OFF.<format>
        ```

        Note: If you are using any of the allowed special characters (“%”, “@”, “+”, “-”, “_”, and “.”), you must encode them for use in the URL.

        | Special character | Encoding |
        |-------------------|----------|
        | %                 | %25      |
        | @                 | %40      |
        | +                 | %2B      |
        | –                 | %2D      |
        | _                 | %5F      |
        | .                 | %2E      |

        ## Percent Encoding Example

        Or if the coupon subcode is 20%OFF, the URL to delete this coupon subcode would be: @https://<subdomain>.chargify.com/coupons/567/codes/20%25OFF.<format>
      responses:
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_coupons-coupon_id-codes-subcode-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /customers.json:
    post:
      operationId: POST_customers-format
      summary: Create a Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Create a Customer

        You can create a new Customer at any time, or you may create a Customer at the same time you create a Subscription. The only validation restriction is that you may only create one Customer for a given `reference` value. If provided, the `reference` value must be unique. It represents a unique identifier for the Customer from your own app, i.e. the Customer’s ID. This allows you to retrieve a given Customer via a piece of shared information. Alternatively, you may choose to leave `reference` blank, and store Chargify’s unique ID for the Customer, which is in the `id` attribute.

        Only those attributes not marked as "read only" may be set via POST (create) or PUT (update) operations.

        ## Required Country Format

        Chargify requires that you use the ISO Standard Country codes when formatting country attribute of the customer.

        Countries should be formatted as 2 characters. For more information, please see the following wikipedia article on [ISO_3166-1.](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes)

        ## Required State Format

        Chargify requires that you use the ISO Standard State codes when formatting state attribute of the customer.

        + US States (2 characters): [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2:US)

        + States Outside the US (2-3 characters): To find the correct state codes outside of the US, please go to [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) and click on the link in the “ISO 3166-2 codes” column next to country you wish to populate.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/create-a-customer-input'
            example:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha@example.com
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/customer/create-a-customer-output'
          examples:
            application/json:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha@example.com
                cc_emails: null
                organization: null
                reference: null
                id: 14967442
                created_at: '2016-12-05T10:33:07-05:00'
                updated_at: '2016-12-05T10:33:07-05:00'
                address: null
                address_2: null
                city: null
                state: null
                zip: null
                country: null
                phone: null
                verified: false
                portal_customer_created_at: null
                portal_invite_last_sent_at: null
                portal_invite_last_accepted_at: null
                tax_exempt: false
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'unknown attribute: emailzzz'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_customers-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_customers-json
      summary: Read Customers for a Site
      tags:
        - Customers
      description: |-
        ## Read Customers for a Site

        This request will list all customers associated with your Site.
      parameters:
        - $ref: '#/parameters/trait:pagination50:page'
        - $ref: '#/parameters/trait:direction:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    cc_emails:
                      type: string
                    organization:
                      type: string
                    reference:
                      type: 'null'
                    id:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    address:
                      type: string
                    address_2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    country:
                      type: string
                    phone:
                      type: string
                    verified:
                      type: 'null'
                    portal_customer_created_at:
                      type: string
                    portal_invite_last_sent_at:
                      type: string
                    portal_invite_last_accepted_at:
                      type: 'null'
                    tax_exempt:
                      type: boolean
          examples:
            application/json:
              - customer:
                  first_name: Kayla
                  last_name: Test
                  email: kayla@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14126091
                  created_at: '2016-10-04T15:22:27-04:00'
                  updated_at: '2016-10-04T15:22:30-04:00'
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-04T15:22:29-04:00'
                  portal_invite_last_sent_at: '2016-10-04T15:22:30-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
              - customer:
                  first_name: 'Nick '
                  last_name: Test
                  email: nick@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14254093
                  created_at: '2016-10-13T16:52:51-04:00'
                  updated_at: '2016-10-13T16:52:54-04:00'
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-13T16:52:54-04:00'
                  portal_invite_last_sent_at: '2016-10-13T16:52:54-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
              - customer:
                  first_name: Don
                  last_name: Test
                  email: don@example.com
                  cc_emails: 'john@example.com, sue@example.com'
                  organization: ''
                  reference: null
                  id: 14332342
                  created_at: '2016-10-19T10:49:13-04:00'
                  updated_at: '2016-10-19T10:49:19-04:00'
                  address: 1737 15th St
                  address_2: ''
                  city: Boulder
                  state: CO
                  zip: '80302'
                  country: US
                  phone: ''
                  verified: null
                  portal_customer_created_at: '2016-10-19T10:49:19-04:00'
                  portal_invite_last_sent_at: '2016-10-19T10:49:19-04:00'
                  portal_invite_last_accepted_at: null
                  tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customersjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{id}.json':
    parameters:
      - name: id
        in: path
        description: The ID of a Customer.
        required: true
        type: number
    get:
      operationId: GET_customers-id-format
      summary: Read Customer Data
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Read Customer Data

        This method allows to retrieve the Customer properties by Chargify-generated Customer ID.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: non
                last_name: Ut consequat in
                email: pariatur
                cc_emails: ipsum sit sunt
                organization: anim aute enim dolore in
                reference: null
                id: 95274396
                created_at: dolor cupidatat anim culpa
                updated_at: sit elit in Lorem officia
                address: magna irure
                address_2: dolore deserunt
                city: elit nostrud ad
                state: sint eu Excepteur amet
                zip: aliquip Excepteur occaecat pariatur eiusmod
                country: pariatur dolore
                phone: eu eiusmod laboris aliqua ullamco
                verified: null
                portal_customer_created_at: ali
                portal_invite_last_sent_at: labore exercitation reprehenderit Exc
                portal_invite_last_accepted_at: null
                tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    put:
      operationId: PUT_customers-id-format
      summary: Update the Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Update the Customer

        This method allows to update the Customer.

        Only those attributes not marked as "read only" may be set via POST (create) or PUT (update) operations.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/customer/create-a-customer-input'
            example:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha.washington@example.com
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: Martha
                last_name: Washington
                email: martha.washington@example.com
                cc_emails: null
                organization: null
                reference: null
                id: 14967442
                created_at: '2016-12-05T10:33:07-05:00'
                updated_at: '2016-12-05T10:38:00-05:00'
                address: null
                address_2: null
                city: null
                state: null
                zip: null
                country: null
                phone: null
                verified: false
                portal_customer_created_at: null
                portal_invite_last_sent_at: null
                portal_invite_last_accepted_at: null
                tax_exempt: false
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Email: must be a valid email address'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_customers-id-format
      summary: Delete the Customer
      tags:
        - Customer
        - incomplete
        - Customers
      description: |-
        ## Delete the Customer

        This method allows to delete the Customer.   When a delete response is received, the response status will be `204`. There will be no content sent with the status.
      responses:
        '204':
          description: No Content
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_customers-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /customers/lookup.json:
    get:
      operationId: GET_customers-lookup-json
      summary: Read the Customer by Reference Value
      tags:
        - Customers
      description: |-
        ## Read the Customer by Reference Value

        Use this method to return the customer object if you have the **Reference ID (Your App)** value.
      parameters:
        - name: reference
          in: query
          description: URL encoded
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/customer/customer-output'
          examples:
            application/json:
              customer:
                first_name: Don
                last_name: Test
                email: don@example.com
                cc_emails: 'john@example.com, sue@example.com'
                organization: ''
                reference: null
                id: 14332342
                created_at: '2016-10-19T10:49:13-04:00'
                updated_at: '2016-10-19T10:49:19-04:00'
                address: 123 15th Street
                address_2: ''
                city: Boulder
                state: CO
                zip: '80302'
                country: US
                phone: ''
                verified: null
                portal_customer_created_at: '2016-10-19T10:49:19-04:00'
                portal_invite_last_sent_at: '2016-10-19T10:49:19-04:00'
                portal_invite_last_accepted_at: null
                tax_exempt: false
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-lookupjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/customers/{customer_id}/subscriptions.json':
    parameters:
      - name: customer_id
        in: path
        description: The Customer ID.
        required: true
        type: string
    get:
      operationId: GET_customers-customer_id-subscriptions-json
      summary: Read Subscription by Customer ID
      tags:
        - Subscriptions
      description: |-
        ## List by Customer

        This method will retreive a list of subscriptions associated with a Customer.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_customers-customerid-subscriptionsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/events.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: list-events
      summary: Read Events for a Subscription
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## Read Events for a Subscription

        The following request will return a list of events for a subscription.

        Each event type has its own `event_specific_data` specified.
      parameters:
        - name: filter
          in: query
          description: Any of the events listed under the introduction. `?filter=payment_success'
          type: string
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events/list-events-for-subscription'
          examples:
            application/json:
              - event:
                  id: 344799837
                  key: statement_settled
                  message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:29-04:00'
                  event_specific_data: null
              - event:
                  id: 344799815
                  key: renewal_success
                  message: Successful renewal for Amelia Example's subscription to Basic Plan
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:28-04:00'
                  event_specific_data:
                    product_id: 3792003
                    account_transaction_id: null
              - event:
                  id: 344799705
                  key: billing_date_change
                  message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
                  subscription_id: 14900541
                  created_at: '2016-11-01T12:41:25-04:00'
                  event_specific_data: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: list-events
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /events.json:
    get:
      operationId: list-events
      summary: Read Events for a Site
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## List Events for a Site

        This method will retrieve a list of events for a site. Use query string filters to narrow down results.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events/list-site-event-output'
          examples:
            application/json:
              - event:
                  id: 343087780
                  key: subscription_state_change
                  message: State changed on Test subscription to Monthly Product from active to past_due
                  subscription_id: 14950962
                  created_at: '2016-10-27T16:42:22-04:00'
                  event_specific_data:
                    previous_subscription_state: active
                    new_subscription_state: past_due
              - event:
                  id: 343087742
                  key: billing_date_change
                  message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
                  subscription_id: 14950962
                  created_at: '2016-10-27T16:42:19-04:00'
                  event_specific_data: null
              - event:
                  id: 343085267
                  key: statement_closed
                  message: Statement 79401838 closed (but not settled) for Test's subscription to ANNUAL product
                  subscription_id: 14950975
                  created_at: '2016-10-27T16:40:40-04:00'
                  event_specific_data: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: list-events
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /events/count.json:
    get:
      operationId: GET_events_count-format
      summary: Read the Count of Events for a Site
      tags:
        - Event
        - incomplete
        - Events
      description: |-
        ## Read the Count of Events for a Site

        Obtain a count of the entire events for a given site by using this method.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/event/counts'
        - $ref: '#/parameters/trait:eventsFilters:page'
        - $ref: '#/parameters/trait:eventsFilters:per_page'
        - $ref: '#/parameters/trait:eventsFilters:since_id'
        - $ref: '#/parameters/trait:eventsFilters:max_id'
        - $ref: '#/parameters/trait:eventsFilters:direction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
          examples:
            application/json:
              count: 144
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_events_count-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /invoices.json:
    get:
      operationId: GET_list-invoices-by-subscription
      summary: Read All Invoices (Multiple Query Options)
      tags:
        - Invoice
        - incomplete
        - Invoices
      description: |-
        ## Read All Invoices (Multiple Query Options)

        ## Filters

        In order to generate a set of invoices that meet certain criteria, please use the query string filters below for best results. 

        ## Example Query String

        To get a list of invoices for a specific subscription ID, your request would be formatted as follows:

        ```http://[chargify_domain].chargify.com/invoices.<format>?subscription_id=<subcription_id>```
      parameters:
        - name: start_date
          in: query
          description: The start date in the YYYY-MM-DD format .
          required: false
          type: string
        - name: end_date
          in: query
          description: The end date in the YYYY-MM-DD format.
          required: false
          type: string
        - name: subscription_id
          in: query
          description: The Subscription ID.
          required: false
          type: number
        - name: status
          in: query
          required: false
          type: string
        - $ref: '#/parameters/trait:stateStatusQuery:State / Status Filter'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    id:
                      type: integer
                    subscription_id:
                      type: integer
                    statement_id:
                      type: integer
                    site_id:
                      type: integer
                    state:
                      type: string
                    total_amount_in_cents:
                      type: integer
                    paid_at:
                      type: 'null'
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    amount_due_in_cents:
                      type: integer
                    number:
                      type: string
                    charges:
                      type: array
                      items:
                        type: object
                        properties:
                          created_at:
                            type: string
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          memo:
                            type: string
                          kind:
                            type: string
                          amount_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          success:
                            type: boolean
                          id:
                            type: integer
                          payment_id:
                            type: 'null'
                          product_id:
                            type: integer
                          transaction_type:
                            type: string
                          gateway_transaction_id:
                            type: 'null'
                          gateway_order_id:
                            type: 'null'
                          starting_balance_in_cents:
                            type: integer
                          component_id:
                            type: 'null'
                          tax_id:
                            type: 'null'
                          customer_id:
                            type: integer
                    payments_and_credits:
                      type: array
                      items:
                        type: object
          examples:
            application/json:
              - invoice:
                  id: 1231028
                  subscription_id: 14735881
                  statement_id: 79006022
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 1000
                  paid_at: null
                  created_at: '2016-10-20T17:04:14-04:00'
                  updated_at: '2016-10-20T17:04:14-04:00'
                  amount_due_in_cents: 1000
                  number: '000013'
                  charges:
                    - created_at: '2016-10-20T17:04:14-04:00'
                      subscription_id: 14735881
                      type: Charge
                      memo: Trial Product (10/20/2016 - 11/20/2016)
                      kind: baseline
                      amount_in_cents: 1000
                      ending_balance_in_cents: 1000
                      success: true
                      id: 158945783
                      payment_id: null
                      product_id: 3861800
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: 0
                      component_id: null
                      tax_id: null
                      customer_id: 14254093
                  payments_and_credits: []
              - invoice:
                  id: 1229888
                  subscription_id: 14823387
                  statement_id: 78919321
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 5000
                  paid_at: null
                  created_at: '2016-10-19T12:53:02-04:00'
                  updated_at: '2016-10-19T12:53:02-04:00'
                  amount_due_in_cents: 5000
                  number: '000012'
                  charges:
                    - created_at: '2016-10-19T12:53:02-04:00'
                      subscription_id: 14823387
                      type: Charge
                      memo: Will this invoice get paid
                      kind: one_time
                      amount_in_cents: 5000
                      ending_balance_in_cents: -2823
                      success: true
                      id: 158769854
                      payment_id: null
                      product_id: 3794121
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: -7823
                      component_id: null
                      tax_id: null
                      customer_id: 14332158
                  payments_and_credits: []
              - invoice:
                  id: 1227981
                  subscription_id: 14788195
                  statement_id: 78808817
                  site_id: 31615
                  state: unpaid
                  total_amount_in_cents: 4000
                  paid_at: null
                  created_at: '2016-10-17T12:13:42-04:00'
                  updated_at: '2016-10-17T12:13:42-04:00'
                  amount_due_in_cents: 4000
                  number: '000010'
                  charges:
                    - created_at: '2016-10-17T12:13:42-04:00'
                      subscription_id: 14788195
                      type: Charge
                      memo: Basic Plan (10/17/2016 - 11/17/2016)
                      kind: baseline
                      amount_in_cents: 4000
                      ending_balance_in_cents: 4000
                      success: true
                      id: 158506054
                      payment_id: null
                      product_id: 3792003
                      transaction_type: charge
                      gateway_transaction_id: null
                      gateway_order_id: null
                      starting_balance_in_cents: 0
                      component_id: null
                      tax_id: null
                      customer_id: 14300992
                  payments_and_credits: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_list-invoices-by-subscription
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}.json':
    parameters:
      - name: invoice_id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-format
      summary: Read the Invoice by ID
      tags:
        - Invoice
        - incomplete
        - Invoices
      description: |-
        ## Read the Invoice by ID

        This method will retrieve the invoice object based on the ID provided.

        ## PDF Invoice retrieval

        Individual PDF Invoices can be retrieved by using the "Accept/Content-Type" header application/pdf or appending .pdf as the format portion of the URL:

        ```curl -u <api_key>:x -H 
        Accept:application/pdf -H 
        Content-Type:application/pdf 
        https://acme.chargify.com/invoices/1.pdf > output_file.pdf

        URL: `https://<subdomain>.chargify.com/invoices/<invoice_id>.<format>`
        Method: GET
        Required parameters: `invoice_id`
        Response: A single Invoice.
        ```
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              invoice:
                type: object
                properties:
                  id:
                    type: integer
                  subscription_id:
                    type: integer
                  statement_id:
                    type: integer
                  site_id:
                    type: integer
                  state:
                    type: string
                  total_amount_in_cents:
                    type: integer
                  paid_at:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  amount_due_in_cents:
                    type: integer
                  number:
                    type: string
                  charges:
                    type: array
                    items:
                      type: object
                      properties:
                        created_at:
                          type: string
                        subscription_id:
                          type: integer
                        type:
                          type: string
                        memo:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        ending_balance_in_cents:
                          type: integer
                        success:
                          type: boolean
                        id:
                          type: integer
                        payment_id:
                          type: integer
                        product_id:
                          type: integer
                        transaction_type:
                          type: string
                        gateway_transaction_id:
                          type: 'null'
                        gateway_order_id:
                          type: 'null'
                        starting_balance_in_cents:
                          type: integer
                        component_id:
                          type: 'null'
                        tax_id:
                          type: 'null'
                        customer_id:
                          type: integer
                  payments_and_credits:
                    type: array
                    items:
                      type: object
                      properties:
                        created_at:
                          type: string
                        subscription_id:
                          type: integer
                        type:
                          type: string
                        memo:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        ending_balance_in_cents:
                          type: integer
                        success:
                          type: boolean
                        id:
                          type: integer
                        payment_id:
                          type: 'null'
                        product_id:
                          type: integer
                        transaction_type:
                          type: string
                        gateway_transaction_id:
                          type: string
                        gateway_order_id:
                          type: 'null'
                        starting_balance_in_cents:
                          type: integer
                        component_id:
                          type: 'null'
                        tax_id:
                          type: 'null'
                        customer_id:
                          type: integer
                        card_number:
                          type: string
                        card_expiration:
                          type: string
                        card_type:
                          type: string
          examples:
            application/json:
              invoice:
                id: 1240345
                subscription_id: 14900541
                statement_id: 79334531
                site_id: 31615
                state: paid
                total_amount_in_cents: 4250
                paid_at: '2016-11-01T12:20:21-04:00'
                created_at: '2016-10-26T14:38:40-04:00'
                updated_at: '2016-11-01T12:20:21-04:00'
                amount_due_in_cents: 0
                number: '000014'
                charges:
                  - created_at: '2016-10-26T14:38:39-04:00'
                    subscription_id: 14900541
                    type: Charge
                    memo: Basic Plan (10/26/2016 - 11/26/2016)
                    kind: baseline
                    amount_in_cents: 4000
                    ending_balance_in_cents: 4000
                    success: true
                    id: 159670144
                    payment_id: 160493169
                    product_id: 3792003
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 0
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                  - created_at: '2016-10-26T14:38:39-04:00'
                    subscription_id: 14900541
                    type: Charge
                    memo: MA Tax (6.25%)
                    kind: tax
                    amount_in_cents: 250
                    ending_balance_in_cents: 4250
                    success: true
                    id: 159670145
                    payment_id: 160493169
                    product_id: 3792003
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 4000
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                payments_and_credits:
                  - created_at: '2016-11-01T12:20:20-04:00'
                    subscription_id: 14900541
                    type: Payment
                    memo: One Time Credit Card Payment for Invoice
                    kind: one_time
                    amount_in_cents: 4250
                    ending_balance_in_cents: -4450
                    success: true
                    id: 160493169
                    payment_id: null
                    product_id: 3792003
                    transaction_type: payment
                    gateway_transaction_id: '53433'
                    gateway_order_id: null
                    starting_balance_in_cents: -200
                    component_id: null
                    tax_id: null
                    customer_id: 14399371
                    card_number: XXXX-XXXX-XXXX-1
                    card_expiration: 01/2026
                    card_type: bogus
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}/payments.json':
    parameters:
      - name: invoice_id
        in: path
        description: The Invoice ID.
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-payments-format
      summary: Read Payments for an Invoice
      tags:
        - Invoice Payment
        - incomplete
        - Invoices
      description: |-
        ## Read Payments for an Invoice

        This method allows the user to display information regarding payments applied to an invoice. Specify the invoice ID, and the server response will be a list of all current payments applied to the invoice.
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-payments-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    post:
      operationId: POST_invoices-invoice_id-payments-json
      summary: Create Payment
      tags:
        - 'Invoices: Payments'
      description: |-
        ## Create Payment

        In order to specify a payment made against an invoice, specify the `amount`. 

        Please note that you may request the payment `amount_in_cents`. You may submit your request in cents as well:

        ```
        {
          "payment": {
            "amount": 10.00,
            "memo": "Lorem ipsum"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/payments/create-payment-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/payments/create-payment-output'
          examples:
            application/json:
              payment:
                id: 160567068
                subscription_id: 14900541
                type: Payment
                kind: manual
                transaction_type: payment
                success: true
                amount_in_cents: 1000
                memo: Lorem ipsum
                created_at: '2016-11-01T16:04:37-04:00'
                starting_balance_in_cents: 3750
                ending_balance_in_cents: 2750
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3792003
                tax_id: null
                component_id: null
                statement_id: 79733833
                customer_id: 14399371
                card_number: null
                card_expiration: null
                card_type: null
                refunded_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-paymentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/invoices/{id}.json':
    parameters:
      - name: id
        in: path
        description: The Invoice ID.
        required: true
        type: number
    get:
      operationId: GET_invoices-invoice_id-charges-format
      summary: Read Charges for an Invoice
      tags:
        - Invoice Charge
        - incomplete
        - Invoices
      description: |-
        ## Read Charges for an Invoice

        This method allows the user to display information regarding charges applied to an invoice. Specify the invoice ID, and the server response will be a list of all current charges applied to the invoice.
      parameters:
        - $ref: '#/parameters/trait:startdateEnddateQuery:start_date'
        - $ref: '#/parameters/trait:startdateEnddateQuery:end_date'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/invoice/list-charges-response'
          examples:
            application/json:
              invoice:
                id: 1532074
                subscription_id: 17518841
                statement_id: 94596778
                site_id: 36547
                state: partial
                total_amount_in_cents: 5655
                paid_at: null
                created_at: '2017-07-10T11:10:15-04:00'
                updated_at: '2017-07-10T11:10:50-04:00'
                amount_due_in_cents: 155
                number: 000399
                charges:
                  - created_at: '2017-07-10T11:10:13-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
                    kind: baseline
                    amount_in_cents: 7107
                    ending_balance_in_cents: 1607
                    success: true
                    id: 193822851
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: -5500
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: TX Tax (8.25%)
                    kind: tax
                    amount_in_cents: 469
                    ending_balance_in_cents: 655
                    success: true
                    id: 193822853
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 186
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                line_items:
                  - created_at: '2017-07-10T11:10:13-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
                    kind: baseline
                    amount_in_cents: 7107
                    ending_balance_in_cents: 1607
                    success: true
                    id: 193822851
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: -5500
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Adjustment
                    memo: 'Coupon: PERCENTS - percents'
                    kind: coupon
                    amount_in_cents: -1421
                    ending_balance_in_cents: 186
                    success: true
                    id: 193822852
                    payment_id: null
                    product_id: 4465911
                    transaction_type: adjustment
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 1607
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:14-04:00'
                    subscription_id: 17518841
                    type: Charge
                    memo: TX Tax (8.25%)
                    kind: tax
                    amount_in_cents: 469
                    ending_balance_in_cents: 655
                    success: true
                    id: 193822853
                    payment_id: null
                    product_id: 4465911
                    transaction_type: charge
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 186
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                  - created_at: '2017-07-10T11:10:50-04:00'
                    subscription_id: 17518841
                    type: Adjustment
                    memo: this is a credit
                    kind: null
                    amount_in_cents: -500
                    ending_balance_in_cents: 155
                    success: true
                    id: 193822901
                    payment_id: null
                    product_id: 4465911
                    transaction_type: adjustment
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: 655
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
                payments_and_credits:
                  - created_at: '2017-07-10T11:10:15-04:00'
                    subscription_id: 17518841
                    type: InfoTransaction
                    memo: Previous balance applied
                    kind: previous_balance_applied
                    amount_in_cents: -5500
                    ending_balance_in_cents: null
                    success: true
                    id: 193822855
                    payment_id: null
                    product_id: null
                    transaction_type: info
                    gateway_transaction_id: null
                    gateway_order_id: null
                    starting_balance_in_cents: null
                    component_id: null
                    tax_id: null
                    customer_id: 17034509
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_invoices-invoice_id-charges-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/invoices/{invoice_id}/charges.json':
    parameters:
      - name: invoice_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_invoices-invoice_id-charges-json
      summary: Create Invoice Charge
      tags:
        - 'Invoices: Charges'
      description: |-
        ## Create Invoice Charge

        Use this method to add a charge to an existing, open invoice.

        ## Request charges in cents

        You may submit your request in cents as well:

        ```
        {
          "payment": {
            "amount": 10.00,
            "memo": "Lorem ipsum"
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/charges/create-invoice-charge-input'
            example:
              charge:
                amount: '10.00'
                memo: Support October 2016
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/charges/create-invoice-charge-output'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-chargesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/invoices/{invoice_id}/adjustments.json':
    parameters:
      - name: invoice_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_invoices-invoice_id-adjustments-json
      summary: Create Invoice Credit
      tags:
        - 'Invoices: Credits'
      description: |-
        ## Create Invoice Credit

        Use this method to add a credit to an existing invoice.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/invoices/credits/create-invoice-credit-input'
            example:
              adjustment:
                amount: 10
                memo: Credit for recycling old computers
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invoices/credits/create-invoice-credit-output'
          examples:
            application/json:
              adjustment:
                id: 165068820
                subscription_id: 14823581
                type: Adjustment
                kind: null
                transaction_type: adjustment
                success: true
                amount_in_cents: -1000
                memo: Credit for recycling old computers
                created_at: '2016-12-05T13:37:28-05:00'
                starting_balance_in_cents: 177
                ending_balance_in_cents: -823
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3794121
                tax_id: null
                component_id: null
                statement_id: 79335006
                customer_id: 14332342
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_invoices-invoiceid-adjustmentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/notes.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    post:
      operationId: POST_subscriptions-subscription_id-notes-format
      summary: Create a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Create a Note

        Use the following method to create a note for a Subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/create-note-input'
            example:
              note:
                body: New test note.
                sticky: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                id: 105025
                body: New test note.
                subscription_id: 15054201
                created_at: '2016-11-03T14:47:08-04:00'
                updated_at: '2016-11-03T14:47:08-04:00'
                sticky: true
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscription_id-notes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_subscriptions-subscription_id-notes-format
      summary: Read Notes for a Subscription
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Read Notes for a Subscription

        Use this method to retrieve a list of Notes associated with a Subscription. The response will be an array of Notes.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/list-notes-output'
            example:
              - note:
                  body: Test note.
                  created_at: '2015-06-15T13:26:47-04:00'
                  id: 5
                  sticky: false
                  subscription_id: 100046
                  updated_at: '2015-06-15T13:28:12-04:00'
              - note:
                  body: Another test note.
                  created_at: '2015-06-15T12:04:46-04:00'
                  id: 4
                  sticky: false
                  subscription_id: 100046
                  updated_at: '2015-06-15T13:26:33-04:00'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/notes/create-note-output'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-notes-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/notes/{note_id}.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: note_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-notes-note_id-json
      summary: Read Specific Note
      tags:
        - incomplete
        - Notes
      description: |-
        ## Read/Show Specific Note

        Once you have obtained the ID of the note you wish to read, use this method to show a particular note attached to a subscription.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                body: Test note.
                created_at: '2015-06-15T13:26:47-04:00'
                id: 5
                sticky: false
                subscription_id: 100046
                updated_at: '2015-06-15T13:28:12-04:00'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-notes-noteidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-notes-note_id-format
      summary: Update a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Update a Note

        Use the following method to update a note for a Subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notes/create-note-input'
            example:
              note:
                body: Modified test note.
                sticky: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/notes/create-note-output'
          examples:
            application/json:
              note:
                id: 105025
                body: Modified test note.
                subscription_id: 15054201
                created_at: '2016-11-03T14:47:08-04:00'
                updated_at: '2016-11-03T14:49:09-04:00'
                sticky: true
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-notes-note_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
    delete:
      operationId: DELETE_subscriptions-subscription_id-notes-note_id-format
      summary: Delete a Note
      tags:
        - Note
        - incomplete
        - Notes
      description: |-
        ## Delete a Note

        Use the following method to delete a note for a Subscription.
      responses:
        '200':
          description: OK
        '422':
          description: ''
          schema:
            type: object
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-notes-note_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/payments.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-payments-json
      summary: Create a Payment
      tags:
        - Payments
      description: |-
        ## Create a Payment

        This method will allow you to record an external payment on a subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payments/create-payment-input'
            example:
              payment:
                amount: 10
                memo: Client x paid with $10.00 of nickles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment:
                id: 160873334
                subscription_id: 15054201
                type: Payment
                kind: manual
                transaction_type: payment
                success: true
                amount_in_cents: 1000
                memo: Client x paid with $10.00 of nickles
                created_at: '2016-11-03T14:58:30-04:00'
                starting_balance_in_cents: -13989
                ending_balance_in_cents: -14989
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: null
                product_id: 3861800
                tax_id: null
                component_id: null
                statement_id: 79870822
                customer_id: 14543792
                card_number: null
                card_expiration: null
                card_type: null
                refunded_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-paymentsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /payment_profiles.json:
    post:
      operationId: POST_payment_profiles-format
      summary: Create a Payment Profile
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## Create a Payment Profile

        This method will create a payment profile for the `customer_id` identified in the `payment_profile` object. The `customer_id` is required for creating payment profiles in order to attach it to the proper object.

        You must include a `customer_id` so that Chargify will attach it to the customer entry. If no `customer_id` is included the API will return a `404`.

        ## Create a Payment Profile for ACH usage

        If you would like to create a payment method that is a Bank Account applicable for ACH payments use the following:

        ```
        {
         "payment_profile": {
          "customer_id": [Valid-Customer-ID],
          "bank_name": "Best Bank",
          "bank_routing_number": "021000089",
          "bank_account_number": "111111111111",
          "bank_account_type": "checking",
          "bank_account_holder_type": "business",
          "payment_type": "bank_account"
          }
        }
        ```

        ## Active Payment Methods

        **Creating a new payment profile for a Customer via the API will not make that Payment Profile current for any of the Customer’s Subscriptions.**

        ## Activate Payment Profile for a Susbscription

        To activate a new payment profile for a subscription, please see the documentation [here.](#endpoint:cHNDtRXoSo3kj3BHr)

        To make a change, select the Subscription in the Admin UI and choose Payment Details, then click the "Make Active Payment Method" link next to the desired Payment Profile.

        **Note:** Either the `full_number`, `expiration_month`, and `expiration_year` **or** if you have an existing `vault_token` from your gateway, that `vault_token` and the `current_vault` are required.

        The `current_vault` must be one of the following:

        + `bogus` (for testing)
        + `authorizenet`
        + `authorizenet_cim`
        + `beanstream`
        + `bpoint`
        + `braintree_blue`
        + `chargify`.
        + `cybersource`
        + `elavon`
        + `eway`
        + `eway_rapid_std`
        + `firstdata`
        + `fusebox`
        + `litle`
        + `moneris`
        + `moneris_us`
        + `orbital`
        + `payment_express`
        + `paymill`
        + `pin`
        + `quickpay`
        + `square`
        + `stripe_connect`
        + `trust_commerce`
        + `wirecard`

        Passing in the `vault_token` and `current_vault` are only allowed when creating a new payment profile.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payment-profiles/create-payment-profile-input'
            example:
              payment_profile:
                first_name: Jessica
                last_name: Test
                masked_card_number: XXXX-XXXX-XXXX-1111
                card_type: visa
                expiration_month: 10
                expiration_year: 2018
                customer_id: 19195410
                current_vault: bogus
                vault_token: '1'
                billing_address: 123 Main St.
                billing_city: Boston
                billing_state: MA
                billing_zip: '02120'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment_profile:
                id: 13731211
                first_name: Jessica
                last_name: Test
                masked_card_number: null
                card_type: visa
                expiration_month: 10
                expiration_year: 2018
                customer_id: 19195410
                current_vault: bogus
                vault_token: '1'
                billing_address: 123 Main St.
                billing_city: Boston
                billing_state: MA
                billing_zip: '02120'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
        '404':
          description: ''
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_payment_profiles-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    get:
      operationId: GET_payment_profiles-format
      summary: List Payment Profiles for a Site
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## List Payment Profiles for a Site

        This method will return all of the active `payment_profiles` for a Site, or for one Customer within a site.  If no payment profiles are found, this endpoint will return an empty array, not a 404.
      parameters:
        - name: customer_id
          in: query
          description: The ID of the customer for which you wish to list payment profiles
          type: integer
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/payment-profiles/list-payment-profiles-for-a-site-outuput'
          examples:
            application/json:
              - payment_profile:
                  id: 10089892
                  first_name: Chester
                  last_name: Tester
                  customer_id: 14543792
                  current_vault: bogus
                  vault_token: '0011223344'
                  billing_address: 456 Juniper Court
                  billing_city: Boulder
                  billing_state: CO
                  billing_zip: '80302'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  bank_name: Bank of Kansas City
                  masked_bank_routing_number: XXXX6789
                  masked_bank_account_number: XXXX3344
                  bank_account_type: checking
                  bank_account_holder_type: personal
                  payment_type: bank_account
              - payment_profile:
                  id: 10188522
                  first_name: Frankie
                  last_name: Tester
                  customer_id: 14543712
                  current_vault: bogus
                  vault_token: '123456789'
                  billing_address: 123 Montana Way
                  billing_city: Los Angeles
                  billing_state: CA
                  billing_zip: '90210'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  bank_name: Bank of Kansas City
                  masked_bank_routing_number: XXXX6789
                  masked_bank_account_number: XXXX6789
                  bank_account_type: checking
                  bank_account_holder_type: personal
                  payment_type: bank_account
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_payment_profiles-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  '/subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}/change_payment_profile.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: payment_profile_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-payment_profiles-payment_profile_id-change_payment_profile-json
      summary: Create Default Payment Profile
      tags:
        - Payment Profiles
      description: |-
        ## Create Default Payment Profile

        This will change the default payment profile on the subscription to the existing payment profile with the id specified.

        You must elect to change the existing payment profile to a new payment profile ID in order to receive a satisfactory response from this endpoint.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/subscriptions/change-default-payment-profile-response'
          examples:
            application/json:
              payment_profile:
                id: 10211899
                first_name: Amelia
                last_name: Example
                masked_card_number: XXXX-XXXX-XXXX-1
                card_type: bogus
                expiration_month: 2
                expiration_year: 2018
                customer_id: 14399371
                current_vault: bogus
                vault_token: '1'
                billing_address: ''
                billing_city: ''
                billing_state: ''
                billing_zip: ''
                billing_country: ''
                customer_vault_token: null
                billing_address_2: ''
                payment_type: credit_card
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - This is already the current payment profile
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-paymentprofiles-paymentprofileid-changepaymentprofilejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/payment_profiles/{payment_profile_id}.json':
    parameters:
      - name: payment_profile_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_payment_profiles-payment_profile_id-json
      summary: Read Payment Profile - Bank Account
      tags:
        - Payment Profiles
      description: |-
        ## Read a Payment Profile - Bank Account

        Using the GET method you can retrieve a Payment Profile identified by its unique ID. 

        Please note that a different JSON object will be returned if the card method on file is a credit card.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payment-profile/read-payment-output-bank-account'
          examples:
            application/json:
              payment_profile:
                id: 10089892
                first_name: Chester
                last_name: Tester
                customer_id: 14543792
                current_vault: bogus
                vault_token: '0011223344'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: ''
                bank_name: Bank of Kansas City
                masked_bank_routing_number: XXXX6789
                masked_bank_account_number: XXXX3344
                bank_account_type: checking
                bank_account_holder_type: personal
                payment_type: bank_account
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_paymentprofiles-paymentprofileidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_payment_profiles-payment_profile_id-format
      summary: Update the Payment Profile
      tags:
        - Payment Profile
        - incomplete
        - Payment Profiles
      description: |-
        ## Update the Payment Profile

        Augment an existing `payment_profile_id` by using this endpoint and method.

        ## Partial Card Updates

        In the event that you are using the Authorize.net or Stripe payment gateways, you can update just the billing and contact information for a payment method. Note the lack of credit-card related data contained in the JSON payload. 

        In this case, the following JSON is acceptable:

        ```
        {
          "payment_profile": {
            "first_name": "Kelly",
            "last_name": "Test",
            "billing_address": "789 Juniper Court",
            "billing_city": "Boulder",
            "billing_state": "CO",
            "billing_zip": "80302",
            "billing_country": "US",
            "billing_address_2": null
          }
        }
        ```

        The result will be that you have updated the billing information for the card, yet retained the original card number data. 

        ## Specific notes on updating payment profiles

        - Merchants with **Authorize.net** or **Stripe** as their payment gateway can update their Customer’s credit cards without passing in the full credit card number and CVV.

        - If you are using **Authorize.net** or **Stripe**, Chargify will ignore the credit card number and CVV when processing an update via the API, and attempt a partial update instead. If you wish to change the card number on a payment profile, you will need to create a new payment profile for the given customer.

        - A Payment Profile cannot be updated with the attributes of another type of Payment Profile. For example, if the payment profile you are attempting to update is a credit card, you cannot pass in bank account attributes (like `bank_account_number`), and vice versa.

        - Updating a payment profile directly will not trigger an attempt to capture a past-due balance. If this is the intent, update the card details via the Subscription instead.

        - If you are using Authorize.net or Stripe, you may elect to manually trigger a retry for a past due subscription after a partial update.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/payments/update-payment-profile'
            example:
              payment_profile:
                first_name: Graham
                last_name: Test
                full_number: '4111111111111111'
                card_type: master
                expiration_month: '04'
                expiration_year: '2030'
                current_vault: bogus
                vault_token: '1'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                billing_address_2: null
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/payments/create-payment-output'
          examples:
            application/json:
              payment_profile:
                id: 10090015
                first_name: Graham
                last_name: Test
                masked_card_number: XXXX-XXXX-XXXX-1111
                card_type: visa
                expiration_month: 10
                expiration_year: 2022
                customer_id: 14543792
                current_vault: bogus
                vault_token: '1'
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: null
                payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_payment_profiles-payment_profile_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      - name: payment_profile_id
        in: path
        required: true
        type: string
    delete:
      operationId: DELETE_subscriptions-subscription_id-payment_profiles-payment_profile_id-format
      summary: Delete Payment Profile
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Delete Payment Profile

        This will delete a payment profile belonging to the Customer on the Subscription.

        **Note**: If the Customer has multiple Subscriptions, the payment profile will be removed from all of them.

        **Note**: Please note that if you delete the _default_ payment profile for a subscription, you will need to "specify another payment profile to be the default":#change-default-payment-profile through the api, or either prompt the user to enter a card in the billing portal or on the self-service page, or visit the Payment Details tab on the subscription in the Admin UI and use the "Add New Credit Card" or "Make Active Payment Method" link, (depending on whether there are other cards present).

        Response will be 204 / No content.
      responses:
        '204':
          description: No Content
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-payment_profiles-payment_profile_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/bank_accounts/{bank_account_id}/verification.json':
    parameters:
      - name: bank_account_id
        in: path
        required: true
        type: number
    put:
      operationId: PUT_bank_accounts-verification
      summary: Verify the Bank Account
      tags:
        - Payment Profiles
      description: |-
        # Verify the Bank Account

        Submit the two small deposit amounts the customer received in their bank account in order to verify the bank account. (Stripe only)
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              bank_account_verification:
                type: object
                properties:
                  deposit_1_in_cents:
                    type: integer
                  deposit_2_in_cents:
                    type: integer
            example:
              bank_account_verification:
                deposit_1_in_cents: 32
                deposit_2_in_cents: 45
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/payment-profile/read-payment-output-bank-account'
          examples:
            application/json:
              payment_profile:
                id: 10089892
                first_name: Chester
                last_name: Tester
                customer_id: 14543792
                current_vault: stripe_connect
                vault_token: cus_0123abc456def
                billing_address: 456 Juniper Court
                billing_city: Boulder
                billing_state: CO
                billing_zip: '80302'
                billing_country: US
                customer_vault_token: null
                billing_address_2: ''
                bank_name: Bank of Kansas City
                masked_bank_routing_number: XXXX6789
                masked_bank_account_number: XXXX3344
                bank_account_type: checking
                bank_account_holder_type: personal
                payment_type: bank_account
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'You have tried to verify this bank account 10 times. To continue trying to verify the account, please reach out to us directly.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_bank_accounts-verification
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family.id}/products.json':
    post:
      operationId: POST_product_families-product_family-id-products-json
      summary: Create a Product
      tags:
        - Products
      description: |-
        ## Create a Product

        Use this method to create a product within your Chargify Site.

        ## Input Attributes (Create)

        | price_in_cents           | The product price, in integer cents                                                                                                                                                                                                                                        |
        |--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | name                     | The product name                                                                                                                                                                                                                                                           |
        | handle                   | The product API handle                                                                                                                                                                                                                                                     |
        | description              | The product description                                                                                                                                                                                                                                                    |
        | product_family_id        | Nested attributes pertaining to the product family to which this product belongs                                                                                                                                                                                           |
        | accounting_code          | The product family accounting code (has no bearing in Chargify, may be used within your app)                                                                                                                                                                               |
        | interval_unit            | A string representing the interval unit for this product, either `month` or `day`                                                                                                                                                                                          |
        | interval                 | The numerical interval. i.e. an interval of `30` coupled with an interval_unit of `day` would mean this product would renew every 30 days                                                                                                                                  |
        | initial_charge_in_cents  | The up front charge you have specified.                                                                                                                                                                                                                                    |
        | trial_price_in_cents     | The price of the trial period for a subscription to this product, in integer cents.                                                                                                                                                                                        |
        | trial_interval           | A numerical interval for the length of the trial period of a subscription to this product. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval                                             |
        | trial_interval_unit      | A string representing the trial interval unit for this product, either `month` or `day`                                                                                                                                                                                    |
        | expiration_interval      | A numerical interval for the length a subscription to this product will run before it expires. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval                                         |
        | expiration_interval_unit | A string representing the trial interval unit for this product, either month or day                                                                                                                                                                                        |
        | require_credit_card      | Boolean                                                                                                                                                                                                                                                                    |
        | request_credit_card      | Boolean                                                                                                                                                                                                                                                                    |
        | require_billing_address  | Boolean                                                                                                                                                                                                                                                                    |
        | request_billing_address  | Boolean                                                                                                                                                                                                                                                                    |
        | request_shipping_address  | Boolean                                                                                                                                                                                                                                                                    |
        | require_shipping_address  | Boolean                                                                                                                                                                                                                                                                    |
        | taxable                  | Boolean                                                                                                                                                                                                                                                                    |
        | trial_type               | The type of trial for this product, either `no_obligation` or `payment_expected`.                                                                                                                                                                                          |
        | auto_create_signup_page  | A `true` or `false` value (default true) indicating whether or not you want a Public Page" to be automatically created for this product                                                                                                                                    |
        | update_return_url        | The url to which a customer will be returned after a successful account update                                                                                                                                                                                             |
        | return_url               | If `auto_create_signup_page` is `true`, this will set the url to which a customer will be returned after a successful signup for the auto-created signup page.                                                                                                             |
        | return_params            | The parameters to be appended to both update_return_url and, (if `auto_create_signup_page` is `true`,) `return_url` for the auto-created signup page. See [Return URLs and Parameters](https://help.chargify.com/products/product-options.html#return-url-and-parameters). |
        | tax_code                 | A string representing the tax code related to the product type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.                                                                      |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/products/create-a-product-input'
            example:
              product:
                name: Gold Plan
                handle: gold
                description: This is our gold plan.
                accounting_code: '123'
                request_credit_card: true
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                auto_create_signup_page: true
                tax_code: D0000000
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/products/create-a-product-output'
          examples:
            application/json:
              product:
                id: 4364984
                name: Gold Plan
                handle: gold
                description: This is our gold plan.
                accounting_code: '123'
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: null
                created_at: '2016-11-04T16:31:15-04:00'
                updated_at: '2016-11-04T16:31:15-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: null
                trial_interval: null
                trial_interval_unit: null
                archived_at: null
                require_credit_card: true
                return_params: null
                taxable: false
                update_return_url: null
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: null
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 301078
                    return_url: null
                    return_params: null
                    url: 'https://general-goods.chargify.com/subscribe/ftgbpq7f5qpr/gold'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Trial Price: must be given if a trial interval (duration) is provided.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_productfamilies-productfamilyid-productsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/products/{product_id}.json':
    parameters:
      - name: product_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_products-product_id-json
      summary: Read Product
      tags:
        - Products
      description: |-
        ## Read a Product

        This endpoint allows you to read the current details of a product that you've created in Chargify.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/read-a-product-output'
          examples:
            application/json:
              product:
                id: 4535635
                name: Paid Annual Seats
                handle: paid-annual-seats
                description: Paid annual seats for our commercial enterprise product
                accounting_code: paid-annual-seats
                request_credit_card: true
                expiration_interval: 1
                expiration_interval_unit: day
                created_at: '2017-08-25T10:25:31-05:00'
                updated_at: '2018-01-16T12:58:04-06:00'
                price_in_cents: 10000
                interval: 12
                interval_unit: month
                initial_charge_in_cents: 4900
                trial_price_in_cents: 1000
                trial_interval: 14
                trial_interval_unit: day
                archived_at: null
                require_credit_card: true
                return_params: 'id={subscription_id}&ref={customer_reference}'
                taxable: true
                update_return_url: 'http://www.example.com'
                tax_code: D0000000
                initial_charge_after_trial: false
                version_number: 4
                update_return_params: 'id={subscription_id}&ref={customer_reference}'
                product_family:
                  id: 1025627
                  name: Acme Products
                  description: ''
                  handle: acme-products
                  accounting_code: null
                public_signup_pages: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_products-product_id-json
      summary: Update a Product
      tags:
        - Products
      description: |-
        ## Update a Product

        Use this method to change aspects of an existing product. 

        ## Input Attributes Update Notes

        + `update_return_params` The parameters we will append to your `update_return_url`. See Return URLs and Parameters
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/products/update-product-input'
            example:
              product:
                name: Platinum Plan
                handle: platinum
                description: This is our platinum plan.
                accounting_code: '123'
                request_credit_card: true
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                auto_create_signup_page: true
                tax_code: D0000000
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/products/update-a-product-output'
          examples:
            application/json:
              product:
                id: 4365034
                name: Platinum Plan
                handle: platinum
                description: This is our platinum plan.
                accounting_code: '123'
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: null
                created_at: '2016-11-04T16:34:29-04:00'
                updated_at: '2016-11-04T16:37:11-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: null
                trial_interval: null
                trial_interval_unit: null
                archived_at: null
                require_credit_card: true
                return_params: null
                taxable: false
                update_return_url: null
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: null
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 301079
                    return_url: null
                    return_params: null
                    url: 'https://general-goods.chargify.com/subscribe/wgyd96tb5pj9/platinum'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Name: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_products-product_id-json
      summary: Archive a Product
      tags:
        - Products
      description: |-
        ## Archive a Product

        Sending a DELETE request to this endpoint will archive the product. All current subscribers will be unffected; their subscription/purchase will continue to be charged monthyl. 

        This will restrict the option to chose the product for purchase via the Billing Portal, as well as disable Public Signup Pages for the product.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/archive-a-product-output'
          examples:
            application/json:
              product:
                id: 4535638
                name: Business Monthly
                handle: null
                description: Business Monthly
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2017-08-25T10:25:31-05:00'
                updated_at: '2018-01-16T13:02:44-06:00'
                price_in_cents: 4900
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 0
                trial_interval: 1
                trial_interval_unit: day
                archived_at: '2018-01-16T13:02:44-06:00'
                require_credit_card: false
                return_params: ''
                taxable: false
                update_return_url: ''
                tax_code: ''
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: ''
                product_family:
                  id: 1025627
                  name: Acme Products
                  description: ''
                  handle: acme-products
                  accounting_code: null
                public_signup_pages: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_products-productidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/product_families/{product_family_id}/products.json':
    parameters:
      - name: product_family_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_products-format
      summary: Read Products for a Product Family
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read Products

        This method allows to retrieve a list of Products belonging to a Product Family. `product_family_id` is the required parameter. The response will contain a "products" array with "product" elements.

        ## 404 Response

        If the product family does not exist or fails to retrieve a list of products, a plain text message will be returned.

        ```
        A valid product_family_id is required
        ```
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/products/list-products-output'
          examples:
            application/json:
              - product:
                  id: 3801242
                  name: Free product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-04-21T16:08:39-04:00'
                  updated_at: '2016-08-03T11:27:53-04:00'
                  price_in_cents: 10000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 0
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 4
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 283460
                      return_url: null
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product'
              - product:
                  id: 3858146
                  name: Calendar Billing Product
                  handle: calendar-billing-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-07-05T13:07:38-04:00'
                  updated_at: '2016-07-05T13:07:38-04:00'
                  price_in_cents: 10000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 289193
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/gxdbfxzxhcjq/calendar-billing-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/products/handle/{api_handle}.json':
    parameters:
      - name: api_handle
        in: path
        required: true
        type: string
    get:
      operationId: GET_products-handle-handle-format
      summary: Read the Product via API Handle
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read Product via API Handle

        This method allows to retrieve a Product object by its `api_handle`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/products/read-the-product-via-chargify-id'
          examples:
            application/json:
              product:
                id: 3903594
                name: No cost product
                handle: no-cost-product
                description: ''
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2016-09-02T17:11:29-04:00'
                updated_at: '2016-11-30T11:46:13-05:00'
                price_in_cents: 0
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 5
                trial_interval: 1
                trial_interval_unit: month
                archived_at: null
                require_credit_card: false
                return_params: reference=5678
                taxable: false
                update_return_url: ''
                initial_charge_after_trial: false
                version_number: 1
                update_return_params: reference=5678
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 281174
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xgdxtk4vhtbz/no-cost-product'
                  - id: 282270
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xxqmrgtsbd9k/no-cost-product'
                  - id: 291587
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/pvhwss7zjjnh/no-cost-product'
                  - id: 294832
                    return_url: 'http://www.example.com/'
                    return_params: engine=md7a
                    url: 'https://general-goods.chargify.com/subscribe/m6tbcq4mcgpw/no-cost-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-handle-handle-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/products/{id}.json':
    parameters:
      - name: id
        in: path
        description: Product ID.
        required: true
        type: number
    get:
      operationId: GET_products-id-format
      summary: Read the Product by Product ID
      tags:
        - Product
        - Note
        - incomplete
        - Products
      description: |-
        ## Read the Product by ID

        This method allows to retrieve a Product object by its the `product_id`. The response will contain a single product object.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              product:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  handle:
                    type: string
                  description:
                    type: string
                  accounting_code:
                    type: string
                  request_credit_card:
                    type: boolean
                  expiration_interval:
                    type: 'null'
                  expiration_interval_unit:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  price_in_cents:
                    type: integer
                  interval:
                    type: integer
                  interval_unit:
                    type: string
                  initial_charge_in_cents:
                    type: 'null'
                  trial_price_in_cents:
                    type: integer
                  trial_interval:
                    type: integer
                  trial_interval_unit:
                    type: string
                  archived_at:
                    type: 'null'
                  require_credit_card:
                    type: boolean
                  return_params:
                    type: string
                  taxable:
                    type: boolean
                  update_return_url:
                    type: string
                  initial_charge_after_trial:
                    type: boolean
                  version_number:
                    type: integer
                  update_return_params:
                    type: string
                  product_family:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      handle:
                        type: string
                      accounting_code:
                        type: 'null'
                  public_signup_pages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        return_url:
                          type: string
                        return_params:
                          type: string
                        url:
                          type: string
          examples:
            application/json:
              product:
                id: 3861800
                name: Trial Product
                handle: trial-product
                description: Trial period with payment expected at end of trial.
                accounting_code: ''
                request_credit_card: true
                expiration_interval: null
                expiration_interval_unit: never
                created_at: '2016-07-08T09:53:55-04:00'
                updated_at: '2016-09-05T13:00:36-04:00'
                price_in_cents: 1000
                interval: 1
                interval_unit: month
                initial_charge_in_cents: null
                trial_price_in_cents: 0
                trial_interval: 7
                trial_interval_unit: day
                archived_at: null
                require_credit_card: true
                return_params: ''
                taxable: false
                update_return_url: ''
                initial_charge_after_trial: false
                version_number: 6
                update_return_params: ''
                product_family:
                  id: 527890
                  name: Acme Projects
                  description: ''
                  handle: billing-plans
                  accounting_code: null
                public_signup_pages:
                  - id: 294791
                    return_url: ''
                    return_params: ''
                    url: 'https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_products-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /product_families.json:
    post:
      operationId: POST_product_families-product_family_id-products-format
      summary: Create a Product Family
      tags:
        - Product
        - incomplete
        - Product Families
      description: |-
        ## Create a Product Family

        This method will create a Product Family within your Chargify Domain. Create a Product Family to act as a container for your products, components and coupons.

        ## 422 Errors

        If you receive a `422 Unprocessable Entity` error, please check the JSON response for missing elements.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/product-families/create-product-family-input'
            example:
              product_family:
                name: Acme Projects
                description: Amazing project management tool
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/product-families/create-product-family-output'
          examples:
            application/json:
              product_family:
                id: 933860
                name: Acme Projects
                description: Amazing project management tool
                handle: acme-projects
                accounting_code: null
        '422':
          description: Unprocessable Entity
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_product_families-product_family_id-products-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  '/product_families/{id}.json':
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: POST_product_families-id-format
      summary: Read Product Family via Product Family ID
      tags:
        - Product Family
        - incomplete
        - Product Families
      description: |-
        ## Read Product Family via Product Family ID

        This method allows to retrieve a Product Family via the `product_family_id`. The response will contain a Product Family object.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/product-families/list-product-family-by-id'
          examples:
            application/json:
              product_family:
                id: 527890
                name: Acme Projects
                description: ''
                handle: billing-plans
                accounting_code: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_product_families-id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /reason_codes.json:
    post:
      operationId: POST_reason_codes-json
      summary: Create Reason Code
      tags:
        - ReasonCode
        - Reason Codes
      description: |-
        ## Create Reason Code

        This method gives a merchant the option to create a reason codes for a given Site.

        ## ReasonCode Input Attributes

        In order to create a ReasonCode you must provide a code and a description.

        | code           | The unique identifier for the ReasonCode.                                                                                                                                                                                               |
        |--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | description | The friendly summary of what the code signifies |
        | position |  The order that code appears in in lists |
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions//reason_codes/create_code_request'
            example:
              reason_code:
                code: NOTHANKYOU
                description: No thank you!
                position: 5
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/show_response'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Code: cannot be blank.'
                - 'Code: This code is already in use.'
                - 'Description: cannot be blank.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_reasoncodesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    get:
      operationId: GET_reason_codes-json
      summary: Read Reason Codes for a Site
      tags:
        - Reason Codes
      description: |-
        ## Index View

        This method gives a merchant the option to retrieve a list of all of the current churn codes for a given site.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/list_response'
          examples:
            application/json:
              - reason_code:
                  id: 2
                  site_id: 2
                  code: LARGE
                  description: This is too complicated
                  position: 1
                  created_at: '2017-02-16T16:49:07-05:00'
                  updated_at: '2017-02-17T16:29:51-05:00'
              - reason_code:
                  id: 1
                  site_id: 2
                  code: CH1
                  description: This doesnt meet my needs
                  position: 2
                  created_at: '2017-02-16T16:48:45-05:00'
                  updated_at: '2017-02-17T16:29:59-05:00'
              - reason_code:
                  id: 5
                  site_id: 2
                  code: HAN99
                  description: Hard to setup
                  position: 3
                  created_at: '2017-02-17T16:29:42-05:00'
                  updated_at: '2017-02-17T16:29:59-05:00'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_reasoncodesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/reason_codes/{reason_code_id}.json':
    parameters:
      - name: reason_code_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_reason_codes-reason_code_id-json
      summary: Read a Specific Reason Code
      tags:
        - Reason Codes
      description: |-
        ## Read a Specific Reason Code

        This method gives a merchant the option to retrieve a list of a particular code for a given Site by providing the unique numerical ID of the code.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_code/show_response'
          examples:
            application/json:
              reason_code:
                id: 1
                site_id: 2
                code: CHEAP
                description: This is muuy caro
                position: 2
                created_at: '2017-02-16T16:48:45-05:00'
                updated_at: '2017-02-17T16:29:59-05:00'
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_reason_codes-reason_code_id-json
      summary: Update Reason Code
      tags:
        - Reason Codes
      description: |-
        ## Update Reason Code

        This method gives a merchant the option to update an existing reason code for a given site.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/reason_code/update_response'
            example:
              reason_code:
                id: 1
                site_id: 2
                code: '00023'
                description: Not using the product currently
                position: 2
                created_at: '2017-02-16T16:48:45-05:00'
                updated_at: '2017-02-21T16:33:10-05:00'
      responses:
        '200':
          description: ''
          schema:
            type: object
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_reason_codes-reason_code_id-json
      summary: Delete a Reason Code
      tags:
        - ReasonCode
        - Reason Codes
      description: |-
        ## Delete a Reason Code

        This method gives a merchant the option to delete one reason code from the Churn Reason Codes. This code will be immediately removed. This action is not reversable.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/reason_codes/delete_response'
          examples:
            application/json:
              ok: ok
        '404':
          description: ''
          schema:
            type: 'null'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_reasoncodes-reasoncodeidjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /referral_codes/validate.json:
    get:
      operationId: GET_referral_codes-validate-json
      summary: Validating Referral Codes via the API
      tags:
        - Referral Codes
      description: |-
        ## Validating Referral Codes

        Use this method to determine if the referral code is valid and applicable within your Site.
      parameters:
        - $ref: '#/parameters/trait:referralCode:code'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/referral/validate-response'
          examples:
            application/json:
              referral_code:
                id: 1032514
                site_id: 31615
                subscription_id: 16254270
                code: 9b6cdw
        '404':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: string
          examples:
            application/json:
              errors: Referral code is invalid.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_referralcodes-validatejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/refunds.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-refunds-json
      summary: Create a Refund
      tags:
        - Refunds
      description: |-
        ## Create a Refund

        Creating a refund requires a valid, live subscription and payment. A refund in the amount specified will be immediately applied to the customer’s credit card.

        In order to create a Refund, you must pass an a Payment ID, amount and a memo. The amount can be specified by either the `amount` parameter or the `amount_in_cents` parameter.

        When a Refund is successfully created, a representation of the newly created Refund will be returned to you as JSON or XML in the message body, with the Output attributes.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/refunds/create-a-refund-request'
            example:
              refund:
                payment_id: '162269766'
                amount: '100.00'
                memo: Your memo here.
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/refunds/create-a-refund-response'
          examples:
            application/json:
              refund:
                id: 162272485
                subscription_id: 15236915
                type: Refund
                kind: null
                transaction_type: refund
                success: true
                amount_in_cents: 10000
                memo: Your memo here.
                created_at: '2016-11-14T15:14:14-05:00'
                starting_balance_in_cents: 0
                ending_balance_in_cents: 0
                gateway_used: bogus
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: 162269766
                product_id: 3792003
                tax_id: null
                component_id: null
                statement_id: 80500632
                customer_id: 14714298
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-refundsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/renewals/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-renewals-preview-json
      summary: Renewal Preview
      tags:
        - incomplete
        - Renewal Preview
      description: |-
        ## Renewal Preview

        The Chargify API allows you to preview a renewal by posting to the renewals endpoint. 


        ## Renewal Output Fields

        In the server response you will recieve an array of allocation objects with the following fields:

        | next_assessment_at        | The timestamp for the subscription’s next renewal                                                                                                                                                                         |
        |---------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | existing_balance_in_cents | An integer representing the amount of the subscription’s current balance                                                                                                                                                  |
        | subtotal_in_cents         | An integer representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal                                                                                                   |
        | total_discount_in_cents   | An integer representing the amount of the coupon discounts that will be applied to the next renewal                                                                                                                       |
        | total_tax_in_cents        | An integer representing the total tax charges that will be assessed at the next renewal                                                                                                                                   |
        | total_in_cents            | An integer representing the total amount owed, less any discounts, that will be assessed at the next renewal                                                                                                              |
        | total_amount_due_in_cents | An integer representing the existing_balance_in_cents plus the total_in_cents                                                                                                                                             |
        | uncalculated_taxes        | A boolean indicating whether or not additional taxes will be calculated at the time of renewal. This will be true if you are using Avalara and the address of the subscription is in one of your defined taxable regions. |
        | line_items                | An array of objects representing the individual transactions that will be created at the next renewal                                                                                                                     |
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              renewal_preview:
                type: object
                properties:
                  next_assessment_at:
                    type: string
                  subtotal_in_cents:
                    type: integer
                  total_tax_in_cents:
                    type: integer
                  total_discount_in_cents:
                    type: integer
                  total_in_cents:
                    type: integer
                  existing_balance_in_cents:
                    type: integer
                  total_amount_due_in_cents:
                    type: integer
                  uncalculated_taxes:
                    type: boolean
                  line_items:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_type:
                          type: string
                        kind:
                          type: string
                        amount_in_cents:
                          type: integer
                        memo:
                          type: string
                        discount_amount_in_cents:
                          type: integer
                        taxable_amount_in_cents:
                          type: integer
          examples:
            application/json:
              renewal_preview:
                next_assessment_at: '2017-03-13T12:50:55-04:00'
                subtotal_in_cents: 6000
                total_tax_in_cents: 0
                total_discount_in_cents: 0
                total_in_cents: 6000
                existing_balance_in_cents: 0
                total_amount_due_in_cents: 6000
                uncalculated_taxes: false
                line_items:
                  - transaction_type: charge
                    kind: baseline
                    amount_in_cents: 5000
                    memo: Gold Product (03/13/2017 - 04/13/2017)
                    discount_amount_in_cents: 0
                    taxable_amount_in_cents: 0
                  - transaction_type: charge
                    kind: quantity_based_component
                    amount_in_cents: 1000
                    memo: 'Quantity Component: 10 Quantity Components'
                    discount_amount_in_cents: 0
                    taxable_amount_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-renewals-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /sales_receipts.json:
    get:
      operationId: GET_sales_receipts-json
      summary: Read Sales Receipts
      tags:
        - incomplete
        - Sales Receipts
      description: |-
        ## Pagination and Filtering

        Using pagination The results can be filtered by date or number.  Traversal is possible using the number filters.

        ## Traversal/Pagination

        Pagination is achieved through the use of the `before_number` or `after_number` filters.  By default, the records are returned in descending `number` order, i.e. newest receipts first.  With each response, a `next` link is provided when there are more results.

        ### Example

        Consider a Site with 1000 Sales Receipts, numbered 1 through 1000.

        #### First Request in Traversal

        ```
        GET /sales_receipts
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts",
            "next": "https://acme.chargify.com/sales_receipts?before_number=981"
          },
          "meta": {
            "total": 1000,
            "count": 20
          },
          "data": [
            { number: 1000, ...},
            ... 18 more records ....
            { number: 981, ...}
          ]
        }
        ```

        #### Next Request in Traversal

        ```
        GET /sales_receipts?before_number=981
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?before_number=981",
            "next": "https://acme.chargify.com/sales_receipts?before_number=961"
          },
          "meta": {
            "total": 980,
            "count": 20
          },
          "data": [
            { number: 980, ...},
            ... 18 more records ....
            { number: 961, ...}
          ]
        }
        ```

        #### Last Request in Traversal

        ```
        GET /sales_receipts?before_number=21
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?before_number=21",
            "next": null
          },
          "meta": {
            "total": 20,
            "count": 20
          },
          "data": [
            { number: 20, ...},
            ... 18 more records ....
            { number: 1, ...}
          ]
        }
        ```

        #### Subsequent Fetches

        Now that we have ingested "all" of the Sales Receipts for the Site, and we have recorded that our highest `number` was 1000, we can periodically poll to get the new Receipts, always using our new highest number processed:

        ```
        GET /sales_receipts?after_number=1000
        {
          "links": {
            "self": "https://acme.chargify.com/sales_receipts?after_number=1000",
            "next": null
          },
          "meta": {
            "total": 3,
            "count": 3
          },
          "data": [
            { number: 1003, ...},
            { number: 1002, ...},
            { number: 1001, ...}
          ]
        }
        ```
      parameters:
        - name: before_number
          in: query
          description: Filters the result to include only Sales Receipts with numbers numerically lower than the given value.
          type: number
        - name: after_number
          in: query
          description: Filters the result to include only Sales Receipts with numbers numerically lower than the given value.
          type: number
        - name: start_date
          in: query
          description: 'A date string, in the format `YYYY-MM-DD`, that filters the result to include only Sales Receipts generated on or after the given date.'
          type: string
        - name: end_date
          in: query
          description: 'A date string, in the format `YYYY-MM-DD`, that filters the result to include only Sales Receipts generated on or before the given date.'
          type: string
        - name: direction
          in: query
          description: 'Toggles the order of the results between descending `number` order (`desc`, or newest first) or ascending `number` order (`asc`, or oldest first).'
          type: string
          default: desc
          enum:
            - desc
            - asc
        - name: Accept
          in: header
          description: '`application/json`'
          type: string
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/sales-receipts/list-sales-receipts'
          examples:
            application/json:
              links:
                self: 'http://subdomain.chargify.com/sales_receipts'
                next: 'http://subdomain.chargify.com/sales_receipts?before_number=6'
              meta:
                count: 20
                total: 25
              data: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_salesreceiptsjson
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          enabled: false
          dynamic: false
  '/sales_receipts/{id}.json':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      operationId: GET_sales_receipts-id-json
      summary: Read a Sales Receipt
      tags:
        - incomplete
        - Sales Receipts
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/sales-receipts/get-a-sales-receipt-output'
          examples:
            application/json:
              id: f22b6080-4c28-11e5-93ee-000a27020040
              site_id: 1
              subscription_id: 1
              transaction_time: '2015-08-26T15:30:45-04:00'
              number: 1
              currency: USD
              subtotal_in_cents: 7200
              discount_in_cents: 720
              taxable_subtotal_in_cents: 6480
              tax_in_cents: 549
              total_in_cents: 7029
              liability_debit_in_cents: 0
              customer:
                id: 1
                first_name: Mark
                last_name: Wahlberg
                email: marky@example.com
                organization: The Funky Bunch
                reference: marky
              shipping_address:
                line_1: 100 Shipping St.
                line_2: Apt 200
                city: Pleasantville
                state: CA
                zip: '12345'
                country: US
              billing_address:
                line_1: 1 Infinite Loop
                line_2: Suite 100
                city: Cupertino
                state: CA
                zip: '95014'
                country: US
              line_items:
                - transaction_id: 1
                  amount_in_cents: 2900
                  discount_in_cents: 290
                  tax_in_cents: 261
                  accounting_code: basic-plan-000
                  kind: baseline
                  item_type: Product
                  item_id: 1
                  item_name: Basic Plan
                  product_id: 1
                  taxable: true
                  description: Basic Plan (08/26/2015 - 09/26/2015)
                - transaction_id: 2
                  amount_in_cents: 1000
                  discount_in_cents: 100
                  tax_in_cents: 90
                  accounting_code: null
                  kind: quantity_based_component
                  item_type: QuantityBasedComponent
                  item_id: 1
                  item_name: Taxable Widget
                  product_id: 1
                  taxable: true
                  description: 'Taxable Widget: 10 units'
                - transaction_id: 3
                  amount_in_cents: 500
                  discount_in_cents: 50
                  tax_in_cents: 0
                  accounting_code: null
                  kind: quantity_based_component
                  item_type: QuantityBasedComponent
                  item_id: 2
                  item_name: Non-Taxable Widget
                  product_id: 1
                  taxable: false
                  description: 'Non-Taxable Widget: 5 units'
                - transaction_id: 4
                  amount_in_cents: 1000
                  discount_in_cents: 100
                  tax_in_cents: 90
                  accounting_code: null
                  kind: metered_component
                  item_type: MeteredComponent
                  item_id: 3
                  item_name: Taxable Minutes
                  product_id: 1
                  taxable: true
                  description: 'Taxable Minutes: 100 units'
                - transaction_id: 5
                  amount_in_cents: 500
                  discount_in_cents: 50
                  tax_in_cents: 0
                  accounting_code: null
                  kind: metered_component
                  item_type: MeteredComponent
                  item_id: 4
                  item_name: Non-Taxable Minutes
                  product_id: 1
                  taxable: false
                  description: 'Non-Taxable Minutes: 50 units'
                - transaction_id: 6
                  amount_in_cents: 100
                  discount_in_cents: 10
                  tax_in_cents: 9
                  accounting_code: null
                  kind: on_off_component
                  item_type: OnOffComponent
                  item_id: 6
                  item_name: Taxable Add-On
                  product_id: 1
                  taxable: true
                  description: Taxable Add-On
                - transaction_id: 7
                  amount_in_cents: 100
                  discount_in_cents: 10
                  tax_in_cents: 0
                  accounting_code: null
                  kind: on_off_component
                  item_type: OnOffComponent
                  item_id: 8
                  item_name: Non-Taxable Add-On
                  product_id: 1
                  taxable: false
                  description: Non-Taxable Add-On
                - transaction_id: 8
                  amount_in_cents: 1100
                  discount_in_cents: 110
                  tax_in_cents: 99
                  accounting_code: basic-plan-000
                  kind: initial
                  item_type: Product
                  item_id: 1
                  item_name: Basic Plan
                  product_id: 1
                  taxable: true
                  description: Initial/Startup fees
              discounts:
                - transaction_id: 9
                  amount_in_cents: -720
                  item_type: Coupon
                  item_id: 1
                  item_name: 10% Off
                  description: 'Coupon: 10PERCENT - Save 10% on new signups'
              taxes:
                - transaction_id: 10
                  amount_in_cents: 549
                  item_type: Tax
                  item_id: 1
                  item_name: CA Sales Tax
                  description: CA Sales Tax (10.0%)
              payments:
                - transaction_id: 11
                  liability_account: na
                  amount_in_cents: 7029
                  kind: null
                  description: 'Mark Wahlberg - Basic Plan: Signup payment'
                  payment_method:
                    masked_card_number: XXXX-XXXX-XXXX-1
                    card_expiration: 12/2022
                    card_brand: bogus
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_salesreceipts-idjson
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /sites/clear_data.json:
    post:
      operationId: POST_sites-clear_data-json
      summary: 'Clear all Site data:  (Customers)'
      tags:
        - Sites
      description: |-
        ## Clear all Site data:  (Customers)

        Only customers and related subscriptions (leaving the products untouched) for the site. Revenue will also be reset to 0.

        ## Example

        Method: POST

        ```
        https://<subdomain>.chargify.com/sites/clear_data.json?cleanup_scope=customers
        ```

        Required Parameter: cleanup_scope

        Result: Only customers and related subscriptions (leaving the products untouched) for the site. Revenue will also be reset to 0.

        ## Response

        The response will be a string value of `200 OK`.
      parameters:
        - name: cleanup_scope
          in: query
          required: true
          type: string
          enum:
            - customers
      responses:
        default:
          description: ''
          schema: {}
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_sites-cleardatajson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/statements/ids.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    get:
      operationId: GET_subscriptions-subscription_id-statements-ids-format
      summary: Read Statement IDs for a Subscription
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## Read Statement IDs for a Subscription

        This method will return a list of Statement IDs associated with one subscription. Use the IDs returned here in conjunction with [Read/Show by Chargify ID](#endpoint:nyiRmzkvKSQNGa6Ag).
         
        ## Sorting examples

        Say you would like to get the 10 most recently created statements. You would specify the following optional parameters:

        + sort as `created_at`
        + direction as `desc`
        + limit your `per_page` to `10.

        If you on the other hand wish to find the oldest closed statements you could do:

        + sort as `closed_at`
        + direction as `asc`
      parameters:
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: sort
          in: query
          description: 'Possible values: `created_at`, `opened_at`, or `closed_at`. This allows you to choose what you would like to sort on. (Defaults to `created_at`).'
          required: false
          type: string
        - name: direction
          in: query
          description: |+

            This parameter specifies the sorting order. With `asc` and `desc` values, you can choose whether the items are to be sorted in ascending or descending order. Default value is `asc`.

          required: false
          type: string
          enum:
            - 'Default:`asc`'
            - desc
        - name: per_page
          in: query
          description: 'This parameter indicates how many records to fetch in each request. Preset to 10,000.'
          required: false
          type: number
        - $ref: '#/parameters/trait:settledSinceUnix:settled_since'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/list-statement-ids-for-a-subscription-response'
          examples:
            application/json:
              statement_ids:
                - 79221109
                - 79221381
                - 79221642
                - 79221742
                - 79334531
                - 79702531
                - 79733833
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-statements-ids-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /statements/ids.json:
    get:
      operationId: GET_statements-ids-format
      summary: Read Statement IDs for a Site
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## List Statement IDs for a Site

        This method will return a list of Statement IDs associated with and entire Site. Use the IDs returned here in conjunction with [Read/Show by Chargify ID](#endpoint:nyiRmzkvKSQNGa6Ag).
      parameters:
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: per_page
          in: query
          description: 'This parameter indicates how many records to fetch in each request. Preset to 10,000.'
          required: false
          type: number
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
        - $ref: '#/parameters/trait:settledSinceUnix:settled_since'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/list-statement-ids-for-a-site-response'
          examples:
            application/json:
              statement_ids:
                - 67201893
                - 67266652
                - 67301249
                - 67301813
                - 80499378
                - 80499379
                - 80500632
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements-ids-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/statements.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-statements-json
      summary: Read Statements for a Subscription
      tags:
        - Statements
      description: |-
        ## List Statements for a Subscription

        This method will return the full HTML and content associated with a subscription on your Site.
      parameters:
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                statement:
                  type: object
                  properties:
                    id:
                      type: integer
                    basic_html_view:
                      type: string
                    closed_at:
                      type: string
                    created_at:
                      type: string
                    customer_billing_address:
                      type: string
                    customer_billing_address_2:
                      type: string
                    customer_billing_city:
                      type: string
                    customer_billing_country:
                      type: string
                    customer_billing_state:
                      type: string
                    customer_billing_zip:
                      type: string
                    customer_first_name:
                      type: string
                    customer_last_name:
                      type: string
                    customer_organization:
                      type: string
                    customer_shipping_address:
                      type: string
                    customer_shipping_address_2:
                      type: string
                    customer_shipping_city:
                      type: string
                    customer_shipping_country:
                      type: string
                    customer_shipping_state:
                      type: string
                    customer_shipping_zip:
                      type: string
                    ending_balance_in_cents:
                      type: integer
                    future_payments:
                      type: array
                      items:
                        type: object
                    html_view:
                      type: string
                    memo:
                      type: string
                    opened_at:
                      type: string
                    settled_at:
                      type: string
                    starting_balance_in_cents:
                      type: integer
                    subscription_id:
                      type: integer
                    text_view:
                      type: string
                    updated_at:
                      type: string
                    total_in_cents:
                      type: integer
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          kind:
                            type:
                              - 'null'
                              - string
                          transaction_type:
                            type: string
                          success:
                            type: boolean
                          amount_in_cents:
                            type: integer
                          memo:
                            type: string
                          created_at:
                            type: string
                          starting_balance_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          gateway_used:
                            type:
                              - 'null'
                              - string
                          gateway_transaction_id:
                            type:
                              - 'null'
                              - string
                          gateway_order_id:
                            type: 'null'
                          payment_id:
                            type:
                              - integer
                              - 'null'
                          product_id:
                            type: integer
                          tax_id:
                            type: 'null'
                          component_id:
                            type: 'null'
                          statement_id:
                            type: integer
                          customer_id:
                            type: integer
                          item_name:
                            type: string
                          original_amount_in_cents:
                            type: 'null'
                          discount_amount_in_cents:
                            type: 'null'
                          taxable_amount_in_cents:
                            type:
                              - integer
                              - 'null'
                          taxations:
                            type: array
                            items:
                              type: object
                              properties:
                                tax_id:
                                  type: 'null'
                                tax_charge_id:
                                  type: integer
                                tax_name:
                                  type: string
                                rate:
                                  type: string
                                tax_amount_in_cents:
                                  type: integer
                                tax_rules:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      tax_rule_id:
                                        type: 'null'
                                      country_code:
                                        type: string
                                      subdivision_code:
                                        type: string
                                      rate:
                                        type: string
                                      tax_amount_in_cents:
                                        type: integer
                                      description:
                                        type: string
                          card_number:
                            type: string
                          card_expiration:
                            type: string
                          card_type:
                            type: string
                          refunded_amount_in_cents:
                            type: integer
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          event:
                            type: object
                            properties:
                              id:
                                type: integer
                              key:
                                type: string
                              message:
                                type: string
                              subscription_id:
                                type: integer
                              created_at:
                                type: string
                              event_specific_data:
                                type:
                                  - 'null'
                                  - object
                                properties:
                                  product_id:
                                    type: integer
                                  account_transaction_id:
                                    type:
                                      - integer
                                      - 'null'
                                  previous_subscription_state:
                                    type: string
                                  new_subscription_state:
                                    type: string
          examples:
            application/json:
              - statement:
                  id: 79221109
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221109)</div>
                            <div id="billing_statement_product">Acme Projects - Trial Product</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:20:13-04:00'
                  created_at: '2016-10-24T16:20:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:12-04:00'
                  settled_at: '2016-10-24T16:20:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221109)
                    billing@example.com                                Acme Projects - Trial Product
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221109
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..: $0.00
                    Current Charges...: $0.00
                    Payments..........: $0.00
                    Ending Balance....: $0.00

                    Balance Paid......: 10/24/2016 04:20PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                    ............  .....  ...............................................  ..........
                                                                                 Totals:       $0.00

                    ### Payments

                    No payments this period


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Signup Success                                                    
                    04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                  ct                                                                
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:20:13-04:00'
                  total_in_cents: 0
                  transactions:
                    - id: 159423810
                      subscription_id: 14900541
                      type: Charge
                      kind: trial
                      transaction_type: charge
                      success: true
                      amount_in_cents: 0
                      memo: Trial Price (10/24/2016 - 10/31/2016)
                      created_at: '2016-10-24T16:20:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 0
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3861800
                      tax_id: null
                      component_id: null
                      statement_id: 79221109
                      customer_id: 14399371
                      item_name: Trial Price
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                  events:
                    - event:
                        id: 342036408
                        key: signup_success
                        message: Successful signup for Amelia Example's subscription to Trial Product
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:13-04:00'
                        event_specific_data:
                          product_id: 3861800
                          account_transaction_id: null
              - statement:
                  id: 79221381
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221381)</div>
                            <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:21:13-04:00'
                  created_at: '2016-10-24T16:21:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:14-04:00'
                  settled_at: '2016-10-24T16:21:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221381)
                    billing@example.com                                   Acme Projects - Basic Plan
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221381
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..:  $0.00
                    Current Charges...: $42.50
                    Payments..........: $42.50
                    Ending Balance....:  $0.00

                    Balance Paid......: 10/24/2016 04:21PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50

                    ### Payments

                    Date/Time     Type   Detail                                               Amount
                    ............  .....  ...............................................  ..........
                    10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
                    04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Subscription State Change                                         
                    04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                                  trialing to active                                                
                    ............  ..................................................................
                    10/24/2016    Subscription Product Change                                       
                    04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                                  ct' to 'Basic Plan'                                               
                    ............  ..................................................................
                    10/24/2016    Billing Date Change                                               
                    04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                                  n from 10/31/2016 to 10/24/2016                                   
                    ............  ..................................................................
                    10/24/2016    Renewal Success                                                   
                    04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
                    ............  ..................................................................
                    10/24/2016    Payment Success                                                   
                    04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                                  Basic Plan                                                        
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:21:13-04:00'
                  total_in_cents: 4250
                  transactions:
                    - id: 159424439
                      subscription_id: 14900541
                      type: Charge
                      kind: baseline
                      transaction_type: charge
                      success: true
                      amount_in_cents: 4000
                      memo: Basic Plan (10/24/2016 - 11/24/2016)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 4000
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: 4000
                      taxations:
                        - tax_id: null
                          tax_charge_id: 159424444
                          tax_name: MA Tax
                          rate: '0.0625'
                          tax_amount_in_cents: 250
                          tax_rules:
                            - tax_rule_id: null
                              country_code: US
                              subdivision_code: MA
                              rate: '0.0625'
                              tax_amount_in_cents: 250
                              description: MA STATE TAX - MASSACHUSETTS
                    - id: 159424444
                      subscription_id: 14900541
                      type: Charge
                      kind: tax
                      transaction_type: charge
                      success: true
                      amount_in_cents: 250
                      memo: MA Tax (6.25%)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 4000
                      ending_balance_in_cents: 4250
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                    - id: 159424449
                      subscription_id: 14900541
                      type: Payment
                      kind: null
                      transaction_type: payment
                      success: true
                      amount_in_cents: 4250
                      memo: 'Amelia Example - Basic Plan: Renewal payment'
                      created_at: '2016-10-24T16:21:13-04:00'
                      starting_balance_in_cents: 4250
                      ending_balance_in_cents: 0
                      gateway_used: bogus
                      gateway_transaction_id: '53433'
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      card_number: XXXX-XXXX-XXXX-1
                      card_expiration: 01/2026
                      card_type: bogus
                      refunded_amount_in_cents: 0
                  events:
                    - event:
                        id: 342036536
                        key: subscription_state_change
                        message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_subscription_state: trialing
                          new_subscription_state: active
                    - event:
                        id: 342036540
                        key: subscription_product_change
                        message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_product_id: 3861800
                          new_product_id: 3792003
                    - event:
                        id: 342037380
                        key: billing_date_change
                        message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:11-04:00'
                        event_specific_data: null
                    - event:
                        id: 342037470
                        key: renewal_success
                        message: Successful renewal for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
                    - event:
                        id: 342037482
                        key: payment_success
                        message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscriptionid-statementsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /statements.json:
    get:
      operationId: GET_statements-json
      summary: Read Statements for a Site
      tags:
        - Statements
      description: |-
        ## List Statements for a Site

        This method will return a paginated list of all Statements generated by the Subscriptions in your Site.

        Note that this endpoint returns a "lighter" set of the Statement attributes than the "List Statements for a Subscription" endpoint.  This endpoint omits the HTML and textual representations for the Statement: `basic_html_view`, `html_view`, and `text_view`.  If you require these attributes, you can either build them yourself based on the other data returned or fetch a single subscription via the "Read/Show by Chargify ID" endpoint.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:statementsList:sort'
        - $ref: '#/parameters/trait:statementsList:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                statement:
                  type: object
                  properties:
                    id:
                      type: integer
                    basic_html_view:
                      type: string
                    closed_at:
                      type: string
                    created_at:
                      type: string
                    customer_billing_address:
                      type: string
                    customer_billing_address_2:
                      type: string
                    customer_billing_city:
                      type: string
                    customer_billing_country:
                      type: string
                    customer_billing_state:
                      type: string
                    customer_billing_zip:
                      type: string
                    customer_first_name:
                      type: string
                    customer_last_name:
                      type: string
                    customer_organization:
                      type: string
                    customer_shipping_address:
                      type: string
                    customer_shipping_address_2:
                      type: string
                    customer_shipping_city:
                      type: string
                    customer_shipping_country:
                      type: string
                    customer_shipping_state:
                      type: string
                    customer_shipping_zip:
                      type: string
                    ending_balance_in_cents:
                      type: integer
                    future_payments:
                      type: array
                      items:
                        type: object
                    html_view:
                      type: string
                    memo:
                      type: string
                    opened_at:
                      type: string
                    settled_at:
                      type: string
                    starting_balance_in_cents:
                      type: integer
                    subscription_id:
                      type: integer
                    text_view:
                      type: string
                    updated_at:
                      type: string
                    total_in_cents:
                      type: integer
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          subscription_id:
                            type: integer
                          type:
                            type: string
                          kind:
                            type:
                              - 'null'
                              - string
                          transaction_type:
                            type: string
                          success:
                            type: boolean
                          amount_in_cents:
                            type: integer
                          memo:
                            type: string
                          created_at:
                            type: string
                          starting_balance_in_cents:
                            type: integer
                          ending_balance_in_cents:
                            type: integer
                          gateway_used:
                            type:
                              - 'null'
                              - string
                          gateway_transaction_id:
                            type:
                              - 'null'
                              - string
                          gateway_order_id:
                            type: 'null'
                          payment_id:
                            type:
                              - integer
                              - 'null'
                          product_id:
                            type: integer
                          tax_id:
                            type: 'null'
                          component_id:
                            type: 'null'
                          statement_id:
                            type: integer
                          customer_id:
                            type: integer
                          item_name:
                            type: string
                          original_amount_in_cents:
                            type: 'null'
                          discount_amount_in_cents:
                            type: 'null'
                          taxable_amount_in_cents:
                            type:
                              - integer
                              - 'null'
                          taxations:
                            type: array
                            items:
                              type: object
                              properties:
                                tax_id:
                                  type: 'null'
                                tax_charge_id:
                                  type: integer
                                tax_name:
                                  type: string
                                rate:
                                  type: string
                                tax_amount_in_cents:
                                  type: integer
                                tax_rules:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      tax_rule_id:
                                        type: 'null'
                                      country_code:
                                        type: string
                                      subdivision_code:
                                        type: string
                                      rate:
                                        type: string
                                      tax_amount_in_cents:
                                        type: integer
                                      description:
                                        type: string
                          card_number:
                            type: string
                          card_expiration:
                            type: string
                          card_type:
                            type: string
                          refunded_amount_in_cents:
                            type: integer
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          event:
                            type: object
                            properties:
                              id:
                                type: integer
                              key:
                                type: string
                              message:
                                type: string
                              subscription_id:
                                type: integer
                              created_at:
                                type: string
                              event_specific_data:
                                type:
                                  - 'null'
                                  - object
                                properties:
                                  product_id:
                                    type: integer
                                  account_transaction_id:
                                    type:
                                      - integer
                                      - 'null'
                                  previous_subscription_state:
                                    type: string
                                  new_subscription_state:
                                    type: string
          examples:
            application/json:
              - statement:
                  id: 79221109
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221109)</div>
                            <div id="billing_statement_product">Acme Projects - Trial Product</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:20:13-04:00'
                  created_at: '2016-10-24T16:20:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="billing_statement_listing_empty_results_row">
                              <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$0.00</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Signup Success</td>
                            <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:12-04:00'
                  settled_at: '2016-10-24T16:20:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221109)
                    billing@example.com                                Acme Projects - Trial Product
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221109
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..: $0.00
                    Current Charges...: $0.00
                    Payments..........: $0.00
                    Ending Balance....: $0.00

                    Balance Paid......: 10/24/2016 04:20PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                    ............  .....  ...............................................  ..........
                                                                                 Totals:       $0.00

                    ### Payments

                    No payments this period


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Signup Success                                                    
                    04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                  ct                                                                
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:20:13-04:00'
                  total_in_cents: 0
                  transactions:
                    - id: 159423810
                      subscription_id: 14900541
                      type: Charge
                      kind: trial
                      transaction_type: charge
                      success: true
                      amount_in_cents: 0
                      memo: Trial Price (10/24/2016 - 10/31/2016)
                      created_at: '2016-10-24T16:20:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 0
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3861800
                      tax_id: null
                      component_id: null
                      statement_id: 79221109
                      customer_id: 14399371
                      item_name: Trial Price
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                  events:
                    - event:
                        id: 342036408
                        key: signup_success
                        message: Successful signup for Amelia Example's subscription to Trial Product
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:13-04:00'
                        event_specific_data:
                          product_id: 3861800
                          account_transaction_id: null
              - statement:
                  id: 79221381
                  basic_html_view: |
                    <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                      <tbody>
                        <tr id="billing_statement_logo">
                          <td colspan="2" id="billing_statement_logo_cell">
                            <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                          </td>
                        </tr>
                        <tr id="billing_statement_masthead">
                          <td id="billing_statement_merchant_information">
                            <div id="billing_statement_merchant_name">My Awesome Company</div>
                            <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                          </td>
                          <td id="billing_statement_information">
                            <div id="billing_statement_title"> (79221381)</div>
                            <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_account_information">
                            <h2 class="billing_statement_section_title">Account Information</h2>
                            <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                          </td>
                          <td id="billing_statement_summary">
                            <h2 class="billing_statement_section_title"> Summary</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_detail" colspan="2">
                            <h2 class="billing_statement_section_title"> Detail</h2>
                            <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td id="billing_statement_period_activity" colspan="2">
                            <h2 class="billing_statement_section_title">Period Activity</h2>
                            <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                          </td>
                        </tr>
                        <tr>
                          <td  colspan="2">
                            <p>We thank you for your continued business!</p>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  closed_at: '2016-10-24T16:21:13-04:00'
                  created_at: '2016-10-24T16:21:12-04:00'
                  customer_billing_address: 123 Anywhere Street
                  customer_billing_address_2: ''
                  customer_billing_city: Anywhere
                  customer_billing_country: US
                  customer_billing_state: MA
                  customer_billing_zip: '02120'
                  customer_first_name: Amelia
                  customer_last_name: Example
                  customer_organization: ''
                  customer_shipping_address: 123 Anywhere Street
                  customer_shipping_address_2: ''
                  customer_shipping_city: Anywhere
                  customer_shipping_country: US
                  customer_shipping_state: MA
                  customer_shipping_zip: '02120'
                  ending_balance_in_cents: 0
                  future_payments: []
                  html_view: |
                    <div id="billing_statement">
                      <div id="billing_statement_account_information_section" class="billing_statement_section">
                        <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                        <div class="billing_statement_section_content vcard">
                      <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                      <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                      <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                      <div id="billing_statement_shipping_address" class="adr">
                        <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                        <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_shipping_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                      </div>

                      <div id="billing_statement_billing_address" class="adr">
                        <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                        <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                        <div id="billing_statement_billing_address_locality_region_postal_code">
                          <span class="locality">Anywhere</span>,
                          <abbr class="region">MA</abbr>
                          <span class="postal-code">02120</span>
                        </div>
                        <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                      </div>
                      
                    </div>

                      </div>

                      <div id="billing_statement_summary_section" class="billing_statement_section">
                        <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_summary_statement_date">
                        <span class="billing_statement_summary_label"> Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
                      </div>
                      <div id="billing_statement_summary_usage_period">
                        <span class="billing_statement_summary_label">Billing Date:</span>
                        <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
                      </div>

                      <div id="billing_statement_summary_balance_summary">
                        <div id="billing_statement_summary_starting_balance">
                          <span class="billing_statement_summary_label">Starting Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                        <div id="billing_statement_summary_current_charges">
                          <span class="billing_statement_summary_label">Current Charges:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_current_payments_and_credits">
                          <span class="billing_statement_summary_label">Payments:</span>
                          <span class="billing_statement_summary_value">$42.50</span>
                        </div>
                        <div id="billing_statement_summary_balance_due">
                          <span class="billing_statement_summary_label">Ending Balance:</span>
                          <span class="billing_statement_summary_value">$0.00</span>
                        </div>
                      </div>

                      <div id="billing_statement_summary_balance_paid">
                        <div id="billing_statement_summary_balance_paid_date">
                          <span class="billing_statement_summary_label">Balance Paid:</span>
                          <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                        </div>
                          <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                            PAID
                          </div>
                      </div>
                    </div>

                      </div>

                      <div id="billing_statement_detail_section" class="billing_statement_section">
                        <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                        <div class="billing_statement_section_content">
                      <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                        <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Charge</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Recurring</td>
                              <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                              <td class="billing_statement_listing_cell_money">$40.00</td>
                            </tr>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>Tax</td>
                              <td>MA Tax (6.25%)</td>
                              <td class="billing_statement_listing_cell_money">$2.50</td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>

                      <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                        <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                        <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                          <thead>
                            <tr>
                              <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                              <th class="billing_statement_listing_cell_type">Type</th>
                              <th class="billing_statement_listing_cell_detail">Detail</th>
                              <th class="billing_statement_listing_cell_money">Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                              <td>CC Payment</td>
                              <td>
                                <div>Amelia Example - Basic Plan: Renewal payment</div>
                                XXXX-XXXX-XXXX-1 bogus (01/2026)
                              </td>
                              <td class="billing_statement_listing_cell_money">
                                $42.50
                              </td>
                            </tr>
                            <tr class="billing_statement_listing_tfoot">
                              <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                              <td class="billing_statement_listing_cell_money">$42.50</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>


                    </div>

                      </div>

                      <div id="billing_statement_period_activity_section" class="billing_statement_section">
                        <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                        <div class="billing_statement_section_content">
                      <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_event">Event</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription State Change</td>
                            <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Subscription Product Change</td>
                            <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Billing Date Change</td>
                            <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Renewal Success</td>
                            <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                          <tr>
                            <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                            <td>Payment Success</td>
                            <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                      </div>
                      <div>
                        <p>We thank you for your continued business!</p>
                      </div>
                    </div>
                  memo: We thank you for your continued business!
                  opened_at: '2016-10-24T16:20:14-04:00'
                  settled_at: '2016-10-24T16:21:13-04:00'
                  starting_balance_in_cents: 0
                  subscription_id: 14900541
                  text_view: |
                    My Awesome Company                                                    (79221381)
                    billing@example.com                                   Acme Projects - Basic Plan
                    ================================================================================

                    --------
                     Summary
                    --------

                     ID......: 79221381
                     Date....: 10/24/2016
                    Billing Date......: 10/24/2016

                    Starting Balance..:  $0.00
                    Current Charges...: $42.50
                    Payments..........: $42.50
                    Ending Balance....:  $0.00

                    Balance Paid......: 10/24/2016 04:21PM EDT

                    -------------------
                    Account Information
                    -------------------

                    Amelia Example
                    amelia@example.com
                    555-555-1212

                    ### Shipping Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US

                    ### Billing Address
                    123 Anywhere Street
                    Anywhere, MA 02120
                    US


                    -------
                     Detail
                    -------

                    ### Current Charges and Adjustments

                    Date/Time     Type   Detail                                              Charges
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
                    ............  .....  ...............................................  ..........
                    10/24/2016
                    04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50

                    ### Payments

                    Date/Time     Type   Detail                                               Amount
                    ............  .....  ...............................................  ..........
                    10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
                    04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
                    ............  .....  ...............................................  ..........
                                                                                 Totals:      $42.50


                    ---------------
                    Period Activity
                    ---------------

                    Date/Time     Event/Details                                                     
                    ............  ..................................................................
                    10/24/2016    Subscription State Change                                         
                    04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                                  trialing to active                                                
                    ............  ..................................................................
                    10/24/2016    Subscription Product Change                                       
                    04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                                  ct' to 'Basic Plan'                                               
                    ............  ..................................................................
                    10/24/2016    Billing Date Change                                               
                    04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                                  n from 10/31/2016 to 10/24/2016                                   
                    ............  ..................................................................
                    10/24/2016    Renewal Success                                                   
                    04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
                    ............  ..................................................................
                    10/24/2016    Payment Success                                                   
                    04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                                  Basic Plan                                                        
                    ............  ..................................................................

                    We thank you for your continued business!
                  updated_at: '2016-10-24T16:21:13-04:00'
                  total_in_cents: 4250
                  transactions:
                    - id: 159424439
                      subscription_id: 14900541
                      type: Charge
                      kind: baseline
                      transaction_type: charge
                      success: true
                      amount_in_cents: 4000
                      memo: Basic Plan (10/24/2016 - 11/24/2016)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: 4000
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: 4000
                      taxations:
                        - tax_id: null
                          tax_charge_id: 159424444
                          tax_name: MA Tax
                          rate: '0.0625'
                          tax_amount_in_cents: 250
                          tax_rules:
                            - tax_rule_id: null
                              country_code: US
                              subdivision_code: MA
                              rate: '0.0625'
                              tax_amount_in_cents: 250
                              description: MA STATE TAX - MASSACHUSETTS
                    - id: 159424444
                      subscription_id: 14900541
                      type: Charge
                      kind: tax
                      transaction_type: charge
                      success: true
                      amount_in_cents: 250
                      memo: MA Tax (6.25%)
                      created_at: '2016-10-24T16:21:12-04:00'
                      starting_balance_in_cents: 4000
                      ending_balance_in_cents: 4250
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: 159424449
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      original_amount_in_cents: null
                      discount_amount_in_cents: null
                      taxable_amount_in_cents: null
                      taxations: []
                    - id: 159424449
                      subscription_id: 14900541
                      type: Payment
                      kind: null
                      transaction_type: payment
                      success: true
                      amount_in_cents: 4250
                      memo: 'Amelia Example - Basic Plan: Renewal payment'
                      created_at: '2016-10-24T16:21:13-04:00'
                      starting_balance_in_cents: 4250
                      ending_balance_in_cents: 0
                      gateway_used: bogus
                      gateway_transaction_id: '53433'
                      gateway_order_id: null
                      payment_id: null
                      product_id: 3792003
                      tax_id: null
                      component_id: null
                      statement_id: 79221381
                      customer_id: 14399371
                      card_number: XXXX-XXXX-XXXX-1
                      card_expiration: 01/2026
                      card_type: bogus
                      refunded_amount_in_cents: 0
                  events:
                    - event:
                        id: 342036536
                        key: subscription_state_change
                        message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_subscription_state: trialing
                          new_subscription_state: active
                    - event:
                        id: 342036540
                        key: subscription_product_change
                        message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:20:43-04:00'
                        event_specific_data:
                          previous_product_id: 3861800
                          new_product_id: 3792003
                    - event:
                        id: 342037380
                        key: billing_date_change
                        message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:11-04:00'
                        event_specific_data: null
                    - event:
                        id: 342037470
                        key: renewal_success
                        message: Successful renewal for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
                    - event:
                        id: 342037482
                        key: payment_success
                        message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                        subscription_id: 14900541
                        created_at: '2016-10-24T16:21:14-04:00'
                        event_specific_data:
                          product_id: 3792003
                          account_transaction_id: 159424449
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statementsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/statements/{statement_id}.json':
    parameters:
      - name: statement_id
        in: path
        description: ''
        required: true
        type: number
    get:
      operationId: GET_statements-statement_id-format
      summary: Read by Statement ID
      tags:
        - Statement
        - incomplete
        - Statements
      description: |-
        ## Read/Show by Chargify ID

        This method will return all of the Statement attribute fields. All of these attributes are read only.

        ## PDF Versions of Statements

        Individual PDF Statements can be retrieved by using the Accept/Content-Type header application/pdf or appending .pdf as the `<format>` portion of the URL: `/statements/1.pdf`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/read-show-by-chargify-id'
          examples:
            application/json:
              statement:
                id: 79221109
                basic_html_view: |
                  <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
                    <tbody>
                      <tr id="billing_statement_logo">
                        <td colspan="2" id="billing_statement_logo_cell">
                          <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                        </td>
                      </tr>
                      <tr id="billing_statement_masthead">
                        <td id="billing_statement_merchant_information">
                          <div id="billing_statement_merchant_name">My Awesome Company</div>
                          <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                        </td>
                        <td id="billing_statement_information">
                          <div id="billing_statement_title"> (79221109)</div>
                          <div id="billing_statement_product">Acme Projects - Trial Product</div>
                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_account_information">
                          <h2 class="billing_statement_section_title">Account Information</h2>
                          <div class="billing_statement_section_content vcard">
                    <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                    <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                    <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                    <div id="billing_statement_shipping_address" class="adr">
                      <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                      <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_shipping_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                    </div>

                    <div id="billing_statement_billing_address" class="adr">
                      <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                      <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_billing_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                    </div>
                    
                  </div>

                        </td>
                        <td id="billing_statement_summary">
                          <h2 class="billing_statement_section_title"> Summary</h2>
                          <div class="billing_statement_section_content">
                    <div id="billing_statement_summary_statement_date">
                      <span class="billing_statement_summary_label"> Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                    </div>
                    <div id="billing_statement_summary_usage_period">
                      <span class="billing_statement_summary_label">Billing Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                    </div>

                    <div id="billing_statement_summary_balance_summary">
                      <div id="billing_statement_summary_starting_balance">
                        <span class="billing_statement_summary_label">Starting Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_charges">
                        <span class="billing_statement_summary_label">Current Charges:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_payments_and_credits">
                        <span class="billing_statement_summary_label">Payments:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_balance_due">
                        <span class="billing_statement_summary_label">Ending Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                    </div>

                    <div id="billing_statement_summary_balance_paid">
                      <div id="billing_statement_summary_balance_paid_date">
                        <span class="billing_statement_summary_label">Balance Paid:</span>
                        <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                      </div>
                        <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                          PAID
                        </div>
                    </div>
                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_detail" colspan="2">
                          <h2 class="billing_statement_section_title"> Detail</h2>
                          <div class="billing_statement_section_content">
                    <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                      <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Charge</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Recurring</td>
                            <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                    <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                      <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Amount</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr class="billing_statement_listing_empty_results_row">
                            <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>


                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td id="billing_statement_period_activity" colspan="2">
                          <h2 class="billing_statement_section_title">Period Activity</h2>
                          <div class="billing_statement_section_content">
                    <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                      <thead>
                        <tr>
                          <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                          <th class="billing_statement_listing_cell_event">Event</th>
                          <th class="billing_statement_listing_cell_detail">Detail</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                          <td>Signup Success</td>
                          <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                        </tr>
                      </tbody>
                    </table>
                  </div>

                        </td>
                      </tr>
                      <tr>
                        <td  colspan="2">
                          <p>We thank you for your continued business!</p>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                closed_at: '2016-10-24T16:20:13-04:00'
                created_at: '2016-10-24T16:20:12-04:00'
                customer_billing_address: 123 Anywhere Street
                customer_billing_address_2: ''
                customer_billing_city: Anywhere
                customer_billing_country: US
                customer_billing_state: MA
                customer_billing_zip: '02120'
                customer_first_name: Amelia
                customer_last_name: Example
                customer_organization: ''
                customer_shipping_address: 123 Anywhere Street
                customer_shipping_address_2: ''
                customer_shipping_city: Anywhere
                customer_shipping_country: US
                customer_shipping_state: MA
                customer_shipping_zip: '02120'
                ending_balance_in_cents: 0
                future_payments: []
                html_view: |
                  <div id="billing_statement">
                    <div id="billing_statement_account_information_section" class="billing_statement_section">
                      <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                      <div class="billing_statement_section_content vcard">
                    <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
                    <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
                    <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

                    <div id="billing_statement_shipping_address" class="adr">
                      <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                      <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_shipping_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
                    </div>

                    <div id="billing_statement_billing_address" class="adr">
                      <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                      <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                      <div id="billing_statement_billing_address_locality_region_postal_code">
                        <span class="locality">Anywhere</span>,
                        <abbr class="region">MA</abbr>
                        <span class="postal-code">02120</span>
                      </div>
                      <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
                    </div>
                    
                  </div>

                    </div>

                    <div id="billing_statement_summary_section" class="billing_statement_section">
                      <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                      <div class="billing_statement_section_content">
                    <div id="billing_statement_summary_statement_date">
                      <span class="billing_statement_summary_label"> Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
                    </div>
                    <div id="billing_statement_summary_usage_period">
                      <span class="billing_statement_summary_label">Billing Date:</span>
                      <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
                    </div>

                    <div id="billing_statement_summary_balance_summary">
                      <div id="billing_statement_summary_starting_balance">
                        <span class="billing_statement_summary_label">Starting Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_charges">
                        <span class="billing_statement_summary_label">Current Charges:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_current_payments_and_credits">
                        <span class="billing_statement_summary_label">Payments:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                      <div id="billing_statement_summary_balance_due">
                        <span class="billing_statement_summary_label">Ending Balance:</span>
                        <span class="billing_statement_summary_value">$0.00</span>
                      </div>
                    </div>

                    <div id="billing_statement_summary_balance_paid">
                      <div id="billing_statement_summary_balance_paid_date">
                        <span class="billing_statement_summary_label">Balance Paid:</span>
                        <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                      </div>
                        <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                          PAID
                        </div>
                    </div>
                  </div>

                    </div>

                    <div id="billing_statement_detail_section" class="billing_statement_section">
                      <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                      <div class="billing_statement_section_content">
                    <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                      <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Charge</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                            <td>Recurring</td>
                            <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>

                    <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                      <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                      <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                        <thead>
                          <tr>
                            <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                            <th class="billing_statement_listing_cell_type">Type</th>
                            <th class="billing_statement_listing_cell_detail">Detail</th>
                            <th class="billing_statement_listing_cell_money">Amount</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr class="billing_statement_listing_empty_results_row">
                            <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                          </tr>
                          <tr class="billing_statement_listing_tfoot">
                            <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                            <td class="billing_statement_listing_cell_money">$0.00</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>


                  </div>

                    </div>

                    <div id="billing_statement_period_activity_section" class="billing_statement_section">
                      <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                      <div class="billing_statement_section_content">
                    <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                      <thead>
                        <tr>
                          <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                          <th class="billing_statement_listing_cell_event">Event</th>
                          <th class="billing_statement_listing_cell_detail">Detail</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                          <td>Signup Success</td>
                          <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                        </tr>
                      </tbody>
                    </table>
                  </div>

                    </div>
                    <div>
                      <p>We thank you for your continued business!</p>
                    </div>
                  </div>
                memo: We thank you for your continued business!
                opened_at: '2016-10-24T16:20:12-04:00'
                settled_at: '2016-10-24T16:20:13-04:00'
                starting_balance_in_cents: 0
                subscription_id: 14900541
                text_view: |
                  My Awesome Company                                                    (79221109)
                  billing@example.com                                Acme Projects - Trial Product
                  ================================================================================

                  --------
                   Summary
                  --------

                   ID......: 79221109
                   Date....: 10/24/2016
                  Billing Date......: 10/24/2016

                  Starting Balance..: $0.00
                  Current Charges...: $0.00
                  Payments..........: $0.00
                  Ending Balance....: $0.00

                  Balance Paid......: 10/24/2016 04:20PM EDT

                  -------------------
                  Account Information
                  -------------------

                  Amelia Example
                  amelia@example.com
                  555-555-1212

                  ### Shipping Address
                  123 Anywhere Street
                  Anywhere, MA 02120
                  US

                  ### Billing Address
                  123 Anywhere Street
                  Anywhere, MA 02120
                  US


                  -------
                   Detail
                  -------

                  ### Current Charges and Adjustments

                  Date/Time     Type   Detail                                              Charges
                  ............  .....  ...............................................  ..........
                  10/24/2016
                  04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
                  ............  .....  ...............................................  ..........
                                                                               Totals:       $0.00

                  ### Payments

                  No payments this period


                  ---------------
                  Period Activity
                  ---------------

                  Date/Time     Event/Details                                                     
                  ............  ..................................................................
                  10/24/2016    Signup Success                                                    
                  04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                                ct                                                                
                  ............  ..................................................................

                  We thank you for your continued business!
                updated_at: '2016-10-24T16:20:13-04:00'
                total_in_cents: 0
                transactions:
                  - id: 159423810
                    subscription_id: 14900541
                    type: Charge
                    kind: trial
                    transaction_type: charge
                    success: true
                    amount_in_cents: 0
                    memo: Trial Price (10/24/2016 - 10/31/2016)
                    created_at: '2016-10-24T16:20:12-04:00'
                    starting_balance_in_cents: 0
                    ending_balance_in_cents: 0
                    gateway_used: null
                    gateway_transaction_id: null
                    gateway_order_id: null
                    payment_id: null
                    product_id: 3861800
                    tax_id: null
                    component_id: null
                    statement_id: 79221109
                    customer_id: 14399371
                    item_name: Trial Price
                    original_amount_in_cents: null
                    discount_amount_in_cents: null
                    taxable_amount_in_cents: null
                    taxations: []
                events:
                  - event:
                      id: 342036408
                      key: signup_success
                      message: Successful signup for Amelia Example's subscription to Trial Product
                      subscription_id: 14900541
                      created_at: '2016-10-24T16:20:13-04:00'
                      event_specific_data:
                        product_id: 3861800
                        account_transaction_id: null
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements-statement_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /statements/count.json:
    get:
      operationId: GET_statements_count-format
      summary: Read the Count of Statements for a Site
      tags:
        - Transaction
        - incomplete
        - Statements
      description: |-
        ## Read the Count of Statements for a Site

        This method will return the total number of statements belonging to a site. You can use this number to formulate the pagination portion of the query string when retrieving [Statement IDs](#endpoint:EABo2azFF2x9hCF7b) for a Site.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/statements/count-statements-response'
          examples:
            application/json:
              count: 129
        '404':
          description: Not Found
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_statements_count-format
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          statusCode: 200
  /stats.json:
    get:
      operationId: GET_stats-json
      summary: Read Stats for a Site
      tags:
        - Stats
        - incomplete
      description: |-
        ## Read Stats

        The output of the stats endpoint will provide some useful data about your site:

        | seller_name   | Name of the Merchant               |
        |---------------|------------------------------------|
        | site_name     | Given name of Site within Chargify |
        | site_id       | ID of site                         |
        | site_currency | Current currency of Site           |

        Additionally, there will a set of fluctuating statistics regarding the Site within the `stats` object:

        | total_subscriptions | Total number of ALL subscribers on the Site                     |
        |---------------------|-----------------------------------------------------------------|
        | subscriptions_today | Total number of new subscribers on the day the request was sent |
        | total_revenue       | Total revenue for the Site                                      |
        | revenue_today       | Total revenue received today                                    |
        | revenue_this_month  | Revenue received this month                                     |
        | revenue_this_year   | Revenue received this year                                      |
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/stats/read-stats-output'
          examples:
            application/json:
              seller_name: 'Acme, Inc.'
              site_name: Production
              site_id: 12345
              site_currency: USD
              stats:
                total_subscriptions: 120
                subscriptions_today: 4
                total_revenue: '$45,978.81'
                revenue_today: '$1,405.12'
                revenue_this_month: '$10,000.00'
                revenue_this_year: '$27,935.24'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_stats-json
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-format
      summary: Read Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: '## Read a Subscription'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              subscription:
                $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 21000969
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-02-27T14:13:30-06:00'
                created_at: '2018-02-27T14:13:30-06:00'
                updated_at: '2018-02-27T14:13:30-06:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2018-03-27T15:13:30-05:00'
                next_assessment_at: '2018-03-27T15:13:30-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-02-27T14:13:30-06:00'
                previous_state: active
                signup_payment_id: 228415132
                signup_revenue: '1000.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 100000
                product_price_in_cents: 100000
                product_version_number: 1
                payment_type: credit_card
                referral_code: kszx2g
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                coupon_codes: []
                customer:
                  id: 20613561
                  first_name: Alysa
                  last_name: Test
                  organization: null
                  email: alysa@example.com
                  created_at: '2018-02-27T14:13:30-06:00'
                  updated_at: '2018-02-27T14:13:31-06:00'
                  reference: null
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: '2018-02-27T14:13:31-06:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2018-02-27T14:13:31-06:00'
                  cc_emails: null
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2017-11-07T09:20:12-06:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
                    - id: 335926
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
                credit_card:
                  id: 14345100
                  first_name: Alysa
                  last_name: Test
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 10
                  expiration_year: 2020
                  customer_id: 20613561
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: null
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-format
      summary: 'Update Subscription: Cancel Delayed Product Change'
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Update Subscription: Cancel Delayed Product Change

        To cancel a delayed product change, set `next_product_id` to an empty string:

        ```
        {
          "subscription": {    
            "next_product_id": ""  
          }
        }
        ```
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/update-subscription-cancel-delayed-product-change-request'
            example:
              subscription:
                next_product_id: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 21607180
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-04-20T14:20:57-05:00'
                created_at: '2018-04-20T14:20:57-05:00'
                updated_at: '2018-05-11T13:31:48-05:00'
                expires_at: null
                balance_in_cents: 49000
                current_period_ends_at: '2018-05-12T11:33:03-05:00'
                next_assessment_at: '2018-05-12T11:33:03-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: invoice
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-05-11T11:33:03-05:00'
                previous_state: active
                signup_payment_id: 237154761
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: COUPONB
                total_revenue_in_cents: 52762
                product_price_in_cents: 100000
                product_version_number: 2
                payment_type: credit_card
                referral_code: x45nc8
                coupon_use_count: 0
                coupon_uses_allowed: 1
                reason_code: null
                automatically_resume_at: null
                coupon_codes:
                  - COUPONB
                customer:
                  id: 21259051
                  first_name: K
                  last_name: c
                  organization: ''
                  email: example+nownownownow@chargify.com
                  created_at: '2018-04-20T14:20:57-05:00'
                  updated_at: '2018-04-23T15:29:28-05:00'
                  reference: null
                  address: ''
                  address_2: ''
                  city: ''
                  state: ''
                  zip: ''
                  country: ''
                  phone: ''
                  portal_invite_last_sent_at: '2018-04-20T14:20:59-05:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2018-04-20T14:20:59-05:00'
                  cc_emails: ''
                  tax_exempt: false
                product:
                  id: 4581816
                  name: Basic
                  handle: basic
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-11-02T15:00:11-05:00'
                  updated_at: '2018-04-10T09:02:59-05:00'
                  price_in_cents: 100000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 100000
                  trial_price_in_cents: 1000
                  trial_interval: 10
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 2
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Stack Overflow for Teams
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 333589
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
                    - id: 335926
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
                    - id: 345555
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic'
                    - id: 345556
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic'
                credit_card:
                  id: 14839830
                  first_name: K
                  last_name: C
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2028
                  customer_id: 21259051
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: '99999'
                  billing_country: null
                  customer_vault_token: null
                  billing_address_2: null
                  payment_type: credit_card
        '422':
          description: Unprocessable Entity
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
    delete:
      operationId: DELETE_subscriptions-subscription_id-format
      summary: Cancel Subscription
      tags:
        - Subscription
        - incomplete
        - 'Subscriptions: Cancellations'
      description: "## Cancel Subscription\n\nThe DELETE action causes the cancellation of the Subscription. This means, the method sets the Subscription state to \"canceled\".\n\nThere are no required parameters. Optionally, you can use the `cancellation_message` field to note the reason for cancellation. `cancellation_message` note will be stored with the Subscription.\n\nThe response returns the Subscription object with the canceled state: `\"state\": \"canceled\",` or `<state>canceled</state>`. The `canceled_at` field records the timestamp of the most recent cancellation.\n\n## Cancel Subscription \n\nAdd the following key/value pairs to the DELETE request when cancelling a subscription.\n\n| cancellation_message | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about the reason for cancellation.       |\n|----------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| reason_code          | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to indicate why a subscription was canceled.            |\n\n## Cancel Subscription with Reason Code\n\nIf you'd like to cancel a subscription and add a reason/churn code, use the following JSON:\n\n```\n{\n\t\"subscription\": {\n\t\t\"reason_code\": \"CODE\"\n\t}\n}\n```"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 15254809
                state: canceled
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2016-11-15T15:33:44-05:00'
                created_at: '2016-11-15T15:33:44-05:00'
                updated_at: '2016-11-15T17:13:06-05:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2017-08-29T12:00:00-04:00'
                next_assessment_at: '2017-08-29T12:00:00-04:00'
                canceled_at: '2016-11-15T17:13:06-05:00'
                cancellation_message: Canceling the subscription via the API
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: merchant_api
                current_period_started_at: '2016-11-15T15:33:44-05:00'
                previous_state: active
                signup_payment_id: 0
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 1000
                product_version_number: 7
                payment_type: credit_card
                referral_code: tg8qbq
                coupon_use_count: null
                coupon_uses_allowed: null
                customer:
                  id: 14731081
                  first_name: John
                  last_name: Doe
                  organization: Acme Widgets
                  email: john.doe@example.com
                  created_at: '2016-11-15T15:33:44-05:00'
                  updated_at: '2016-11-15T15:33:45-05:00'
                  reference: '123'
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: null
                  portal_invite_last_sent_at: '2016-11-15T15:33:45-05:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2016-11-15T15:33:45-05:00'
                  cc_emails: null
                product:
                  id: 3792003
                  name: $10 Basic Plan
                  handle: basic
                  description: lorem ipsum
                  accounting_code: basic
                  request_credit_card: false
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-03-24T13:38:39-04:00'
                  updated_at: '2016-11-03T13:03:05-04:00'
                  price_in_cents: 1000
                  interval: 1
                  interval_unit: day
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 7
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 281054
                      return_url: 'http://www.example.com?successfulsignup'
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
                    - id: 281240
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
                    - id: 282694
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
                credit_card:
                  id: 10202898
                  first_name: John
                  last_name: Doe
                  masked_card_number: XXXX-XXXX-XXXX-1111
                  card_type: visa
                  expiration_month: 12
                  expiration_year: 2020
                  customer_id: 14731081
                  current_vault: authorizenet
                  vault_token: '12345'
                  billing_address: null
                  billing_city: null
                  billing_state: null
                  billing_zip: null
                  billing_country: null
                  customer_vault_token: '67890'
                  billing_address_2: null
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/reactivate.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-reactivate-format
      summary: Reactivate Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Reactivate a Subscription

        Chargify offers the ability to reactivate a previously canceled Subscription. For details on how the reactivation works, and how to reactivate Subscriptions through the Admin Interface, see [Reactivation](https://docs.chargify.com/reactivation).

        + The response returns the Subscription object in the active state. 
        + The `canceled_at` and `cancellation_message` fields do not have values.
        + The method works for canceled Subscriptions. 
        + It will not work for items not marked as "Canceled", "Unpaid", or "Trial Ended".

        ## Optional Parameters

        | include_trial    | Boolean, default `0`. If 1 is sent the reactivated subscription will include a trial if one is available. If `0` is sent, the trial period will be ignored. This parameter should be sent in a query string, and does not need to be nested inside a subscription object |
        |------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | preserve_balance | Boolean, default ‘0’. If ‘1’ is passed, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.                                                                                                                   |
        | coupon_code      | The coupon code to be applied during reactivation.                                                                                                                                                                                                                       |

        ## Reactivation Scenarios

        ## Reactivating a canceled subscription with an invalid payment profile

        + Given you have a canceled subscription with ID "1000"
        + The subscription has an invalid payment profile
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        The response status should be "422 Unprocessable Entity"
        + The subscription should be canceled with the following response
        ```
              {
              "errors": ["The credit card on file could not be charged."]
              }
        ```
         ## Attempting to reactivate an already active subscription
        + Given you have an active subscription with ID "1000"
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        The response status should be "422 Unprocessable Entity"
        + The subscription should be active with the following JSON response

        ```
              {
              "errors": ["Cannot reactivate a subscription that is not marked \"Canceled\", \"Unpaid\", or \"Trial Ended\"."]
              }
         ```
         
        ## Reactivating a canceled subscription while preserving the balance

        + Given you have a product with ID "2002" that costs $19
        + You have a canceled subscription with ID "1000" to a product with ID "2002"
            + 1 charge should exist for $19
            + 1 payment should exist for $19
        + When the subscription has a negative balance of "19"
        A PUT request is sent to `https://acme.chargify.com/subscriptions/1000/reactivate.json?preserve_balance=1`

        + Then the response status should be "200 OK"

        And the resulting charges will be: 
        + 2 charges for $19
        + 1 payments should exist for $19
        + The subscription should be active
        + The subscription balance should be zero

        ## Reactivating a canceled subscription with a coupon
        + Given you have a canceled subscription with ID "1000"
        + It has no current period defined
        + You have a coupon named "Early Bird"
        + The coupon is set to recur for 6 periods
        + The coupon code is "EARLYBIRD"
        + Send a PUT request to 

        `https://acme.chargify.com/subscriptions/1000/reactivate.json?coupon_code=EARLYBIRD`

        + The response status should be "200 OK"
        + The subscription should be active
        + The subscription should have applied a coupon with code "EARLYBIRD"

        ## Reactivating a canceled subscription with a trial, without the include_trial flag

        + Given you have a canceled subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to 
        `https://acme.chargify.com/subscriptions/1000/reactivate.json`
        + The response status should be "200 OK"
        + The subscription should be active
          
        ## Reactivating a canceled subscription with a trial, with the include_trial flag

        + Given you have a canceled subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json?include_trial=1`

        + The response status should be "200 OK"
        + The subscription should be trialing

        ## Reactivating a trial ended subscription

        + Given you have a trial_ended subscription with ID "1000"
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json`
        + The response status should be "200 OK"
        + The subscription should be active

        ## Reactivating a trial ended subscription, without the include_trial flag

        + Given you have a trial_ended subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json`

        + The response status should be "200 OK"
        + The subscription should be active
          
        ## Reactivating a trial ended subscription, with the include_trial flag

        + Given you have a trial_ended subscription with ID "1000"
        + The product associated with the subscription has a trial
        + Send a PUT request to `https://acme.chargify.com/subscriptions/1000/reactivate.json?include_trial=1`
        + The response status should be "200 OK"
        + The subscription should be trialing
      parameters:
        - name: include_trial
          in: query
          description: 'Boolean, default 0. If "1" is sent, the reactivated Subscription will include a trial if one is available. If 0 is sent, the trial period will be ignored. This parameter should be sent in a query string, and does not need to be nested inside a Subscription object.'
          required: false
          type: boolean
        - name: preserve_balance
          in: query
          description: 'Boolean, default ‘0’. If ‘1’ is passed, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.'
          required: false
          type: boolean
        - name: coupon_code
          in: query
          description: The coupon code to be applied during reactivation.
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: Unprocessable Entity
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - The credit card on file could not be charged.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-reactivate-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/retry.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-retry-format
      summary: Retry Subscription
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Retry a Subscription

        Chargify offers the ability to retry collecting the balance due on a past due Subscription without waiting for the next scheduled attempt.

        ## Successful Reactivation

        The response will be `200 OK` with the updated Subscription.

        ## Failed Reactivation

        The response will be `422 "Unprocessable Entity`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
          examples:
            application/json:
              errors: []
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-retry-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/reset_balance.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-reset_balance-xml
      summary: Reset Subscription Balance
      tags:
        - Subscription
        - incomplete
        - Subscriptions
      description: |-
        ## Reset a Subscription Balance

        Chargify offers the ability to easily reset the balance of a Subscription to zero.

        If a Subscription has a positive balance, this API call will issue a credit to the Subscription for the outstanding balance.

        This is particularly helpful if you want to reactivate a canceled Subscription without charging the Customer for their previously owed balance.

        ## Past Due & Unpaid Subscriptions

        If you have a subscription that is in the `past_due` or `unpaid` state, when you reset the balance, the subscription will transition to `active`.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-reset_balance-xml
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/delayed_cancel.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-delayed_cancel-json
      summary: 'Cancel Subscription: Delayed Method'
      tags:
        - 'Subscriptions: Cancellations'
      description: "## Delayed Cancel\nChargify offers the ability to cancel a subscription at the end of the current billing period. This period is set by its current product.\n\nRequesting to cancel the subscription at the end of the period sets the `cancel_at_end_of_period` flag to true.\n\nNote that you cannot set `cancel_at_end_of_period` at subscription creation, or if the subscription is past due.\n\n## Delayed Cancel with Reason Code\n\nIf you'd like to cancel a subscription using the delayed cancellation method, and add a reason/churn code, use the following JSON:\n\n```\n{\n\t\"subscription\": {\n\t\t\"cancelation_message\": \"Switching providers\",\n\t\t\"reason_code\": \"CODE\"\n\t}\n}\n```"
      consumes:
        - application/xml
      produces:
        - application/xml
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              subscription:
                $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/xml:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-delayedcanceljson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      operationId: DELETE_subscriptions-subscription_id-delayed_cancel-json
      summary: 'Cancel Subscription: Remove Delayed Method'
      tags:
        - 'Subscriptions: Cancellations'
      description: |-
        ## Remove Delayed Cancel
        Removing the delayed cancellation on a subscription will ensure that it doesn't get canceled at the end of the period that it's on. The request will reset the `cancel_at_end_of_period` flag to `false`.
      consumes:
        - application/xml
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: DELETE_subscriptions-subscriptionid-delayedcanceljson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/charges.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: integer
    post:
      operationId: POST_subscriptions-subscription_id-charges-json
      summary: Create a charge
      tags:
        - 'Subscriptions: Charges'
      description: |-
        ## Create a charge

        Creating a charge requires a valid, live subscription. The subscription must be referenced by `subscription_id` (available via the API when subscriptions are read or listed – more).

        A payment in the amount of the assessed charge is automatically captured from the credit card on file for the subscription.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/charges/create-a-charge-request-post'
            example:
              charge:
                memo: Amount collected
                amount: '10.00'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/charges/create-a-charge-response-post'
          examples:
            application/json:
              charge:
                id: 157750635
                subscription_id: 14593192
                type: Charge
                kind: one_time
                transaction_type: charge
                success: true
                amount_in_cents: 100
                memo: This is the description of the one time charge.
                created_at: '2016-10-11T11:51:45-04:00'
                starting_balance_in_cents: 15000
                ending_balance_in_cents: 15100
                gateway_used: null
                gateway_transaction_id: null
                gateway_order_id: null
                payment_id: 157750636
                product_id: 3861800
                tax_id: null
                component_id: null
                statement_id: 78204384
                customer_id: 14126091
                original_amount_in_cents: null
                discount_amount_in_cents: null
                taxable_amount_in_cents: null
                taxations: []
        '404':
          description: ''
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - 'Memo: cannot be blank.'
                - 'Amount: is not a number.'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-chargesjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/add_coupon.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    post:
      operationId: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
      summary: Add the Coupon to an Existing Subscription
      tags:
        - Coupon
        - incomplete
        - 'Subscriptions: Coupons'
      description: |-
        ## Add the Coupon to an existing Subscription

        If the Coupon is successfully applied, the Subscription object will be returned. Otherwise, the "Coupon is invalid" error will be returned.
        `/subscriptions/9709/add_coupon.json?code=EARLYBIRD`
      parameters:
        - name: code
          in: query
          required: true
          type: string
        - name: body
          in: body
          schema:
            $ref: '#/definitions/coupon/add-the-coupon-newness'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/coupon/add-the-coupon-to-subscription-output'
        '422':
          description: ''
          examples:
            application/json:
              codes:
                - 'Coupon Codes: Subscription already has a non-stackable coupon.'
              subscription:
                - Coupon is invalid.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/remove_coupon.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    delete:
      operationId: DELETE_subscriptions-subscription_id-remove_coupon-format
      summary: Remove the Coupon from the Subscription
      tags:
        - Coupon
        - incomplete
        - 'Subscriptions: Coupons'
      description: |-
        ## Remove the Coupon from the Subscription Response

        If the Coupon is successfully removed, the string will be returned. 

        ```Coupon succesfully removed``` 

        Otherwise, the "422 Unprocessable Entity" error will be returned.

        ## Documentation

        For more information on the expected behaviour of removing a coupon from a subscription, please see our documentation [here.](https://help.chargify.com/subscriptions/coupons.html#removing-a-coupon)
      parameters:
        - name: coupon_code
          in: query
          description: The Coupon code.
          required: true
          type: string
      responses:
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              subscription:
                - There's no coupon applied to this subscription
      x-stoplight:
        id: DELETE_subscriptions-subscription_id-remove_coupon-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/resume.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-resume-json
      summary: Resume Subscription
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Resume Subscription

        Resume a paused (on-hold) subscription.  If the normal next renewal date has not passed, the subscription will return to active and will renew on that date.  Otherwise, it will behave like a reactivation, setting the billing date to 'now' and charging the subscriber.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-resumejson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/hold.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-hold-json
      summary: Hold (Pause) Subscription
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Pause Subscription

        This will place the subscription in the on_hold state and it will not renew.

        ## Limitations

        You may not place a subscription on hold if the `next_billing` date is within 24 hours.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscriptions/hold-subscription-request'
            example:
              hold:
                automatically_resume_at: '2017-05-25T11:25:00Z'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription/read-subscription'
          examples:
            application/json:
              subscription:
                id: 18220670
                state: on-hold
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2017-06-27T13:45:15-05:00'
                created_at: '2017-06-27T13:45:13-05:00'
                updated_at: '2017-06-30T09:26:50-05:00'
                expires_at: null
                balance_in_cents: 10000
                current_period_ends_at: '2017-06-30T12:00:00-05:00'
                next_assessment_at: '2017-06-30T12:00:00-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: end
                cancellation_method: null
                current_period_started_at: '2017-06-27T13:45:13-05:00'
                previous_state: active
                signup_payment_id: 191819284
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 0
                product_price_in_cents: 0
                product_version_number: 1
                payment_type: null
                referral_code: d3pw7f
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: null
                current_billing_amount_in_cents: 10000
                customer:
                  id: 17780587
                  first_name: Catie
                  last_name: Test
                  organization: 'Acme, Inc.'
                  email: catie@example.com
                  created_at: '2017-06-27T13:01:05-05:00'
                  updated_at: '2017-06-30T09:23:10-05:00'
                  reference: 123ABC
                  address: 123 Anywhere Street
                  address_2: 'Apartment #10'
                  city: Los Angeles
                  state: CA
                  zip: '90210'
                  country: US
                  phone: 555-555-5555
                  portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
                  portal_invite_last_accepted_at: null
                  verified: true
                  portal_customer_created_at: '2017-06-27T13:01:08-05:00'
                  cc_emails: support@example.com
                  tax_exempt: true
                product:
                  id: 4470347
                  name: Zero Dollar Product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-03-23T10:54:12-05:00'
                  updated_at: '2017-04-20T15:18:46-05:00'
                  price_in_cents: 0
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 997233
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages:
                    - id: 316810
                      return_url: ''
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - This subscription is not eligible to be put on hold.
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-holdjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      operationId: PUT_subscriptions-subscription_id-hold-json
      summary: Update On-Hold Subscription Attributes
      tags:
        - 'Subscriptions: Hold / Resume'
      description: |-
        ## Update On-Hold Subscription Attributes

        To update a subscription's resume date, use this method to change or update the `automatically_resume_at` date.

        ### Remove the resume date

        Alternately, you can change the `automatically_resume_at` to `null` if you would like the subscription to not have a resume date.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/update-on-hold-subscriptions-input'
            example:
              hold:
                automatically_resume_at: '2019-01-20'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/update-on-hold-subscriptions-output'
          examples:
            application/json:
              subscription:
                id: 20359140
                state: on_hold
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2018-01-05T17:15:50-06:00'
                created_at: '2018-01-05T17:15:49-06:00'
                updated_at: '2018-01-09T10:26:14-06:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2023-01-05T17:15:00-06:00'
                next_assessment_at: '2023-01-05T17:15:00-06:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2018-01-05T17:15:49-06:00'
                previous_state: active
                signup_payment_id: 219829722
                signup_revenue: '100.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 10009991
                product_price_in_cents: 10000
                product_version_number: 1
                payment_type: credit_card
                referral_code: 8y7jqr
                coupon_use_count: null
                coupon_uses_allowed: null
                reason_code: null
                automatically_resume_at: '2019-01-20T00:00:00-06:00'
                coupon_codes: []
                customer:
                  id: 19948683
                  first_name: Vanessa
                  last_name: Test
                  organization: ''
                  email: vanessa@example.com
                  created_at: '2018-01-05T17:15:49-06:00'
                  updated_at: '2018-01-05T17:15:51-06:00'
                  reference: null
                  address: 123 Anywhere Ln
                  address_2: ''
                  city: Boston
                  state: MA
                  zip: '02120'
                  country: US
                  phone: 555-555-1212
                  portal_invite_last_sent_at: '2018-01-05T17:15:51-06:00'
                  portal_invite_last_accepted_at: null
                  verified: null
                  portal_customer_created_at: '2018-01-05T17:15:51-06:00'
                  cc_emails: null
                  tax_exempt: false
                product:
                  id: 4535643
                  name: Annual Product
                  handle: annual-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2017-08-25T10:25:31-05:00'
                  updated_at: '2017-08-25T10:25:31-05:00'
                  price_in_cents: 10000
                  interval: 12
                  interval_unit: month
                  initial_charge_in_cents: null
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: true
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  tax_code: ''
                  initial_charge_after_trial: false
                  version_number: 1
                  update_return_params: ''
                  product_family:
                    id: 1025627
                    name: Acme Products
                    description: ''
                    handle: acme-products
                    accounting_code: null
                  public_signup_pages: []
                credit_card:
                  id: 13826563
                  first_name: Bomb 3
                  last_name: Test
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2028
                  customer_id: 19948683
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: 123 Anywhere Lane
                  billing_city: Boston
                  billing_state: Ma
                  billing_zip: '02120'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: ''
                  payment_type: credit_card
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscriptionid-holdjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /subscriptions/preview.json:
    post:
      operationId: POST_subscriptions-preview-json
      summary: Create Subscription Preview - Component Price Points
      tags:
        - 'Subscriptions: Preview'
      description: |-
        ## Create Subscription Preview with Price Points

        This example **does not** use contact information to create a subscription preview. It's optional, bear in mind!

        If you do not use a `price_point_id` then the default price point will be used to calculate the preview amounts.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscription-preview-price-point-id-request'
            example:
              subscription:
                product_handle: monthly-product
                components:
                  - component_id: 462149
                    price_point_id: 200543
                    allocated_quantity: 10
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subscription-preview-price-points-response'
          examples:
            application/json:
              subscription_preview:
                current_billing_manifest:
                  line_items:
                    - transaction_type: charge
                      kind: baseline
                      amount_in_cents: 5000
                      memo: Monthly product  (02/05/2018 - 03/05/2018)
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                    - transaction_type: charge
                      kind: component
                      amount_in_cents: 20000
                      memo: 'HUNDO: 10 HUNDOs'
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                      component_id: 462149
                  total_in_cents: 25000
                  total_discount_in_cents: 0
                  total_tax_in_cents: 0
                  subtotal_in_cents: 25000
                  start_date: '2018-02-05T19:36:55Z'
                  end_date: '2018-03-05T19:36:55Z'
                  period_type: recurring
                  existing_balance_in_cents: 0
                next_billing_manifest:
                  line_items:
                    - transaction_type: charge
                      kind: baseline
                      amount_in_cents: 5000
                      memo: Monthly product  (03/05/2018 - 04/05/2018)
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                    - transaction_type: charge
                      kind: component
                      amount_in_cents: 20000
                      memo: 'HUNDO: 10 HUNDOs'
                      discount_amount_in_cents: 0
                      taxable_amount_in_cents: 0
                      component_id: 462149
                  total_in_cents: 25000
                  total_discount_in_cents: 0
                  total_tax_in_cents: 0
                  subtotal_in_cents: 25000
                  start_date: '2018-03-05T19:36:55Z'
                  end_date: '2018-04-05T19:36:55Z'
                  period_type: recurring
                  existing_balance_in_cents: 0
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/migrations.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-migrations-json
      summary: Create Migration
      tags:
        - 'Subscriptions: Product Changes / Migrations / Upgrades / Downgrades'
      description: |-
        ## Create Migration

        In order to create a migration, you must pass the `product_id` or `product_handle` in the object when you send a POST request.

        The response will be the updated subscription.

        ## Valid Subscriptions

        Subscriptions can only be in the `active` or `trial` mode in order to be migrated.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              migration:
                type: object
                properties:
                  product_id:
                    type: integer
            example:
              migration:
                product_id: 3801242
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/migrations/create-migration-output'
          examples:
            application/json:
              subscription:
                id: 15054201
                state: active
                trial_started_at: null
                trial_ended_at: null
                activated_at: '2016-11-02T10:20:57-04:00'
                created_at: '2016-11-02T10:20:55-04:00'
                updated_at: '2016-11-03T13:31:49-04:00'
                expires_at: null
                balance_in_cents: 0
                current_period_ends_at: '2016-12-03T12:31:49-05:00'
                next_assessment_at: '2016-12-03T12:31:49-05:00'
                canceled_at: null
                cancellation_message: null
                next_product_id: null
                cancel_at_end_of_period: false
                payment_collection_method: automatic
                snap_day: null
                cancellation_method: null
                current_period_started_at: '2016-11-03T13:31:48-04:00'
                previous_state: active
                signup_payment_id: 160680121
                signup_revenue: '0.00'
                delayed_cancel_at: null
                coupon_code: null
                total_revenue_in_cents: 14000
                product_price_in_cents: 10000
                product_version_number: 4
                payment_type: credit_card
                referral_code: ghnhvy
                coupon_use_count: null
                coupon_uses_allowed: null
                customer:
                  id: 14543792
                  first_name: Frankie
                  last_name: Test
                  organization: null
                  email: testfrankie111@test.com
                  created_at: '2016-11-02T10:20:55-04:00'
                  updated_at: '2016-11-02T10:20:58-04:00'
                  reference: null
                  address: null
                  address_2: null
                  city: null
                  state: null
                  zip: null
                  country: null
                  phone: '5555551212'
                  portal_invite_last_sent_at: '2016-11-02T10:20:58-04:00'
                  portal_invite_last_accepted_at: null
                  verified: false
                  portal_customer_created_at: '2016-11-02T10:20:58-04:00'
                  cc_emails: null
                product:
                  id: 3801242
                  name: Free product
                  handle: zero-dollar-product
                  description: ''
                  accounting_code: ''
                  request_credit_card: true
                  expiration_interval: null
                  expiration_interval_unit: never
                  created_at: '2016-04-21T16:08:39-04:00'
                  updated_at: '2016-08-03T11:27:53-04:00'
                  price_in_cents: 10000
                  interval: 1
                  interval_unit: month
                  initial_charge_in_cents: 0
                  trial_price_in_cents: null
                  trial_interval: null
                  trial_interval_unit: month
                  archived_at: null
                  require_credit_card: false
                  return_params: ''
                  taxable: false
                  update_return_url: ''
                  initial_charge_after_trial: false
                  version_number: 4
                  update_return_params: ''
                  product_family:
                    id: 527890
                    name: Acme Projects
                    description: ''
                    handle: billing-plans
                    accounting_code: null
                  public_signup_pages:
                    - id: 283460
                      return_url: null
                      return_params: ''
                      url: 'https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product'
                credit_card:
                  id: 10088716
                  first_name: F
                  last_name: NB
                  masked_card_number: XXXX-XXXX-XXXX-1
                  card_type: bogus
                  expiration_month: 1
                  expiration_year: 2017
                  customer_id: 14543792
                  current_vault: bogus
                  vault_token: '1'
                  billing_address: 123 Montana Way
                  billing_city: Billings
                  billing_state: MT
                  billing_zip: '59101'
                  billing_country: US
                  customer_vault_token: null
                  billing_address_2: Apt. 1
                  payment_type: credit_card
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Invalid Product
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-migrationsjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/migrations/preview.json':
    parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
    post:
      operationId: POST_subscriptions-subscription_id-migrations-preview-json
      summary: Create Preview of Product Migration
      tags:
        - 'Subscriptions: Product Changes / Migrations / Upgrades / Downgrades'
      description: "## Preview Migration\n\nRequired Parameters: `product_id` or `product_handle`\n\nResponse: Calculated migration values:\n\n| prorated_adjustment_in_cents | Integer, The amount of the prorated adjustment that would be issued for the current subscription. |\n|------------------------------|---------------------------------------------------------------------------------------------------|\n| charge_in_cents              | Integer, The amount of the charge that would be created for the new product.                      |\n| payment_due_in_cents         | Integer, The amount of the payment due in the case of an upgrade.                                 |\n| credit_applied_in_cents      | Integer, The amount of the credit that would be left in the case of a                             |\n## Previews and trials\n\nYou may add the option to preview a trial as well by sending\n\n```\n{\n\t\"migration\": {\n\t\t\"product_id\": 3861800\n\t}\n}}\n```"
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/migrations/preview-migration-input'
            example:
              migration:
                product_id: 3861800
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/migrations/preview-migration-output'
          examples:
            application/json:
              migration:
                prorated_adjustment_in_cents: 0
                charge_in_cents: 5000
                payment_due_in_cents: 0
                credit_applied_in_cents: 0
        '422':
          description: ''
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
          examples:
            application/json:
              errors:
                - Subscription must be active
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_subscriptions-subscriptionid-migrations-previewjson
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  '/subscriptions/{subscription_id}/override.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: number
    put:
      operationId: PUT_subscriptions-subscription_id-override-format
      summary: Subscription Override
      tags:
        - Subscription Override
        - 'Subscriptions: Override'
      description: |-
        ## Subscriptions Override Responses

        ### Successful – 204 No Content

        On a successful update, a `204` HTTP response is sent along with no body. You can assume the update was successful, and fetch the subscription again if needed.

        ```
        HTTP/1.1 204 No Content
        Cache-Control: no-cache
        Connection: keep-alive
        Date: Tue, 03 Nov 2015 21:40:48 GMT
        Status: 204 No Content
        ```

        ### Unpermitted Parameters – 400 Bad Request

        If unpermitted parameters are sent, a `400` HTTP response is sent along with a string giving the reason for the problem, e.g.

        ```
        Unpermitted paramters in request: created_at
        ```

        Note: this will be changing to a JSON or XML response in the near future.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/subscriptions/subscription-override-request'
            example:
              subscription:
                activated_at: '1999-12-01'
                canceled_at: '2000-12-31'
                cancellation_message: Original cancellation in 2000
                expires_at: '2001-07-15'
      responses:
        '204':
          description: No Content
          examples:
            application/json:
              subscription:
                activated_at: '1999-12-01'
                canceled_at: '2000-12-31'
                cancellation_message: Original cancellation in 2000
                expires_at: '2001-07-15'
      security:
        - <<api_key>>: []
      x-stoplight:
        id: PUT_subscriptions-subscription_id-override-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /transactions.json:
    get:
      operationId: GET_transactions-format
      summary: Read Transactions for a Site
      tags:
        - Transactions
      description: |-
        ## Read Transactions for a Site

        This method will return the full list of transactions for a Site. Pay close attention to filters and pagination in order to control results.

        **Notes about ID/Date Filters**

        - Using `since_id` and/or `max_id` is known as creating an “ID Filter”.

        - Using `since_date` and/or `until_date` is known as creating a “Date Filter”.

        - You may ONLY make use of either an ID Filter or a Date Filter in any one request.

        - If you specify both an ID Filter and a Date Filter, the Date Filter will be ignored.

        **Pagination Notes**

        Stepping through pages of results by incrementing the page number is typically less performant than using an ID Filter with `since_id`, especially at high values of page.
        For example, instead of these successive requests to traverse pagination:

            GET /transactions.json?page=1&per_page=200
            GET /transactions.json?page=2&per_page=200

        It is usually faster to use `since_id` to continue fetching from the last ID you observed:

            GET /transactions.json?since_id=0&per_page=200&direction=asc
            GET /transactions.json?since_id=1567&per_page=200&direction=asc

        In the above example, 1567 is derived by adding 1 to the “last” ID you received from the first request.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:txnKinds:kinds'
        - $ref: '#/parameters/trait:txnSinceId:since_id'
        - $ref: '#/parameters/trait:txnMaxId:max_id'
        - $ref: '#/parameters/trait:txnSinceDate:since_date'
        - $ref: '#/parameters/trait:txnUntilDate:until_date'
        - $ref: '#/parameters/trait:txnDirection:direction'
        - $ref: '#/parameters/trait:txnOrderBy:order_by'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              - transaction:
                  id: 162640678
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Pookie Test - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162640676
                  subscription_id: 15268319
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 2000
                  memo: 'Pookie Test - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 2000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669162
                  customer_id: 14743895
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
        '404':
          description: ''
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transactions-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/transactions/{transaction_id}.json':
    parameters:
      - name: transaction_id
        in: path
        description: The Transaction ID.
        required: true
        type: string
    get:
      operationId: GET_transaction_id-format
      summary: Read Transaction by ID
      tags:
        - incomplete
        - Transactions
      description: |-
        ## List transaction by ID

        Given that you have a valid transaction ID, you can retrieve its full details.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              transaction:
                id: 237759849
                subscription_id: 21607180
                type: Payment
                kind: one_time
                transaction_type: payment
                success: true
                amount_in_cents: 10000
                memo: 'Payment for: 123'
                created_at: '2018-04-24T16:48:19-05:00'
                starting_balance_in_cents: 10000
                ending_balance_in_cents: 0
                gateway_used: bogus
                gateway_transaction_id: '53433'
                gateway_order_id: null
                payment_id: null
                product_id: 4610619
                tax_id: null
                component_id: null
                statement_id: 113513284
                customer_id: 21259051
                item_name: null
                parent_id: null
                role: null
                card_number: XXXX-XXXX-XXXX-1
                card_expiration: 01/2028
                card_type: bogus
                refunded_amount_in_cents: 0
        '404':
          description: Not Found
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transaction_id-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  '/subscriptions/{subscription_id}/transactions.json':
    parameters:
      - name: subscription_id
        in: path
        description: The Subscription ID.
        required: true
        type: string
    get:
      operationId: GET_subscriptions-subscription_id-transactions-format
      summary: Read Transactions for a Subscription
      tags:
        - incomplete
        - Transactions
      description: |-
        ## List Transactions for a Subscription.

        Given that you have subscriber's ID, you can retrieve a list of transactions associated with the subscription.

        The sort order is based on the `created_at` timestamp and cannot be changed.
      parameters:
        - $ref: '#/parameters/trait:pagination20:page'
        - $ref: '#/parameters/trait:pagination20:per_page'
        - $ref: '#/parameters/trait:txnKinds:kinds'
        - $ref: '#/parameters/trait:txnSinceId:since_id'
        - $ref: '#/parameters/trait:txnMaxId:max_id'
        - $ref: '#/parameters/trait:txnSinceDate:since_date'
        - $ref: '#/parameters/trait:txnUntilDate:until_date'
        - $ref: '#/parameters/trait:txnDirection:direction'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/transactions/transaction-response'
          examples:
            application/json:
              - transaction:
                  id: 162640678
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Amelia Example - $10 Basic Plan: Renewal payment'
                  created_at: '2016-11-17T14:03:14-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162640663
                  subscription_id: 15268262
                  type: Charge
                  kind: baseline
                  transaction_type: charge
                  success: true
                  amount_in_cents: 1000
                  memo: $10 Basic Plan (11/17/2016 - 11/18/2016)
                  created_at: '2016-11-17T14:03:13-05:00'
                  starting_balance_in_cents: 0
                  ending_balance_in_cents: 1000
                  gateway_used: null
                  gateway_transaction_id: null
                  gateway_order_id: null
                  payment_id: 162640678
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80669157
                  customer_id: 14743839
                  item_name: $10 Basic Plan
                  parent_id: null
                  role: null
                  original_amount_in_cents: 1000
                  discount_amount_in_cents: 0
                  taxable_amount_in_cents: null
                  taxations: []
              - transaction:
                  id: 162520504
                  subscription_id: 15268262
                  type: Payment
                  kind: null
                  transaction_type: payment
                  success: true
                  amount_in_cents: 1000
                  memo: 'Amelia Example - $10 Basic Plan: Signup payment'
                  created_at: '2016-11-16T13:47:44-05:00'
                  starting_balance_in_cents: 1000
                  ending_balance_in_cents: 0
                  gateway_used: bogus
                  gateway_transaction_id: '53433'
                  gateway_order_id: null
                  payment_id: null
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80612887
                  customer_id: 14743839
                  item_name: null
                  parent_id: null
                  role: null
                  card_number: XXXX-XXXX-XXXX-1
                  card_expiration: 10/2020
                  card_type: bogus
                  refunded_amount_in_cents: 0
              - transaction:
                  id: 162520501
                  subscription_id: 15268262
                  type: Charge
                  kind: baseline
                  transaction_type: charge
                  success: true
                  amount_in_cents: 1000
                  memo: $10 Basic Plan (11/16/2016 - 11/17/2016)
                  created_at: '2016-11-16T13:47:43-05:00'
                  starting_balance_in_cents: 0
                  ending_balance_in_cents: 1000
                  gateway_used: null
                  gateway_transaction_id: null
                  gateway_order_id: null
                  payment_id: 162520504
                  product_id: 3792003
                  tax_id: null
                  component_id: null
                  statement_id: 80612887
                  customer_id: 14743839
                  item_name: $10 Basic Plan
                  parent_id: null
                  role: null
                  original_amount_in_cents: 1000
                  discount_amount_in_cents: 0
                  taxable_amount_in_cents: null
                  taxations: []
        '404':
          description: OK
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_subscriptions-subscription_id-transactions-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          enabled: false
  /transactions/count.json:
    get:
      operationId: GET_transactions_count-format
      summary: Read the Count of Transactions for a Site
      tags:
        - Transaction
        - incomplete
        - Transactions
      description: |-
        ## Read the Count of Transactions for a Site

        This method returns the full count of transactions associated with a Site.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/count-transactions'
          examples:
            application/json:
              count: 290
        '404':
          description: Not Found
          schema:
            type: object
            description: Transaction does not exist
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_transactions_count-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /webhooks.json:
    get:
      operationId: GET_webhooks-format
      summary: Read Webhooks for a Site
      tags:
        - Webhook
        - incomplete
        - Webhooks
      description: '## List Webhooks for a Site'
      parameters:
        - name: status
          in: query
          description: ''
          required: false
          type: string
          enum:
            - successful
            - failed
            - pending
            - paused
        - name: since_date
          in: query
          description: Format YYYY-MM-DD. Returns Webhooks with the `created_at date` greater than or equal to the one specified.
          required: true
          type: string
        - name: until_date
          in: query
          description: Format YYYY-MM-DD. Returns Webhooks with the `created_at` date less than or equal to the one specified.
          required: true
          type: string
        - name: page
          in: query
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
          required: false
          type: number
        - name: per_page
          in: query
          description: This parameter indicates how many records to fetch in each request.
          required: false
          type: number
        - name: order
          in: query
          description: 'The order in which the Webhooks are retured, either “newest_first” or “oldest_first”'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhooks/list-webhook-output'
          examples:
            application/json:
              - webhook:
                  event: statement_settled
                  id: 141765032
                  created_at: '2016-11-08T16:22:26-05:00'
                  last_error: 404 Resource Not Found (retry 5 of 5)
                  last_error_at: '2016-11-08T16:43:54-05:00'
                  accepted_at: null
                  last_sent_at: '2016-11-08T16:43:54-05:00'
                  last_sent_url: 'http://requestb.in/11u45x71'
                  successful: false
                  body: 'id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384'
                  signature: 7c606ec4628ce75ec46e284097ce163a
                  signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
              - webhook:
                  event: payment_success
                  id: 141765008
                  created_at: '2016-11-08T16:22:25-05:00'
                  last_error: 404 Resource Not Found (retry 5 of 5)
                  last_error_at: '2016-11-08T16:43:54-05:00'
                  accepted_at: null
                  last_sent_at: '2016-11-08T16:43:54-05:00'
                  last_sent_url: 'http://requestb.in/11u45x71'
                  successful: false
                  body: 'id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364'
                  signature: fbcf2f6be579f9658cff90c4373e0ca2
                  signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
      security:
        - <<api_key>>: []
      x-stoplight:
        id: GET_webhooks-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
  /webhooks/replay.json:
    post:
      operationId: POST_webhooks-replay-format
      summary: Replay Webhooks for Site
      tags:
        - Webhook
        - incomplete
        - Webhooks
      description: |-
        ## Reply Webhooks for Site

        Posting to the replay endpoint does not immediate resend the webhooks. They are added to the background job queue and should be resent momentarily.

        ## Required Parameters:

        `id`: An array of webhook ids to replay in the query string.
      parameters:
        - name: id
          in: query
          description: The ID of the webhook you wish to replay.
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhooks/replay-webhooks-site'
          examples:
            application/json:
              status: ok
      security:
        - <<api_key>>: []
      x-stoplight:
        id: POST_webhooks-replay-format
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          statusCode: 200
parameters:
  'trait:pagination20:page':
    name: page
    in: query
    description: 'Result records are organized in pages. By default, the first page of results is displayed. The `page` parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a `page` parameter. Retrieve the next page by adding `?page=2` to the query string. If there are no results to return, then an empty result set will be returned.'
    type: number
    default: ''
  'trait:pagination20:per_page':
    name: per_page
    in: query
    description: This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any `per_page` value over 200 will be changed to 200.
    type: number
    default: ''
    maximum: 200
  'trait:pathParameters:subscription_id':
    name: subscription_id
    in: query
    required: true
    type: string
  'trait:pathParameters:format':
    name: format
    in: query
    required: true
    type: string
  'trait:pagination50:page':
    name: page
    in: query
    description: 'Pass an integer in the page parameter via the query string to access subsequent pages of 50 transactions '
    type: number
    default: ''
  'trait:autoInvite:auto_invite':
    name: auto_invite
    in: query
    description: You must specify this value when sending an Invitation email at the same time as enabling Billing Portal.
    required: true
    type: integer
  'trait:startdateEnddateQuery:start_date':
    name: start_date
    in: query
    description: YYYY-MM-DD
    type: string
    format: date
  'trait:startdateEnddateQuery:end_date':
    name: end_date
    in: query
    description: YYYY-MM-DD
    type: string
    format: date
  'trait:invoiceStatusQuery:status':
    name: status
    in: query
    type: string
    enum:
      - paid
      - unpaid
      - partial
      - archived
  'trait:eventsFilters:page':
    name: page
    in: query
    type: integer
  'trait:eventsFilters:per_page':
    name: per_page
    in: query
    type: integer
  'trait:eventsFilters:since_id':
    name: since_id
    in: query
    type: integer
  'trait:eventsFilters:max_id':
    name: max_id
    in: query
    type: integer
  'trait:eventsFilters:direction':
    name: direction
    in: query
    type: string
    default: desc
    enum:
      - 'asc, desc'
  'trait:pagination30:page':
    name: page
    in: query
    type: integer
  'trait:metafieldsNameRequiredCurrentNameOptional:name':
    name: name
    in: query
    required: true
    type: string
  'trait:metafieldsNameRequiredCurrentNameOptional:current_name':
    name: current_name
    in: query
    description: This only applies when you are updating an existing record and you wish to rename the field. Note you must supply name and current_name to rename the field
    required: false
    type: string
  'trait:metafieldsNameOptional:name':
    name: name
    in: query
    type: string
  'trait:metafieldsNameRequired:name':
    name: name
    in: query
    required: true
    type: string
  'trait:componentParameters:since_id':
    name: since_id
    in: query
    description: Returns usages with an id greater than or equal to the one specified
    type: integer
  'trait:componentParameters:max_id':
    name: max_id
    in: query
    description: Returns usages with an id less than or equal to the one specified
    type: integer
  'trait:componentParameters:since_date':
    name: since_date
    in: query
    description: 'Returns usages with a `created_at` date greater than or equal to midnight (12:00 AM) on the date specified.'
    type: string
    format: date
  'trait:componentParameters:until_date':
    name: until_date
    in: query
    description: ' Returns usages with a `created_at` date less than or equal to midnight (12:00 AM) on the date specified.'
    type: string
    format: date
  'trait:componentParameters:page':
    name: page
    in: query
    description: The page number and number of results used for pagination. By default results are paginated 20 per page.
    type: string
  'trait:componentParameters:per_page':
    name: per_page
    in: query
    description: The page number and number of results used for pagination. By default results are paginated 20 per page.
    type: string
  'trait:subscriptionQueryString:page':
    name: page
    in: query
    description: 'A integer value which specifies which page of results to fetch, starting at 1. Fetching successively higher page numbers will return additional results, until there are no more results to return (in which case an empty result set will be returned). Defaults to 1.'
    type: string
    default: 1
  'trait:subscriptionQueryString:per_page':
    name: per_page
    in: query
    description: 'how many records to fetch in each request, defaults to 20. The maximum allowed is 200 – any per_page value over 200 will be changed to 200.'
    type: integer
    default: 20
    maximum: 200
  'trait:subscriptionQueryString:state':
    name: state
    in: query
    description: 'The current state of the subscription. '
    type: string
    enum:
      - active
      - canceled
      - expired
      - expired_cards
      - on_hold
      - past_due
      - pending_cancellation
      - pending_renewal
      - suspended
      - trial_ended
      - trialing
      - unpaid
  'trait:subscriptionQueryString:product':
    name: product
    in: query
    description: The product id of the subscription. (Note that the product handle cannot be used.)
    type: string
  'trait:subscriptionQueryString:product_revision_number':
    name: product_revision_number
    in: query
    description: 'The revision number of the product. If supplied, product is required. Please note that revision is an internal, zero-based identifier, and differs from the Version number displayed in the Admin UI. Example: To filter for version “v2”, supply a product_revision_number of 1.'
    type: integer
  'trait:subscriptionQueryString:coupon':
    name: coupon
    in: query
    description: The numeric id of the coupon currently applied to the subscription. (This can be found in the URL when editing a coupon. Note that the coupon code cannot be used.)
    type: string
  'trait:subscriptionQueryString:date_field':
    name: date_field
    in: query
    description: ' The date field to filter on, such as canceled_at or updated_at. See the Subscription Output Attributes for a full list.'
    type: string
    format: date
  'trait:subscriptionQueryString:start_date':
    name: start_date
    in: query
    description: 'The start date (format YYYY-MM-DD) with which to filter the `date_field`. Returns subscriptions with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:subscriptionQueryString:end_date':
    name: end_date
    in: query
    description: 'The end date (format YYYY-MM-DD) with which to to filter the `date_field`. Returns subscriptions with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnKinds:kinds':
    name: kinds
    in: query
    description: 'An array of transaction types, see above'
    type: string
  'trait:txnSinceId:since_id':
    name: since_id
    in: query
    description: Returns transactions with an id greater than or equal to the one specified
    type: integer
  'trait:txnMaxId:max_id':
    name: max_id
    in: query
    description: Returns transactions with an id less than or equal to the one specified
    type: integer
  'trait:txnSinceDate:since_date':
    name: since_date
    in: query
    description: '(format YYYY-MM-DD) Returns transactions with a `created_at` timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnUntilDate:until_date':
    name: until_date
    in: query
    description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
    type: string
    format: date
  'trait:txnDirection:direction':
    name: direction
    in: query
    description: can be either asc for ascending or desc for descending order. (defaults to desc) The sort order is based on the created_at timestamp then id for transactions within the same second.
    type: string
    default: desc
  'trait:txnOrderBy:order_by':
    name: order_by
    in: query
    description: 'Either `id` or `created_at`. Using an ID filter (`since_id`/`max_id`) will force id order, while using a Date filter (`since_date`/`until_date`) will force created_at order. Otherwise, your requested value will be used.'
    type: string
  'trait:direction:direction':
    name: direction
    in: query
    description: May be asc or desc to sort customers by time of creation
    type: string
    default: asc
  'trait:searchString:q':
    name: q
    in: query
    description: 'Search by email, ID, reference, organization.'
    type: string
  'trait:sinceId:since_id':
    name: since_id
    in: query
    type: string
  'trait:stateStatusQuery:State / Status Filter':
    name: State / Status Filter
    in: query
    description: |+

    type: string
    enum:
      - trialing
      - trial_ended
      - active
      - soft_failure
      - past_due
      - canceled
      - unpaid
      - expired
  'trait:subscriptionIdQuery:subscription_id':
    name: subscription_id
    in: query
    type: integer
  'trait:metadataValue:value':
    name: value
    in: query
    description: Can be a single item or a list of metadata
    type: string
  'trait:sort:sort':
    name: sort
    in: query
    type: string
    default: created_at
    enum:
      - created_at
      - opened_at
      - closed_at
  'trait:referralCode:code':
    name: code
    in: query
    description: The referral code you are trying to validate
    required: true
    type: string
  'trait:statementsList:sort':
    name: sort
    in: query
    description: |-
      Allows specification of the order of the returned list.  The list can be sorted by one of the following specifiers:

      * `closed_at`: Sort by the time the statement was closed (i.e. the end of the period it covers)
      * `created_at`: Sort by the time the statement was created
      * `opened_at`: Sort by the time the statement was opened (i.e. the beginning of the period it covers)
      * `settled_at`: Sort by the time the statement was settled

      See also the `direction` parameter.
    type: string
    enum:
      - created_at
      - opened_at
      - closed_at
      - settled_at
  'trait:statementsList:direction':
    name: direction
    in: query
    description: |-
      Specifies the direction of the sort on the given `sort` key:

      * `asc`: Sort in ascending (lowest to highest) order
      * `desc`: Sort in descending (highest to lowest) order
    type: string
    enum:
      - asc
      - desc
  'trait:settledSinceUnix:settled_since':
    name: settled_since
    in: query
    description: 'Format: UNIX timestamp'
    type: integer
    enum:
      - 1509408720
definitions:
  webhooks/list-webhook-output:
    title: List Webhook Output
    type: array
    items:
      type: object
      properties:
        webhook:
          type: object
          properties:
            event:
              type: string
            id:
              type: integer
            created_at:
              type: string
            last_error:
              type: string
            last_error_at:
              type: string
            accepted_at:
              type: 'null'
            last_sent_at:
              type: string
            last_sent_url:
              type: string
            successful:
              type: boolean
            body:
              type: string
            signature:
              type: string
            signature_hmac_sha_256:
              type: string
    example:
      - webhook:
          event: statement_settled
          id: 141765032
          created_at: '2016-11-08T16:22:26-05:00'
          last_error: 404 Resource Not Found (retry 5 of 5)
          last_error_at: '2016-11-08T16:43:54-05:00'
          accepted_at: null
          last_sent_at: '2016-11-08T16:43:54-05:00'
          last_sent_url: 'http://requestb.in/11u45x71'
          successful: false
          body: 'id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test''s%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384'
          signature: 7c606ec4628ce75ec46e284097ce163a
          signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
      - webhook:
          event: payment_success
          id: 141765008
          created_at: '2016-11-08T16:22:25-05:00'
          last_error: 404 Resource Not Found (retry 5 of 5)
          last_error_at: '2016-11-08T16:43:54-05:00'
          accepted_at: null
          last_sent_at: '2016-11-08T16:43:54-05:00'
          last_sent_url: 'http://requestb.in/11u45x71'
          successful: false
          body: 'id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364'
          signature: fbcf2f6be579f9658cff90c4373e0ca2
          signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
    x-stoplight:
      id: webhooks/list-webhook-output
      name: List Webhook Output
      public: true
  events/list-events-for-subscription:
    title: Read Events for Subscription
    type: array
    items:
      type: object
      properties:
        event:
          type: object
          properties:
            id:
              type: integer
            key:
              type: string
            message:
              type: string
            subscription_id:
              type: integer
            created_at:
              type: string
            event_specific_data:
              type:
                - 'null'
                - object
    example:
      - event:
          id: 344799837
          key: statement_settled
          message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:29-04:00'
          event_specific_data: null
      - event:
          id: 344799815
          key: renewal_success
          message: Successful renewal for Amelia Example's subscription to Basic Plan
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:28-04:00'
          event_specific_data:
            product_id: 3792003
            account_transaction_id: null
      - event:
          id: 344799705
          key: billing_date_change
          message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
          subscription_id: 14900541
          created_at: '2016-11-01T12:41:25-04:00'
          event_specific_data: null
    x-stoplight:
      id: events/list-events-for-subscription
      name: Read Events for Subscription
      public: true
  notes/create-note-output:
    title: Create Note Output
    type: object
    properties:
      note:
        type: object
        properties:
          id:
            type: integer
          body:
            type: string
          subscription_id:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
          sticky:
            type: boolean
    example:
      note:
        id: 105025
        body: New test note.
        subscription_id: 15054201
        created_at: '2016-11-03T14:47:08-04:00'
        updated_at: '2016-11-03T14:47:08-04:00'
        sticky: true
    x-stoplight:
      id: notes/create-note-output
      name: Create Note Output
      public: true
  events/list-site-event-output:
    title: Read Site Event Output
    type: array
    items:
      type: object
      properties:
        event:
          type: object
          properties:
            id:
              type: integer
            key:
              type: string
            message:
              type: string
            subscription_id:
              type: integer
            created_at:
              type: string
            event_specific_data:
              type:
                - 'null'
                - object
              properties:
                previous_subscription_state:
                  type: string
                new_subscription_state:
                  type: string
    example:
      - event:
          id: 343087780
          key: subscription_state_change
          message: State changed on Test subscription to Monthly Product from active to past_due
          subscription_id: 14950962
          created_at: '2016-10-27T16:42:22-04:00'
          event_specific_data:
            previous_subscription_state: active
            new_subscription_state: past_due
      - event:
          id: 343087742
          key: billing_date_change
          message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
          subscription_id: 14950962
          created_at: '2016-10-27T16:42:19-04:00'
          event_specific_data: null
      - event:
          id: 343085267
          key: statement_closed
          message: Statement 79401838 closed (but not settled) for Test's subscription to ANNUAL product
          subscription_id: 14950975
          created_at: '2016-10-27T16:40:40-04:00'
          event_specific_data: null
    x-stoplight:
      id: events/list-site-event-output
      name: Read Site Event Output
      public: true
  customer/customer-output:
    title: Customer Output
    type: object
    properties:
      customer:
        type: object
        properties:
          first_name:
            type: string
            description: The first name of the customer
          last_name:
            type: string
            description: The last name of the customer
          cc_emails:
            description: Any cc emails associated with the subscription
            type: string
          organization:
            type:
              - string
              - 'null'
            description: The organization of the customer
          reference:
            type:
              - 'null'
              - integer
            description: The reference information associated with the customer
          id:
            type: integer
            description: The ID of the customer
          created_at:
            type: string
            format: date-time
            description: The timestamp when the customer was created
          updated_at:
            type: string
            format: date-time
            description: The timestamp when the customer was last edited
          address:
            type:
              - string
              - 'null'
            description: The address of the customer
          address_2:
            type:
              - string
              - 'null'
            description: An additional address line item for the customer
          city:
            type:
              - string
              - 'null'
            description: The customer's city
          state:
            type:
              - string
              - 'null'
            description: The customer's state
          zip:
            type:
              - string
              - 'null'
            description: The customer's zip
          country:
            type:
              - string
              - 'null'
            description: The customer's county
          phone:
            type:
              - string
              - 'null'
            description: The customer's phone number
          verified:
            type:
              - 'null'
              - boolean
            description: |-
              Is the customer verified to use ACH as a payment 
              method. Compatible with Authorize.Net or when testing with the bogus gateway)
          portal_customer_created_at:
            type:
              - string
              - 'null'
            format: date-time
            description: Timestamp when the Billing Portal was created for the customer
          portal_invite_last_sent_at:
            type:
              - string
              - 'null'
            format: date-time
            description: Timestamp of when the last Billing Portal invite was sent
          portal_invite_last_accepted_at:
            type:
              - 'null'
              - string
            format: date-time
            description: Timestamp in which the last Billing Portal invitation was accepted at
          tax_exempt:
            type: boolean
            description: Is the customer entry tax exempt
    example:
      customer:
        first_name: Martha
        last_name: Washington
        email: martha@example.com
        cc_emails: 'john@example.com, sue@example.com'
        organization: null
        reference: null
        id: 14967442
        created_at: '2016-12-05T10:33:07-05:00'
        updated_at: '2016-12-05T10:33:07-05:00'
        address: null
        address_2: null
        city: null
        state: null
        zip: null
        country: null
        phone: null
        verified: false
        portal_customer_created_at: null
        portal_invite_last_sent_at: null
        portal_invite_last_accepted_at: null
        tax_exempt: false
    x-stoplight:
      id: customer/customer-output
      name: Customer Output
      public: true
  sales-receipts/list-sales-receipts:
    title: List Sales Receipt Output
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
          next:
            type: string
      meta:
        type: object
        properties:
          count:
            type: integer
          total:
            type: integer
      data:
        type: array
        items:
          type: object
    example:
      links:
        self: 'http://subdomain.chargify.com/sales_receipts'
        next: 'http://subdomain.chargify.com/sales_receipts?before_number=6'
      meta:
        count: 20
        total: 25
      data: []
    x-stoplight:
      id: sales-receipts/list-sales-receipts
      name: List Sales Receipt Output
      public: true
  adjustments/request:
    title: POST Adjustment Request
    type: object
    properties:
      adjustment:
        type: object
        required:
          - amount
          - memo
        properties:
          amount:
            type: string
            default: ''
          memo:
            type: string
            maxLength: 255
    required:
      - adjustment
    example:
      adjustment:
        amount: '10.00'
        memo: Monthly charges
    x-stoplight:
      id: adjustments/request
      name: POST Adjustment Request
      public: true
  stats/read-stats-output:
    title: Read Stats Output
    type: object
    properties:
      seller_name:
        type: string
      site_name:
        type: string
      site_id:
        type: integer
      site_currency:
        type: string
      stats:
        type: object
        properties:
          total_subscriptions:
            type: integer
          subscriptions_today:
            type: integer
          total_revenue:
            type: string
          revenue_today:
            type: string
          revenue_this_month:
            type: string
          revenue_this_year:
            type: string
    example:
      seller_name: 'Acme, Inc.'
      site_name: Production
      site_id: 12345
      site_currency: USD
      stats:
        total_subscriptions: 120
        subscriptions_today: 4
        total_revenue: '$45,978.81'
        revenue_today: '$1,405.12'
        revenue_this_month: '$10,000.00'
        revenue_this_year: '$27,935.24'
    x-stoplight:
      id: stats/read-stats-output
      name: Read Stats Output
      public: true
  coupons/create-coupon-output:
    title: Create Coupon Output
    type: object
    properties:
      coupon:
        type: object
        properties:
          id:
            type: integer
            description: |
              The ID of the coupon
          name:
            type: string
            description: The internal coupon name. This information is never displayed to customers.
          code:
            type: string
            description: 'The coupon code. This is used by you or your customers to apply the coupon to a subscription. The code may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): `%`, `@`, `+`, `-`, `_`, and `.`'
          description:
            type: string
            description: The coupon description. This will be displayed to the customers after the coupon validation.
          amount_in_cents:
            type: integer
            description: The amount in cents of the discount of the coupon.
          product_family_id:
            type: integer
            description: 'The ID of the product family to which the coupon belongs. The coupon can be added only to products in this product family. '
          created_at:
            type: string
            description: The timestamp when the coupon was created.
            format: date-time
          updated_at:
            type: string
            description: The timestamp when the coupon was updated
            format: date-time
          start_date:
            type: string
            description: The start date of the coupon
            format: date-time
          end_date:
            type:
              - 'null'
              - string
            description: The expiration date of the coupon
            format: date-time
          percentage:
            type:
              - 'null'
              - number
            description: 'The discount percentage. Should be an integer between 1 and 100. You should set the percentage or the amount, but not both.'
            minimum: 1
            maximum: 100
          recurring:
            type: boolean
            description: 'If true, the discount will be applied at signup and every renewal (for the number of renewals given by duration_period_count). Otherwise, discount will be applied only at signup.'
          duration_period_count:
            type:
              - number
              - integer
              - 'null'
            description: Number of renewals the coupon is good for. Recurring should be set to true. Setting recurring to true and leaving this blank indicates that the coupon applies indefinitely.
          duration_interval:
            type:
              - 'null'
              - integer
            description: Integer used to measure the interval unit.
          duration_interval_unit:
            type:
              - 'null'
              - string
            description: Description of the number of days/months the coupon should be applied.
          allow_negative_balance:
            type: boolean
            description: 'Boolean. If true, credits will carry forward to next billing. Otherwise discount may not exceed total of the charges.'
          archived_at:
            type:
              - 'null'
              - string
            description: Timestamp indicating when this coupon was archived
            format: date-time
          conversion_limit:
            type: 'null'
            description: Number of times this coupon (or any of its codes) may be added to a subscription
          stackable:
            type: boolean
            description: If true coupon can be combined with other stackable coupons to produce a larger discount. If false coupon cannot be combined with other coupons.
          compounding_strategy:
            type: string
            description: ''
            enum:
              - compound
              - full-price
          coupon_restrictions:
            type: array
            items:
              type: object
    example:
      coupon:
        id: 67
        name: Foo Bar
        code: YEPPER99934
        description: my cool coupon
        amount_in_cents: 10000
        product_family_id: 4
        created_at: '2017-11-08T10:01:15-05:00'
        updated_at: '2017-11-08T10:01:15-05:00'
        start_date: '2017-11-08T10:01:15-05:00'
        end_date: null
        percentage: null
        recurring: false
        duration_period_count: null
        duration_interval: null
        duration_interval_unit: null
        allow_negative_balance: false
        archived_at: null
        conversion_limit: null
        stackable: true
        compounding_strategy: compound
        coupon_restrictions: []
    x-stoplight:
      id: coupons/create-coupon-output
      name: Create Coupon Output
      public: true
  allocation/create-request-post:
    title: Allocation Create Request POST
    type: object
    properties:
      allocation:
        type: object
        properties:
          quantity:
            type:
              - integer
              - number
          memo:
            type: string
          proration_downgrade_scheme:
            type: string
          proration_collection_method:
            type: string
            default: automatic
          proration_upgrade_scheme:
            type: string
        required:
          - quantity
    example:
      allocation:
        quantity: 29
        memo: Text messages usage MAy 2020
        proration_downgrade_scheme: no-prorate
        proration_collection_method: automatic
        proration_upgrade_scheme: no-prorate
    x-stoplight:
      id: allocation/create-request-post
      name: Allocation Create Request POST
      public: true
  webhooks/replay-webhooks-site:
    title: Replay Webhooks for Site
    type: object
    properties:
      status:
        type: string
    example:
      status: ok
    x-stoplight:
      id: webhooks/replay-webhooks-site
      name: Replay Webhooks for Site
      public: true
  notes/create-note-input:
    title: Create Note Input
    type: object
    properties:
      note:
        type: object
        properties:
          body:
            type: string
          sticky:
            type: boolean
    example:
      note:
        body: New test note.
        sticky: true
    x-stoplight:
      id: notes/create-note-input
      name: Create Note Input
      public: true
  adjustments/response:
    title: POST Adjustment Response
    type: object
    properties:
      adjustment:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
            maximum: 99999999999
          success:
            type: boolean
          memo:
            type: string
            maxLength: 255
          amount_in_cents:
            type:
              - integer
              - string
            minimum: -99999999999
            maximum: 99999999999
          ending_balance_in_cents:
            type: integer
            minimum: -99999999999
            maximum: 99999999999
          type:
            type: string
            maxLength: 255
          transaction_type:
            type: string
            maxLength: 255
          subscription_id:
            type: integer
            minimum: 1
            maximum: 99999999999
          product_id:
            type: integer
            minimum: 1
            maximum: 99999999999
          created_at:
            type: string
            format: date-time
          payment_id:
            type: 'null'
    example:
      adjustment:
        id: 123456
        success: true
        memo: This is the description of an adjustment on a subscription that increases the balance by a certain dollar amount.
        amount_in_cents: 400
        ending_balance_in_cents: 400
        type: Adjustment
        transaction_type: adjustment
        subscription_id: 123456
        product_id: 123456
        created_at: '2012-11-20T22:00:37Z'
        payment_id: null
    x-stoplight:
      id: adjustments/response
      name: POST Adjustment Response
      public: true
  products/list-products-output:
    title: Read by Products Output
    type: array
    items:
      type: object
      properties:
        product:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            handle:
              type: string
            description:
              type: string
            accounting_code:
              type: string
            request_credit_card:
              type: boolean
            expiration_interval:
              type: 'null'
            expiration_interval_unit:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            price_in_cents:
              type: integer
            interval:
              type: integer
            interval_unit:
              type: string
            initial_charge_in_cents:
              type:
                - integer
                - 'null'
            trial_price_in_cents:
              type: 'null'
            trial_interval:
              type: 'null'
            trial_interval_unit:
              type: string
            archived_at:
              type: 'null'
            require_credit_card:
              type: boolean
            return_params:
              type: string
            taxable:
              type: boolean
            update_return_url:
              type: string
            initial_charge_after_trial:
              type: boolean
            version_number:
              type: integer
            update_return_params:
              type: string
            product_family:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                handle:
                  type: string
                accounting_code:
                  type: 'null'
            public_signup_pages:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  return_url:
                    type:
                      - 'null'
                      - string
                  return_params:
                    type: string
                  url:
                    type: string
    example:
      - product:
          id: 3801242
          name: Free product
          handle: zero-dollar-product
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-04-21T16:08:39-04:00'
          updated_at: '2016-08-03T11:27:53-04:00'
          price_in_cents: 10000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: 0
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: false
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 4
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 283460
              return_url: null
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product'
      - product:
          id: 3858146
          name: Calendar Billing Product
          handle: calendar-billing-product
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-07-05T13:07:38-04:00'
          updated_at: '2016-07-05T13:07:38-04:00'
          price_in_cents: 10000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: true
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 1
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 289193
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/gxdbfxzxhcjq/calendar-billing-product'
    x-stoplight:
      id: products/list-products-output
      name: Read by Products Output
      public: true
  allocation/read_allocations_subscription:
    title: Allocation Response GET
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            memo:
              type:
                - 'null'
                - string
              maxLength: 255
            timestamp:
              type: string
              format: date-time
            quantity:
              type: integer
              minimum: -99999999999
              exclusiveMinimum: false
              maximum: 99999999999
              exclusiveMaximum: false
            previous_quantity:
              type: integer
              minimum: -99999999999
              maximum: 99999999999
            component_id:
              type: integer
              minimum: 1
              maximum: 99999999999
            subscription_id:
              type: integer
              minimum: 1
              maximum: 99999999999
            proration_upgrade_scheme:
              type: string
              default: no-prorate
              description: 'Defaults to the site setting if one is not provided. '
            proration_downgrade_scheme:
              type: string
              default: no-prorate
              description: 'Defaults to the site setting if one is not provided. '
    example:
      - allocation:
          memo: moving to 7
          timestamp: '2012-11-20T22:00:37Z'
          quantity: 7
          previous_quantity: 3
          component_id: 11960
          subscription_id: 2585595
          proration_upgrade_scheme: no-prorate
          proration_downgrade_scheme: no-prorate
      - allocation:
          memo: null
          timestamp: '2012-11-20T21:48:09Z'
          quantity: 3
          previous_quantity: 0
          component_id: 11960
          subscription_id: 2585595
          proration_upgrade_scheme: no-prorate
          proration_downgrade_scheme: no-prorate
    x-stoplight:
      id: allocation/read_allocations_subscription
      name: Allocation Response GET
      public: true
  count-transactions:
    title: Read the Count of Transactions for a Site Output
    type: object
    properties:
      count:
        type: integer
    example:
      count: 290
    x-stoplight:
      id: count-transactions
      name: Read the Count of Transactions for a Site Output
      public: true
  renewal-preview-output:
    title: Renewal Preview Output
    type: object
    properties:
      renewal_preview:
        type: object
        properties:
          next_assessment_at:
            type: string
          subtotal_in_cents:
            type: integer
          total_tax_in_cents:
            type: integer
          total_discount_in_cents:
            type: integer
          total_in_cents:
            type: integer
          existing_balance_in_cents:
            type: integer
          total_amount_due_in_cents:
            type: integer
          uncalculated_taxes:
            type: boolean
          line_items:
            type: array
            items:
              type: object
              properties:
                transaction_type:
                  type: string
                kind:
                  type: string
                amount_in_cents:
                  type: integer
                memo:
                  type: string
                discount_amount_in_cents:
                  type: integer
                taxable_amount_in_cents:
                  type: integer
    example:
      renewal_preview:
        next_assessment_at: '2017-03-13T12:50:55-04:00'
        subtotal_in_cents: 6000
        total_tax_in_cents: 0
        total_discount_in_cents: 0
        total_in_cents: 6000
        existing_balance_in_cents: 0
        total_amount_due_in_cents: 6000
        uncalculated_taxes: false
        line_items:
          - transaction_type: charge
            kind: baseline
            amount_in_cents: 5000
            memo: Gold Product (03/13/2017 - 04/13/2017)
            discount_amount_in_cents: 0
            taxable_amount_in_cents: 0
          - transaction_type: charge
            kind: quantity_based_component
            amount_in_cents: 1000
            memo: 'Quantity Component: 10 Quantity Components'
            discount_amount_in_cents: 0
            taxable_amount_in_cents: 0
    x-stoplight:
      id: renewal-preview-output
      name: Renewal Preview Output
      public: true
  /basics/subscription-api-response-exampe:
    title: Subscription API Response Example
    type: array
    items:
      type: object
      properties:
        subscription:
          type: object
          properties:
            activated_at:
              type: string
            created_at:
              type: string
            expires_at:
              type: 'null'
            cancellation_message:
              type: string
            trial_ended_at:
              type: 'null'
            updated_at:
              type: string
            credit_card:
              type: object
              properties:
                customer_vault_token:
                  type: 'null'
                vault_token:
                  type: string
                card_type:
                  type: string
                current_vault:
                  type: string
                billing_city:
                  type: 'null'
                billing_state:
                  type: 'null'
                expiration_year:
                  type: integer
                billing_address_2:
                  type: 'null'
                id:
                  type: integer
                masked_card_number:
                  type: string
                billing_address:
                  type: 'null'
                billing_country:
                  type: 'null'
                billing_zip:
                  type: string
                expiration_month:
                  type: integer
                last_name:
                  type: string
                customer_id:
                  type: integer
                first_name:
                  type: string
            id:
              type: integer
            product:
              type: object
              properties:
                product_family:
                  type: object
                  properties:
                    name:
                      type: string
                    handle:
                      type: string
                    accounting_code:
                      type: 'null'
                    id:
                      type: integer
                    description:
                      type: 'null'
                name:
                  type: string
                created_at:
                  type: string
                handle:
                  type: string
                return_params:
                  type: 'null'
                price_in_cents:
                  type: integer
                return_url:
                  type: 'null'
                accounting_code:
                  type: 'null'
                expiration_interval:
                  type: 'null'
                expiration_interval_unit:
                  type: 'null'
                trial_interval:
                  type: 'null'
                updated_at:
                  type: string
                id:
                  type: integer
                initial_charge_in_cents:
                  type: 'null'
                require_credit_card:
                  type: boolean
                interval:
                  type: integer
                trial_price_in_cents:
                  type: 'null'
                description:
                  type: 'null'
                request_credit_card:
                  type: boolean
                archived_at:
                  type: 'null'
                interval_unit:
                  type: string
                trial_interval_unit:
                  type: 'null'
            current_period_ends_at:
              type: string
            next_assessment_at:
              type: string
            trial_started_at:
              type: 'null'
            customer:
              type: object
              properties:
                address:
                  type: 'null'
                city:
                  type: 'null'
                reference:
                  type: 'null'
                created_at:
                  type: string
                zip:
                  type: 'null'
                country:
                  type: 'null'
                updated_at:
                  type: string
                id:
                  type: integer
                address_2:
                  type: 'null'
                last_name:
                  type: string
                phone:
                  type: string
                organization:
                  type: string
                email:
                  type: string
                first_name:
                  type: string
                state:
                  type: 'null'
            balance_in_cents:
              type: integer
            current_period_started_at:
              type: string
            cancellation_method:
              type: string
            automatically_resume_at:
              type: string
    example:
      - subscription:
          activated_at: '2010-08-22T07:13:19-04:00'
          created_at: '2010-08-22T07:13:18-04:00'
          expires_at: null
          cancellation_message: Customer requested cancellation
          trial_ended_at: null
          updated_at: '2010-08-22T07:13:18-04:00'
          credit_card:
            customer_vault_token: null
            vault_token: '1'
            card_type: bogus
            current_vault: bogus
            billing_city: null
            billing_state: null
            expiration_year: 2014
            billing_address_2: null
            id: 80743
            masked_card_number: XXXX-XXXX-XXXX-1
            billing_address: null
            billing_country: null
            billing_zip: ''
            expiration_month: 5
            last_name: Doe
            customer_id: 143068
            first_name: John
          id: 140019
          product:
            product_family:
              name: Acme Projects
              handle: acme-projects
              accounting_code: null
              id: 2526
              description: null
            name: Pro Plan
            created_at: '2010-08-03T11:36:24-04:00'
            handle: pro
            return_params: null
            price_in_cents: 5000
            return_url: null
            accounting_code: null
            expiration_interval: null
            expiration_interval_unit: null
            trial_interval: null
            updated_at: '2010-08-03T11:36:24-04:00'
            id: 7934
            initial_charge_in_cents: null
            require_credit_card: true
            interval: 1
            trial_price_in_cents: null
            description: null
            request_credit_card: true
            archived_at: null
            interval_unit: month
            trial_interval_unit: null
          current_period_ends_at: '2010-09-22T07:13:18-04:00'
          next_assessment_at: '2010-09-22T07:13:18-04:00'
          trial_started_at: null
          customer:
            address: null
            city: null
            reference: null
            created_at: '2010-08-22T07:13:18-04:00'
            zip: null
            country: null
            updated_at: '2010-08-22T07:13:18-04:00'
            id: 143068
            address_2: null
            last_name: Doe
            phone: ''
            organization: ''
            email: john@example.com
            first_name: John
            state: null
          balance_in_cents: 0
          current_period_started_at: '2010-08-22T07:13:18-04:00'
          state: canceled
    x-stoplight:
      id: /basics/subscription-api-response-exampe
      name: Subscription API Response Example
      public: true
  allocation/create-response-post:
    title: Allocation Create Response POST
    type: object
    properties:
      allocation:
        type: object
        properties:
          component_id:
            type: integer
          subscription_id:
            type: integer
          quantity:
            type: integer
          previous_quantity:
            type: integer
          memo:
            type: string
          timestamp:
            type: string
          proration_upgrade_scheme:
            type: string
          proration_downgrade_scheme:
            type: string
          price_point_id:
            type: integer
          previous_price_point_id:
            type: integer
    example:
      allocation:
        component_id: 11960
        subscription_id: 2585595
        quantity: 2
        previous_quantity: 18
        memo: Setting quantity to 2 at customer request
        timestamp: '2019-11-20T23:00:08Z'
        proration_upgrade_scheme: prorate-attempt-capture
        proration_downgrade_scheme: no-prorate
        price_point_id: 76
        previous_price_point_id: 75
    x-stoplight:
      id: allocation/create-response-post
      name: Allocation Create Response POST
      public: true
  allocation/multiple-request-post:
    title: Allocation Multiple Request POST
    type: object
    properties:
      proration_upgrade_scheme:
        type: string
        default: no-prorate
        description: 'Defaults to the site setting if one is not provided. '
      proration_downgrade_scheme:
        type: string
        description: 'Defaults to the site setting if one is not provided. '
        default: no-prorate
      allocations:
        type: array
        items:
          type: object
          properties:
            component_id:
              type: integer
              minimum: 1
              maximum: 99999999999
            quantity:
              type: integer
              minimum: -99999999999
              maximum: 99999999999
            memo:
              type: string
              maxLength: 255
    example:
      proration_upgrade_scheme: prorate-attempt-capture
      proration_downgrade_scheme: no-prorate
      allocations:
        - component_id: 123
          quantity: 10
          memo: foo
        - component_id: 456
          quantity: 5
          memo: bar
    x-stoplight:
      id: allocation/multiple-request-post
      name: Allocation Multiple Request POST
      public: true
  allocation/multiple-response-post:
    title: Allocation Multiple Response POST
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            component_id:
              type: integer
            subscription_id:
              type: integer
            quantity:
              type: integer
            previous_quantity:
              type: integer
            memo:
              type: string
            timestamp:
              type: string
            proration_upgrade_scheme:
              type: string
            proration_downgrade_scheme:
              type: string
            payment:
              type: object
              properties:
                amount_in_cents:
                  type: integer
                success:
                  type: boolean
                memo:
                  type: string
                id:
                  type: integer
    example:
      - allocation:
          component_id: 193159
          subscription_id: 15540611
          quantity: 10
          previous_quantity: 0
          memo: foo
          timestamp: '2016-12-08T19:09:15Z'
          proration_upgrade_scheme: prorate-attempt-capture
          proration_downgrade_scheme: no-prorate
          payment:
            amount_in_cents: 1451
            success: true
            memo: 'Payment for: Prorated component allocation changes.'
            id: 165473487
      - allocation:
          component_id: 277221
          subscription_id: 15540611
          quantity: 5
          previous_quantity: 0
          memo: bar
          timestamp: '2016-12-08T19:09:15Z'
          proration_upgrade_scheme: prorate-attempt-capture
          proration_downgrade_scheme: no-prorate
          payment:
            amount_in_cents: 1451
            success: true
            memo: 'Payment for: Prorated component allocation changes.'
            id: 165473487
    x-stoplight:
      id: allocation/multiple-response-post
      name: Allocation Multiple Response POST
      public: true
  billing-portal/request:
    title: Billing Portal Request GET
    type: object
    properties:
      url:
        type: string
        format: uri
        description: The customer’s management URL
      fetch_count:
        type: integer
        description: Number of times this link has been retrieved (at 15 you will be blocked)
      created_at:
        type: string
        format: date-time
        description: When this link was created
      new_link_available_at:
        type: string
        format: date-time
        description: When a new link will be available and fetch_count is reset (15 days from when it was created)
      expires_at:
        type: string
        format: date-time
        description: When this link expires (65 days from when it was created)
    example:
      url: 'https://www.billingportal.com/manage/123/1383672520/a5b33efa2fdedb11'
      fetch_count: 1
      created_at: '2013-11-05T00:00:00Z'
      new_link_available_at: '2013-11-20T00:00:00Z'
      expires_at: '2014-01-09T00:00:00Z'
    x-stoplight:
      id: billing-portal/request
      name: Billing Portal Request GET
      public: true
  billing-portal/response:
    title: Billing Portal Response GET
    type: object
    properties:
      errors:
        type: object
        properties:
          error:
            type: string
    example:
      errors:
        error: Too many requests for this customer's management link
    x-stoplight:
      id: billing-portal/response
      name: Billing Portal Response GET
      public: true
  billing-portal/request-enable:
    title: Billing Portal Enable Request POST
    type:
      - object
      - 'null'
    x-stoplight:
      id: billing-portal/request-enable
      name: Billing Portal Enable Request POST
      public: true
  billing-portal/response-enable:
    title: Billing Portal Enable Response POST
    type: object
    properties:
      customer:
        type: object
        properties:
          first_name:
            type: string
            maxLength: 255
          last_name:
            type: string
            maxLength: 255
          email:
            type: string
            format: email
          organization:
            type: string
            maxLength: 255
          reference:
            type: 'null'
          id:
            type: integer
            minimum: 1
            maximum: 99999999999
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          address:
            type: string
            maxLength: 255
          address_2:
            type: string
            maxLength: 255
          city:
            type: string
            maxLength: 255
          state:
            type: string
            maxLength: 255
          zip:
            type: string
            maxLength: 255
          country:
            type: string
            maxLength: 255
          phone:
            type: string
            maxLength: 255
          verified:
            type: boolean
          portal_customer_created_at:
            type: string
            format: date-time
          portal_invite_last_sent_at:
            type: 'null'
          portal_invite_last_accepted_at:
            type: 'null'
    example:
      customer:
        first_name: John
        last_name: Doe
        email: jd@example.com
        organization: ''
        reference: null
        id: 100032
        created_at: '2014-04-17T11:13:52-04:00'
        updated_at: '2014-04-17T15:37:08-04:00'
        address: 45 Main St
        address_2: ''
        city: New York
        state: NY
        zip: '10045'
        country: US
        phone: ''
        verified: false
        portal_customer_created_at: '2014-04-17T15:37:08-04:00'
        portal_invite_last_sent_at: null
        portal_invite_last_accepted_at: null
    x-stoplight:
      id: billing-portal/response-enable
      name: Billing Portal Enable Response POST
      public: true
  billing-portal/simul-response-post:
    title: Billing Portal Simul Response POST
    type: object
    properties:
      customer:
        type: object
        properties:
          first_name:
            type: string
            maxLength: 255
          last_name:
            type: string
            maxLength: 255
          email:
            type: string
            format: email
          organization:
            type: string
            maxLength: 255
          reference:
            type: 'null'
          id:
            type: integer
            minimum: 1
            maximum: 99999999999
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          address:
            type: string
            maxLength: 255
          address_2:
            type: string
            maxLength: 255
          city:
            type: string
            maxLength: 255
          state:
            type: string
            maxLength: 255
          zip:
            type: string
            maxLength: 255
          country:
            type: string
            maxLength: 255
          phone:
            type: string
            maxLength: 255
          verified:
            type: boolean
          portal_customer_created_at:
            type: string
            format: date-time
          portal_invite_last_sent_at:
            type: string
            format: date-time
          portal_invite_last_accepted_at:
            type: 'null'
    example:
      customer:
        first_name: John
        last_name: Doe
        email: jd@example.com
        organization: ''
        reference: null
        id: 100032
        created_at: '2014-04-17T11:13:52-04:00'
        updated_at: '2014-04-17T15:37:08-04:00'
        address: 45 Main St
        address_2: ''
        city: New York
        state: NY
        zip: '10045'
        country: US
        phone: ''
        verified: false
        portal_customer_created_at: '2014-04-17T15:37:08-04:00'
        portal_invite_last_sent_at: '2014-04-17T15:37:08-04:00'
        portal_invite_last_accepted_at: null
    x-stoplight:
      id: billing-portal/simul-response-post
      name: Billing Portal Simul Response POST
      public: true
  charges/create-a-charge-request-post:
    title: Create a charge / Request POST
    type: object
    properties:
      charge:
        type: object
        properties:
          memo:
            type: string
          amount:
            type: string
    example:
      charge:
        memo: '10.00'
        amount: Amount collected
    x-stoplight:
      id: charges/create-a-charge-request-post
      name: Create a charge / Request POST
      public: true
  charges/create-a-charge-response-post:
    title: Create a charge / Response POST
    type: object
    properties:
      charge:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: integer
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
          original_amount_in_cents:
            type: 'null'
          discount_amount_in_cents:
            type: 'null'
          taxable_amount_in_cents:
            type: 'null'
          taxations:
            type: array
            items:
              type: object
    example:
      charge:
        id: 157750635
        subscription_id: 14593192
        type: Charge
        kind: one_time
        transaction_type: charge
        success: true
        amount_in_cents: 100
        memo: This is the description of the one time charge.
        created_at: '2016-10-11T11:51:45-04:00'
        starting_balance_in_cents: 15000
        ending_balance_in_cents: 15100
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: 157750636
        product_id: 3861800
        tax_id: null
        component_id: null
        statement_id: 78204384
        customer_id: 14126091
        original_amount_in_cents: null
        discount_amount_in_cents: null
        taxable_amount_in_cents: null
        taxations: []
    x-stoplight:
      id: charges/create-a-charge-response-post
      name: Create a charge / Response POST
      public: true
  components/read-components-get:
    title: Read Components GET
    type: array
    items:
      type: object
      properties:
        component:
          type: object
          properties:
            component_id:
              type: integer
              minimum: 0
              maximum: 99999999999
            subscription_id:
              type: integer
              minimum: 0
              maximum: 99999999999
            unit_balance:
              type: integer
              minimum: 0
              maximum: 999999999
            pricing_scheme:
              type: string
            name:
              type: string
              maxLength: 255
            kind:
              type: string
              maxLength: 255
            unit_name:
              type: string
              maxLength: 255
            enabled:
              type: boolean
            allocated_quantity:
              type: integer
              minimum: 0
              maximum: 99999999999
    example:
      - {}
      - component:
          unit_name: Text messages
          name: text_messages
          kind: metered_component
          component_id: 98322708341
          subscription_id: 38855254509
          allocated_quantity: 1500
          unit_balance: 5000
      - component:
          enabled: true
          subscription_id: 30336331837
          unit_balance: 5000
          name: text messages
      - {}
    x-stoplight:
      id: components/read-components-get
      name: Read Components GET
      public: true
  components/read-specific-component-get:
    title: Read Specific Component GET
    type: object
    properties:
      component:
        type: object
        properties:
          component_id:
            type: integer
          subscription_id:
            type: integer
          allocated_quantity:
            type: integer
          pricing_scheme:
            type: string
          name:
            type: string
          kind:
            type: string
          unit_name:
            type: string
    example:
      component:
        component_id: 193028
        subscription_id: 14593192
        allocated_quantity: 1
        pricing_scheme: per_unit
        name: Users
        kind: quantity_based_component
        unit_name: Users
    x-stoplight:
      id: components/read-specific-component-get
      name: Read Specific Component GET
      public: true
  component/read-components-for-a-product-family-output:
    title: Read Components for a Product Family Output
    type: array
    items:
      type: object
      properties:
        component:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            pricing_scheme:
              type:
                - 'null'
                - string
            unit_name:
              type: string
            unit_price:
              type: string
            product_family_id:
              type: integer
            price_per_unit_in_cents:
              type: 'null'
            kind:
              type: string
            archived:
              type: boolean
            taxable:
              type: boolean
            description:
              type: string
            default_price_point_id:
              type: integer
            prices:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  component_id:
                    type: integer
                  starting_quantity:
                    type: integer
                  ending_quantity:
                    type: 'null'
                  unit_price:
                    type: string
                  price_point_id:
                    type: integer
                  formatted_unit_price:
                    type: string
            price_point_count:
              type: integer
            price_points_url:
              type: string
            tax_code:
              type:
                - 'null'
                - string
    example:
      - component:
          id: 399850
          name: $1.00 component
          pricing_scheme: per_unit
          unit_name: Component
          unit_price: '1.0'
          product_family_id: 997233
          price_per_unit_in_cents: null
          kind: quantity_based_component
          archived: false
          taxable: false
          description: Component
          default_price_point_id: 121000
          prices:
            - id: 630687
              component_id: 399850
              starting_quantity: 1
              ending_quantity: null
              unit_price: '1.0'
              price_point_id: 121000
              formatted_unit_price: $1.00
          price_point_count: 2
          price_points_url: 'https://general-goods.chargify.com/components/399850/price_points'
          tax_code: null
      - component:
          id: 399853
          name: Annual Support Services
          pricing_scheme: null
          unit_name: on/off
          unit_price: '100.0'
          product_family_id: 997233
          price_per_unit_in_cents: null
          kind: on_off_component
          archived: false
          taxable: true
          description: Prepay for support services
          default_price_point_id: 121003
          price_point_count: 4
          price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
          tax_code: D0000000
      - component:
          id: 386937
          name: Cancellation fee
          pricing_scheme: null
          unit_name: on/off
          unit_price: '35.0'
          product_family_id: 997233
          price_per_unit_in_cents: null
          kind: on_off_component
          archived: false
          taxable: false
          description: ''
          default_price_point_id: 108307
          price_point_count: 1
          price_points_url: 'https://general-goods.chargify.com/components/386937/price_points'
          tax_code: null
    x-stoplight:
      id: component/read-components-for-a-product-family-output
      name: Read Components for a Product Family Output
      public: true
  component/create:
    title: Create a Component Request POST
    type: object
    properties:
      metered_component:
        type: object
        required:
          - name
          - unit_name
        properties:
          name:
            type: string
            description: 'A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".'
          unit_name:
            type: string
            description: 'A name for the unit this component is measured in. Should be lower case and in singular form, i.e. "minute". We may pluralize this value when constructing reports, i.e. "20 minutes".'
          description:
            type: string
            description: A description for the component that will be displayed to the user on the hosted signup page.
          handle:
            type: string
            description: 'A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters ''.'', '':'', ''-'', or ''_''.'
            pattern: '\A[a-z0-9][a-z0-9\-_:.]*\z'
          taxable:
            type: boolean
          pricing_scheme:
            type: string
          prices:
            type: array
            items:
              type: object
              properties:
                starting_quantity:
                  type: integer
                unit_price:
                  type: integer
                component:
                  type: 'null'
    required:
      - metered_component
    example:
      metered_component:
        name: Text messages
        unit_name: text message
        taxable: false
        pricing_scheme: stairstep
        prices:
          - starting_quantity: 1
            unit_price: 1
            component: null
    x-stoplight:
      id: component/create
      name: Create a Component Request POST
      public: true
  component/list-specific-component-product-family-get:
    title: Read Specific Component Product Family GET
    type: object
    properties:
      component:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          pricing_scheme:
            type: 'null'
          unit_name:
            type: string
          unit_price:
            type: string
          product_family_id:
            type: integer
          price_per_unit_in_cents:
            type: 'null'
          kind:
            type: string
          archived:
            type: boolean
          taxable:
            type: boolean
          description:
            type: string
          default_price_point_id:
            type: integer
          price_point_count:
            type: integer
          price_points_url:
            type: string
          tax_code:
            type: string
    example:
      component:
        id: 399853
        name: Annual Support Services
        pricing_scheme: null
        unit_name: on/off
        unit_price: '100.0'
        product_family_id: 997233
        price_per_unit_in_cents: null
        kind: on_off_component
        archived: false
        taxable: true
        description: Prepay for support services
        default_price_point_id: 121003
        price_point_count: 4
        price_points_url: 'https://general-goods.chargify.com/components/399853/price_points'
        tax_code: D0000000
    x-stoplight:
      id: component/list-specific-component-product-family-get
      name: Read Specific Component Product Family GET
      public: true
  components/create-response-post:
    title: Create a Component Response POST
    type: object
    properties:
      component:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: string
          pricing_scheme:
            type: string
          unit_name:
            type: string
          unit_price:
            type: 'null'
          product_family_id:
            type: integer
          price_per_unit_in_cents:
            type: 'null'
          kind:
            type: string
          archived:
            type: boolean
          taxable:
            type: boolean
          description:
            type: 'null'
          default_price_point_id:
            type: integer
          prices:
            type: array
            items:
              type: object
              properties:
                starting_quantity:
                  type: integer
                ending_quantity:
                  type: 'null'
                unit_price:
                  type: string
          price_point_count:
            type: integer
          price_points_url:
            type: string
    example:
      component:
        id: 292609
        name: Text messages
        pricing_scheme: stairstep
        unit_name: text message
        unit_price: null
        product_family_id: 528484
        price_per_unit_in_cents: null
        kind: metered_component
        archived: false
        taxable: false
        description: null
        default_price_point_id: 75
        prices:
          - starting_quantity: 1
            ending_quantity: null
            unit_price: '1.0'
        price_point_count: 2
        price_points_url: /components/292609/price_points
    x-stoplight:
      id: components/create-response-post
      name: Create a Component Response POST
      public: true
  event/counts:
    title: Count Events for a Site
    type: object
    properties:
      count:
        type: integer
    example:
      count: 144
    x-stoplight:
      id: event/counts
      name: Count Events for a Site
      public: true
  invoices/list-all-invoices-query-response:
    title: List All Invoices (Multiple Query)
    type: array
    items:
      type: object
      properties:
        invoice:
          type: object
          properties:
            id:
              type: integer
            subscription_id:
              type: integer
            statement_id:
              type: integer
            site_id:
              type: integer
            state:
              type: string
            total_amount_in_cents:
              type: integer
            paid_at:
              type:
                - 'null'
                - string
            created_at:
              type: string
            updated_at:
              type: string
            amount_due_in_cents:
              type: integer
            number:
              type: string
            charges:
              type: array
              items:
                type: object
                properties:
                  created_at:
                    type: string
                  subscription_id:
                    type: integer
                  type:
                    type: string
                  memo:
                    type: string
                  kind:
                    type: string
                  amount_in_cents:
                    type: integer
                  ending_balance_in_cents:
                    type: integer
                  success:
                    type: boolean
                  id:
                    type: integer
                  payment_id:
                    type:
                      - 'null'
                      - string
                  product_id:
                    type: integer
                  transaction_type:
                    type: string
                  gateway_transaction_id:
                    type:
                      - 'null'
                      - string
                  gateway_order_id:
                    type:
                      - 'null'
                      - string
                  starting_balance_in_cents:
                    type: integer
                  component_id:
                    type:
                      - 'null'
                      - string
                  tax_id:
                    type:
                      - 'null'
                      - string
                  customer_id:
                    type: integer
            payments_and_credits:
              type: array
              items:
                type: object
                properties:
                  created_at:
                    type: string
                  subscription_id:
                    type: integer
                  type:
                    type: string
                  memo:
                    type: string
                  kind:
                    type: string
                  amount_in_cents:
                    type: integer
                  ending_balance_in_cents:
                    type: integer
                  success:
                    type: boolean
                  id:
                    type: integer
                  payment_id:
                    type:
                      - 'null'
                      - string
                  product_id:
                    type: integer
                  transaction_type:
                    type: string
                  gateway_transaction_id:
                    type:
                      - 'null'
                      - string
                  gateway_order_id:
                    type:
                      - 'null'
                      - string
                  starting_balance_in_cents:
                    type: integer
                  component_id:
                    type:
                      - 'null'
                      - string
                  tax_id:
                    type:
                      - 'null'
                      - string
                  customer_id:
                    type: integer
                  card_number:
                    type:
                      - 'null'
                      - string
                  card_expiration:
                    type:
                      - 'null'
                      - string
                  card_type:
                    type:
                      - 'null'
                      - string
    example:
      - invoice:
          id: 1248064
          subscription_id: 14900541
          statement_id: 79702531
          site_id: 31615
          state: partial
          total_amount_in_cents: 4250
          paid_at: null
          created_at: '2016-11-01T12:41:27-04:00'
          updated_at: '2016-11-01T12:41:28-04:00'
          amount_due_in_cents: 3750
          number: '000016'
          charges:
            - created_at: '2016-11-01T12:41:26-04:00'
              subscription_id: 14900541
              type: Charge
              memo: Basic Plan (11/01/2016 - 12/01/2016)
              kind: baseline
              amount_in_cents: 4000
              ending_balance_in_cents: 3500
              success: true
              id: 160512958
              payment_id: null
              product_id: 3792003
              transaction_type: charge
              gateway_transaction_id: null
              gateway_order_id: null
              starting_balance_in_cents: -500
              component_id: null
              tax_id: null
              customer_id: 14399371
            - created_at: '2016-11-01T12:41:27-04:00'
              subscription_id: 14900541
              type: Charge
              memo: MA Tax (6.25%)
              kind: tax
              amount_in_cents: 250
              ending_balance_in_cents: 3750
              success: true
              id: 160512974
              payment_id: null
              product_id: 3792003
              transaction_type: charge
              gateway_transaction_id: null
              gateway_order_id: null
              starting_balance_in_cents: 3500
              component_id: null
              tax_id: null
              customer_id: 14399371
          payments_and_credits: []
      - invoice:
          id: 1240347
          subscription_id: 14823581
          statement_id: 79335006
          site_id: 31615
          state: paid
          total_amount_in_cents: 2177
          paid_at: '2016-10-26T15:16:23-04:00'
          created_at: '2016-10-26T14:41:22-04:00'
          updated_at: '2016-10-26T15:16:23-04:00'
          amount_due_in_cents: 0
          number: '000015'
          charges:
            - created_at: '2016-10-26T14:41:20-04:00'
              subscription_id: 14823581
              type: Charge
              memo: Taxable Product (10/26/2016 - 11/26/2016)
              kind: baseline
              amount_in_cents: 2000
              ending_balance_in_cents: 2000
              success: true
              id: 159671212
              payment_id: null
              product_id: 3794121
              transaction_type: charge
              gateway_transaction_id: null
              gateway_order_id: null
              starting_balance_in_cents: 0
              component_id: null
              tax_id: null
              customer_id: 14332342
            - created_at: '2016-10-26T14:41:22-04:00'
              subscription_id: 14823581
              type: Charge
              memo: CO Tax (8.845%)
              kind: tax
              amount_in_cents: 177
              ending_balance_in_cents: 2177
              success: true
              id: 159671240
              payment_id: null
              product_id: 3794121
              transaction_type: charge
              gateway_transaction_id: null
              gateway_order_id: null
              starting_balance_in_cents: 2000
              component_id: null
              tax_id: null
              customer_id: 14332342
          payments_and_credits:
            - created_at: '2016-10-26T15:16:23-04:00'
              subscription_id: 14823581
              type: Payment
              memo: Entered by operation 928
              kind: manual
              amount_in_cents: 2177
              ending_balance_in_cents: 0
              success: true
              id: 159676118
              payment_id: null
              product_id: 3794121
              transaction_type: payment
              gateway_transaction_id: null
              gateway_order_id: null
              starting_balance_in_cents: 2177
              component_id: null
              tax_id: null
              customer_id: 14332342
              card_number: null
              card_expiration: null
              card_type: null
    x-stoplight:
      id: invoices/list-all-invoices-query-response
      name: List All Invoices (Multiple Query)
      public: true
  invoices/read-the-invoice-by-id:
    title: Read the Invoice by ID
    type: object
    properties:
      invoice:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          statement_id:
            type: integer
          site_id:
            type: integer
          state:
            type: string
          total_amount_in_cents:
            type: integer
          paid_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          amount_due_in_cents:
            type: integer
          number:
            type: string
          charges:
            type: array
            items:
              type: object
              properties:
                created_at:
                  type: string
                subscription_id:
                  type: integer
                type:
                  type: string
                memo:
                  type: string
                kind:
                  type: string
                amount_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: integer
                success:
                  type: boolean
                id:
                  type: integer
                payment_id:
                  type: integer
                product_id:
                  type: integer
                transaction_type:
                  type: string
                gateway_transaction_id:
                  type: 'null'
                gateway_order_id:
                  type: 'null'
                starting_balance_in_cents:
                  type: integer
                component_id:
                  type: 'null'
                tax_id:
                  type: 'null'
                customer_id:
                  type: integer
          payments_and_credits:
            type: array
            items:
              type: object
              properties:
                created_at:
                  type: string
                subscription_id:
                  type: integer
                type:
                  type: string
                memo:
                  type: string
                kind:
                  type: string
                amount_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: integer
                success:
                  type: boolean
                id:
                  type: integer
                payment_id:
                  type: 'null'
                product_id:
                  type: integer
                transaction_type:
                  type: string
                gateway_transaction_id:
                  type: string
                gateway_order_id:
                  type: 'null'
                starting_balance_in_cents:
                  type: integer
                component_id:
                  type: 'null'
                tax_id:
                  type: 'null'
                customer_id:
                  type: integer
                card_number:
                  type: string
                card_expiration:
                  type: string
                card_type:
                  type: string
    example:
      invoice:
        id: 1240345
        subscription_id: 14900541
        statement_id: 79334531
        site_id: 31615
        state: paid
        total_amount_in_cents: 4250
        paid_at: '2016-11-01T12:20:21-04:00'
        created_at: '2016-10-26T14:38:40-04:00'
        updated_at: '2016-11-01T12:20:21-04:00'
        amount_due_in_cents: 0
        number: '000014'
        charges:
          - created_at: '2016-10-26T14:38:39-04:00'
            subscription_id: 14900541
            type: Charge
            memo: Basic Plan (10/26/2016 - 11/26/2016)
            kind: baseline
            amount_in_cents: 4000
            ending_balance_in_cents: 4000
            success: true
            id: 159670144
            payment_id: 160493169
            product_id: 3792003
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 0
            component_id: null
            tax_id: null
            customer_id: 14399371
          - created_at: '2016-10-26T14:38:39-04:00'
            subscription_id: 14900541
            type: Charge
            memo: MA Tax (6.25%)
            kind: tax
            amount_in_cents: 250
            ending_balance_in_cents: 4250
            success: true
            id: 159670145
            payment_id: 160493169
            product_id: 3792003
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 4000
            component_id: null
            tax_id: null
            customer_id: 14399371
        payments_and_credits:
          - created_at: '2016-11-01T12:20:20-04:00'
            subscription_id: 14900541
            type: Payment
            memo: One Time Credit Card Payment for Invoice
            kind: one_time
            amount_in_cents: 4250
            ending_balance_in_cents: -4450
            success: true
            id: 160493169
            payment_id: null
            product_id: 3792003
            transaction_type: payment
            gateway_transaction_id: '53433'
            gateway_order_id: null
            starting_balance_in_cents: -200
            component_id: null
            tax_id: null
            customer_id: 14399371
            card_number: XXXX-XXXX-XXXX-1
            card_expiration: 01/2026
            card_type: bogus
    x-stoplight:
      id: invoices/read-the-invoice-by-id
      name: Read the Invoice by ID
      public: true
  invoices/payments/create-payment-input:
    title: Create Payment Input
    type: object
    properties:
      payment:
        type: object
        properties:
          amount:
            type: integer
          memo:
            type: string
    example:
      payment:
        amount: 10
        memo: Lorem ipsum
    x-stoplight:
      id: invoices/payments/create-payment-input
      name: Create Payment Input
      public: true
  invoices/charges/create-invoice-charge-input:
    title: Create Invoice Charge Input
    type: object
    properties:
      payment:
        type: object
        properties:
          amount:
            type: integer
          memo:
            type: string
    example:
      payment:
        amount: 10
        memo: Lorem ipsum
    x-stoplight:
      id: invoices/charges/create-invoice-charge-input
      name: Create Invoice Charge Input
      public: true
  invoices/charges/create-invoice-charge-output:
    title: Create Invoice Charge Output
    type: object
    properties:
      charge:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: 'null'
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
          original_amount_in_cents:
            type: 'null'
          discount_amount_in_cents:
            type: 'null'
          taxable_amount_in_cents:
            type: 'null'
          taxations:
            type: array
            items:
              type: object
    example:
      charge:
        id: 160573619
        subscription_id: 14900541
        type: Charge
        kind: delay_capture
        transaction_type: charge
        success: true
        amount_in_cents: 100
        memo: This is the description of the one time charge.
        created_at: '2016-11-01T16:40:56-04:00'
        starting_balance_in_cents: 2750
        ending_balance_in_cents: 2850
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: null
        product_id: 3792003
        tax_id: null
        component_id: null
        statement_id: 79702531
        customer_id: 14399371
        original_amount_in_cents: null
        discount_amount_in_cents: null
        taxable_amount_in_cents: null
        taxations: []
    x-stoplight:
      id: invoices/charges/create-invoice-charge-output
      name: Create Invoice Charge Output
      public: true
  invoices/credits/create-invoice-credit-input:
    title: Create Invoice Credit Input
    type: object
    properties:
      adjustment:
        type: object
        properties:
          amount:
            type: integer
          memo:
            type: string
    example:
      adjustment:
        amount: 10
        memo: Credit for recycling old computers
    x-stoplight:
      id: invoices/credits/create-invoice-credit-input
      name: Create Invoice Credit Input
      public: true
  invoices/credits/create-invoice-credit-output:
    title: Create Invoice Credit Output
    type: object
    properties:
      adjustment:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: 'null'
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: 'null'
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
    example:
      adjustment:
        id: 165068820
        subscription_id: 14823581
        type: Adjustment
        kind: null
        transaction_type: adjustment
        success: true
        amount_in_cents: -1000
        memo: Credit for recycling old computers
        created_at: '2016-12-05T13:37:28-05:00'
        starting_balance_in_cents: 177
        ending_balance_in_cents: -823
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: null
        product_id: 3794121
        tax_id: null
        component_id: null
        statement_id: 79335006
        customer_id: 14332342
    x-stoplight:
      id: invoices/credits/create-invoice-credit-output
      name: Create Invoice Credit Output
      public: true
  metadata/create-metadata-input:
    title: Create Metadata Input
    type: object
    properties:
      metadata:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
    example:
      metadata:
        - name: Color
          value: Blue
        - name: Something
          value: Useful
    x-stoplight:
      id: metadata/create-metadata-input
      name: Create Metadata Input
      public: true
  metadata/update-metadata-input:
    title: Update Metadata Input
    type: object
    properties:
      metadata:
        type: object
        properties:
          current_name:
            type: string
          name:
            type: string
          value:
            type: string
    example:
      metadata:
        current_name: Color
        name: Shirt Color
        value: Blue
    x-stoplight:
      id: metadata/update-metadata-input
      name: Update Metadata Input
      public: true
  metadata/create-output:
    title: Create Metadata Output
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        resource_id:
          type: integer
        value:
          type: string
    example:
      - name: Color
        resource_id: 100000
        value: Blue
      - name: Something
        resource_id: 100000
        value: Useful
    x-stoplight:
      id: metadata/create-output
      name: Create Metadata Output
      public: true
  metafields/list-metafields-output:
    title: List Metafields Output
    type: object
    properties:
      total_count:
        type: integer
      current_page:
        type: integer
      total_pages:
        type: integer
      per_page:
        type: integer
      metafields:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            scope:
              type: object
              properties:
                hosted:
                  type: array
                  items:
                    type: object
                csv:
                  type: string
                statements:
                  type: string
                invoices:
                  type: string
                portal:
                  type: string
            data_count:
              type: integer
            input_type:
              type: string
            enum:
              type: 'null'
    example:
      total_count: 1
      current_page: 1
      total_pages: 1
      per_page: 20
      metafields:
        - name: Pants
          scope:
            hosted: []
            csv: '0'
            statements: '0'
            invoices: '0'
            portal: '0'
          data_count: 1
          input_type: text
          enum: null
    x-stoplight:
      id: metafields/list-metafields-output
      name: List Metafields Output
      public: true
  metafields/create-metafields-input:
    title: Create Metafields Input
    type: object
    properties:
      metafields:
        type: object
        properties:
          name:
            type: string
          scope:
            type: object
            properties:
              hosted:
                type: array
                items:
                  type: string
              csv:
                type: string
              invoices:
                type: string
              statements:
                type: string
              portal:
                type: string
    example:
      metafields:
        name: Color
        scope:
          hosted:
            - '1'
            - '2'
            - '3'
          csv: '0'
          invoices: '1'
          statements: '1'
          portal: '0'
    x-stoplight:
      id: metafields/create-metafields-input
      name: Create Metafields Input
      public: true
  metafields/update-metafields-input:
    title: Update Metafields Input
    type: object
    properties:
      metafields:
        type: object
        properties:
          current_name:
            type: string
          name:
            type: string
          scope:
            type: object
            properties:
              hosted:
                type: array
                items:
                  type: string
              csv:
                type: string
              invoices:
                type: string
              statements:
                type: string
    example:
      metafields:
        current_name: shirt
        name: new-shirt
        scope:
          hosted:
            - '1'
            - '1'
            - '1'
          csv: '1'
          invoices: '1'
          statements: '1'
          portal: '0'
    x-stoplight:
      id: metafields/update-metafields-input
      name: Update Metafields Input
      public: true
  metafields/create-metafields-output:
    title: Create Metafields Output
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        scope:
          type: object
          properties:
            hosted:
              type: array
              items:
                type: object
            csv:
              type: string
            statements:
              type: string
            invoices:
              type: string
            portal:
              type: string
        data_count:
          type: integer
        input_type:
          type: string
        enum:
          type: 'null'
    example:
      - name: Color
        scope:
          hosted: []
          csv: '0'
          statements: '0'
          invoices: '0'
          portal: '0'
        data_count: 0
        input_type: text
        enum: null
      - name: Brand
        scope:
          hosted: []
          csv: '0'
          statements: '0'
          invoices: '0'
          portal: '0'
        data_count: 0
        input_type: text
        enum: null
    x-stoplight:
      id: metafields/create-metafields-output
      name: Create Metafields Output
      public: true
  metafields/update-metafields-output:
    title: Update Metafields Output
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        scope:
          type: object
          properties:
            hosted:
              type: array
              items:
                type: object
            csv:
              type: string
            statements:
              type: string
            invoices:
              type: string
            portal:
              type: string
        data_count:
          type: integer
        input_type:
          type: string
        enum:
          type: 'null'
    example:
      - name: Shirts
        scope:
          hosted: []
          csv: '0'
          statements: '0'
          invoices: '0'
          portal: '0'
        data_count: 0
        input_type: text
        enum: null
    x-stoplight:
      id: metafields/update-metafields-output
      name: Update Metafields Output
      public: true
  components/metered/read-usage-output-subscription:
    title: Read Usage by Component for a Subscription
    type: array
    items:
      type: object
      properties:
        usage:
          type: object
          properties:
            id:
              type: integer
            memo:
              type: string
            created_at:
              type: string
            quantity:
              type: integer
    example:
      - usage:
          id: 109806402
          memo: ''
          created_at: '2016-11-29T15:22:18-05:00'
          quantity: 100
    x-stoplight:
      id: components/metered/read-usage-output-subscription
      name: Read Usage by Component for a Subscription
      public: true
  components/metered/create-usage-input:
    title: Create Usage Input
    type: object
    properties:
      usage:
        type: object
        properties:
          quantity:
            type: integer
          price_point_id:
            type: string
          memo:
            type: string
        required:
          - quantity
    example:
      usage:
        quantity: 1000
        price_point_id: '149416'
        memo: My memo
    x-stoplight:
      id: components/metered/create-usage-input
      name: Create Usage Input
      public: true
  components/metered/create-usage-output:
    title: Create Usage Output
    type: object
    properties:
      usage:
        type: object
        properties:
          id:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          price_point_id:
            type: integer
          quantity:
            type: integer
    example:
      usage:
        id: 138522957
        memo: My memo
        created_at: '2017-11-13T10:05:32-06:00'
        price_point_id: 149416
        quantity: 1000
    x-stoplight:
      id: components/metered/create-usage-output
      name: Create Usage Output
      public: true
  migrations/create-migration-input:
    title: Create Migration Input
    type: object
    properties:
      migration:
        type: object
        properties:
          product_id:
            type: integer
    example:
      migration:
        product_id: 3801242
    x-stoplight:
      id: migrations/create-migration-input
      name: Create Migration Input
      public: true
  migrations/create-migration-output:
    title: Create Migration Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: boolean
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: 'null'
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: string
          coupon_use_count:
            type: 'null'
          coupon_uses_allowed:
            type: 'null'
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: 'null'
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: 'null'
              address_2:
                type: 'null'
              city:
                type: 'null'
              state:
                type: 'null'
              zip:
                type: 'null'
              country:
                type: 'null'
              phone:
                type: string
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: string
              cc_emails:
                type: 'null'
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: integer
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type: 'null'
                    return_params:
                      type: string
                    url:
                      type: string
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: string
              billing_city:
                type: string
              billing_state:
                type: string
              billing_zip:
                type: string
              billing_country:
                type: string
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: string
              payment_type:
                type: string
    example:
      subscription:
        id: 15054201
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2016-11-02T10:20:57-04:00'
        created_at: '2016-11-02T10:20:55-04:00'
        updated_at: '2016-11-03T13:31:49-04:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2016-12-03T12:31:49-05:00'
        next_assessment_at: '2016-12-03T12:31:49-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2016-11-03T13:31:48-04:00'
        previous_state: active
        signup_payment_id: 160680121
        signup_revenue: '0.00'
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: 14000
        product_price_in_cents: 10000
        product_version_number: 4
        payment_type: credit_card
        referral_code: ghnhvy
        coupon_use_count: null
        coupon_uses_allowed: null
        customer:
          id: 14543792
          first_name: Frankie
          last_name: Test
          organization: null
          email: testfrankie111@test.com
          created_at: '2016-11-02T10:20:55-04:00'
          updated_at: '2016-11-02T10:20:58-04:00'
          reference: null
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: '5555551212'
          portal_invite_last_sent_at: '2016-11-02T10:20:58-04:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2016-11-02T10:20:58-04:00'
          cc_emails: null
        product:
          id: 3801242
          name: Free product
          handle: zero-dollar-product
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-04-21T16:08:39-04:00'
          updated_at: '2016-08-03T11:27:53-04:00'
          price_in_cents: 10000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: 0
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: false
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 4
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 283460
              return_url: null
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product'
        credit_card:
          id: 10088716
          first_name: F
          last_name: NB
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 1
          expiration_year: 2017
          customer_id: 14543792
          current_vault: bogus
          vault_token: '1'
          billing_address: 123 Montana Way
          billing_city: Billings
          billing_state: MT
          billing_zip: '59101'
          billing_country: US
          customer_vault_token: null
          billing_address_2: Apt. 1
          payment_type: credit_card
    x-stoplight:
      id: migrations/create-migration-output
      name: Create Migration Output
      public: true
  migrations/preview-migration-input:
    title: Preview Migration Input
    type: object
    properties:
      migration:
        type: object
        properties:
          product_id:
            type: integer
    example:
      migration:
        product_id: 3861800
    x-stoplight:
      id: migrations/preview-migration-input
      name: Preview Migration Input
      public: true
  migrations/preview-migration-output:
    title: Preview Migration Output
    type: object
    properties:
      migration:
        type: object
        properties:
          prorated_adjustment_in_cents:
            type: integer
          charge_in_cents:
            type: integer
          payment_due_in_cents:
            type: integer
          credit_applied_in_cents:
            type: integer
    example:
      migration:
        prorated_adjustment_in_cents: 0
        charge_in_cents: 5000
        payment_due_in_cents: 0
        credit_applied_in_cents: 0
    x-stoplight:
      id: migrations/preview-migration-output
      name: Preview Migration Output
      public: true
  migrations/create-migration-input-trial:
    title: Create Migration Input Trial
    type: object
    properties:
      migration:
        type: object
        properties:
          product_id:
            type: integer
          include_trial:
            type: integer
    example:
      migration:
        product_id: 3861800
        include_trial: 1
    x-stoplight:
      id: migrations/create-migration-input-trial
      name: Create Migration Input Trial
      public: true
  migrations/create-migration-input-trial-output:
    title: Create Migration Input Trial Output
    type: object
    properties:
      migration:
        type: object
        properties:
          product_id:
            type: integer
          include_trial:
            type: integer
    example:
      subscription:
        id: 15054201
        state: trialing
        trial_started_at: '2016-11-03T13:43:36-04:00'
        trial_ended_at: '2016-11-10T12:43:36-05:00'
        activated_at: '2016-11-02T10:20:57-04:00'
        created_at: '2016-11-02T10:20:55-04:00'
        updated_at: '2016-11-03T13:43:36-04:00'
        expires_at: null
        balance_in_cents: -13989
        current_period_ends_at: '2016-11-10T12:43:36-05:00'
        next_assessment_at: '2016-11-10T12:43:36-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2016-11-03T13:43:35-04:00'
        previous_state: active
        signup_payment_id: 160680121
        signup_revenue: '0.00'
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: 14000
        product_price_in_cents: 1000
        product_version_number: 6
        payment_type: credit_card
        referral_code: ghnhvy
        coupon_use_count: null
        coupon_uses_allowed: null
        customer:
          id: 14543792
          first_name: Frankie
          last_name: Test
          organization: null
          email: testfrankie111@test.com
          created_at: '2016-11-02T10:20:55-04:00'
          updated_at: '2016-11-02T10:20:58-04:00'
          reference: null
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: '5555551212'
          portal_invite_last_sent_at: '2016-11-02T10:20:58-04:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2016-11-02T10:20:58-04:00'
          cc_emails: null
        product:
          id: 3861800
          name: Trial Product
          handle: trial-product
          description: Trial period with payment expected at end of trial.
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-07-08T09:53:55-04:00'
          updated_at: '2016-09-05T13:00:36-04:00'
          price_in_cents: 1000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: 0
          trial_interval: 7
          trial_interval_unit: day
          archived_at: null
          require_credit_card: true
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 6
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 294791
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product'
        credit_card:
          id: 10088716
          first_name: F
          last_name: NB
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 1
          expiration_year: 2017
          customer_id: 14543792
          current_vault: bogus
          vault_token: '1'
          billing_address: 123 Montana Way
          billing_city: Billings
          billing_state: MT
          billing_zip: '59101'
          billing_country: US
          customer_vault_token: null
          billing_address_2: Apt. 10
          payment_type: credit_card
    x-stoplight:
      id: migrations/create-migration-input-trial-output
      name: Create Migration Input Trial Output
      public: true
  notes/list-notes-output:
    title: Read Notes Output
    type: array
    items:
      type: object
      properties:
        note:
          type: object
          properties:
            body:
              type: string
            created_at:
              type: string
            id:
              type: integer
            sticky:
              type: boolean
            subscription_id:
              type: integer
            updated_at:
              type: string
    example:
      - note:
          body: Test note.
          created_at: '2015-06-15T13:26:47-04:00'
          id: 5
          sticky: false
          subscription_id: 100046
          updated_at: '2015-06-15T13:28:12-04:00'
      - note:
          body: Another test note.
          created_at: '2015-06-15T12:04:46-04:00'
          id: 4
          sticky: false
          subscription_id: 100046
          updated_at: '2015-06-15T13:26:33-04:00'
    x-stoplight:
      id: notes/list-notes-output
      name: Read Notes Output
      public: true
  notes/read-show-specific-note-output:
    title: Read Specific Note Output
    type: object
    properties:
      note:
        type: object
        properties:
          body:
            type: string
          created_at:
            type: string
          id:
            type: integer
          sticky:
            type: boolean
          subscription_id:
            type: integer
          updated_at:
            type: string
    example:
      note:
        body: Test note.
        created_at: '2015-06-15T13:26:47-04:00'
        id: 5
        sticky: false
        subscription_id: 100046
        updated_at: '2015-06-15T13:28:12-04:00'
    x-stoplight:
      id: notes/read-show-specific-note-output
      name: Read Specific Note Output
      public: true
  notes/update-note-input:
    title: Update Note Input
    type: object
    properties:
      note:
        type: object
        properties:
          body:
            type: string
          sticky:
            type: boolean
    example:
      note:
        body: Modified test note.
        sticky: true
    x-stoplight:
      id: notes/update-note-input
      name: Update Note Input
      public: true
  notes/update-note-output:
    title: Update Note Output
    type: object
    properties:
      note:
        type: object
        properties:
          id:
            type: integer
          body:
            type: string
          subscription_id:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
          sticky:
            type: boolean
    example:
      note:
        id: 105025
        body: Modified test note.
        subscription_id: 15054201
        created_at: '2016-11-03T14:47:08-04:00'
        updated_at: '2016-11-03T14:49:09-04:00'
        sticky: true
    x-stoplight:
      id: notes/update-note-output
      name: Update Note Output
      public: true
  notes/delete-output:
    title: Delete Output
    type: object
    properties:
      ok:
        type: string
    example:
      ok: ok
    x-stoplight:
      id: notes/delete-output
      name: Delete Output
      public: true
  payments/create-payment-input:
    title: Create Payment Input
    type: object
    properties:
      payment:
        type: object
        properties:
          amount:
            type: integer
          memo:
            type: string
    example:
      payment:
        amount: 10
        memo: Client x paid with $10.00 of nickles
    x-stoplight:
      id: payments/create-payment-input
      name: Create Payment Input
      public: true
  payments/create-payment-output:
    title: Create Payment Output
    type: object
    properties:
      payment:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: 'null'
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
          card_number:
            type: 'null'
          card_expiration:
            type: 'null'
          card_type:
            type: 'null'
          refunded_amount_in_cents:
            type: integer
    example:
      payment:
        id: 160873334
        subscription_id: 15054201
        type: Payment
        kind: manual
        transaction_type: payment
        success: true
        amount_in_cents: 1000
        memo: Client x paid with $10.00 of nickles
        created_at: '2016-11-03T14:58:30-04:00'
        starting_balance_in_cents: -13989
        ending_balance_in_cents: -14989
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: null
        product_id: 3861800
        tax_id: null
        component_id: null
        statement_id: 79870822
        customer_id: 14543792
        card_number: null
        card_expiration: null
        card_type: null
        refunded_amount_in_cents: 0
    x-stoplight:
      id: payments/create-payment-output
      name: Create Payment Output
      public: true
  payment-profiles/read-payment-output-cc:
    title: Read Payment Output - Credit Card
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          masked_card_number:
            type: string
          card_type:
            type: string
          expiration_month:
            type: integer
          expiration_year:
            type: integer
          customer_id:
            type: integer
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          customer_vault_token:
            type: 'null'
          billing_address_2:
            type: string
          payment_type:
            type: string
    example:
      payment_profile:
        id: 10088716
        first_name: Test
        last_name: Subscription
        masked_card_number: XXXX-XXXX-XXXX-1
        card_type: bogus
        expiration_month: 1
        expiration_year: 2022
        customer_id: 14543792
        current_vault: bogus
        vault_token: '1'
        billing_address: 123 Montana Way
        billing_city: Billings
        billing_state: MT
        billing_zip: '59101'
        billing_country: US
        customer_vault_token: null
        billing_address_2: ''
        payment_type: credit_card
    x-stoplight:
      id: payment-profiles/read-payment-output-cc
      name: Read Payment Output - Credit Card
      public: true
  payment-profile/read-payment-output-bank-account:
    title: Read Payment Output - Bank Account
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          customer_id:
            type: integer
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          customer_vault_token:
            type: 'null'
          billing_address_2:
            type: string
          bank_name:
            type: string
          masked_bank_routing_number:
            type: string
          masked_bank_account_number:
            type: string
          bank_account_type:
            type: string
          bank_account_holder_type:
            type: string
          payment_type:
            type: string
          verified:
            type: boolean
            default: false
            description: denotes whether a bank account has been verified by providing the amounts of two small deposits made into the account
    example:
      payment_profile:
        id: 10089892
        first_name: Chester
        last_name: Tester
        customer_id: 14543792
        current_vault: bogus
        vault_token: '0011223344'
        billing_address: 456 Juniper Court
        billing_city: Boulder
        billing_state: CO
        billing_zip: '80302'
        billing_country: US
        customer_vault_token: null
        billing_address_2: ''
        bank_name: Bank of Kansas City
        masked_bank_routing_number: XXXX6789
        masked_bank_account_number: XXXX3344
        bank_account_type: checking
        bank_account_holder_type: personal
        payment_type: bank_account
    x-stoplight:
      id: payment-profile/read-payment-output-bank-account
      name: Read Payment Output - Bank Account
      public: true
  payment-profiles/create-payment-profile-input:
    title: Create Payment Profile Input
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          masked_card_number:
            type: string
          card_type:
            type: string
          expiration_month:
            type: integer
          expiration_year:
            type: integer
          customer_id:
            type: integer
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          customer_vault_token:
            type: 'null'
          billing_address_2:
            type: 'null'
          payment_type:
            type: string
        required:
          - customer_id
    example:
      payment_profile:
        first_name: Jessica
        last_name: Test
        masked_card_number: XXXX-XXXX-XXXX-1111
        card_type: visa
        expiration_month: 10
        expiration_year: 2018
        customer_id: 19195410
        current_vault: bogus
        vault_token: '1'
        billing_address: 123 Main St.
        billing_city: Boston
        billing_state: MA
        billing_zip: '02120'
        billing_country: US
        customer_vault_token: null
        billing_address_2: null
        payment_type: credit_card
    x-stoplight:
      id: payment-profiles/create-payment-profile-input
      name: Create Payment Profile Input
      public: true
  payment-profile/create-payment-profile-output:
    title: Create Payment Profile Output
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          masked_card_number:
            type: 'null'
          card_type:
            type: string
          expiration_month:
            type: integer
          expiration_year:
            type: integer
          customer_id:
            type: integer
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          customer_vault_token:
            type: 'null'
          billing_address_2:
            type: 'null'
          payment_type:
            type: string
    example:
      payment_profile:
        id: 13731211
        first_name: Jessica
        last_name: Test
        masked_card_number: null
        card_type: visa
        expiration_month: 10
        expiration_year: 2018
        customer_id: 19195410
        current_vault: bogus
        vault_token: '1'
        billing_address: 123 Main St.
        billing_city: Boston
        billing_state: MA
        billing_zip: '02120'
        billing_country: US
        customer_vault_token: null
        billing_address_2: null
        payment_type: credit_card
    x-stoplight:
      id: payment-profile/create-payment-profile-output
      name: Create Payment Profile Output
      public: true
  product-families/list-product-family-by-id:
    title: Read Product Family via Product Family ID
    type: object
    properties:
      product_family:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          description:
            type: string
          handle:
            type: string
          accounting_code:
            type: 'null'
    example:
      product_family:
        id: 527890
        name: Acme Projects
        description: ''
        handle: billing-plans
        accounting_code: null
    x-stoplight:
      id: product-families/list-product-family-by-id
      name: Read Product Family via Product Family ID
      public: true
  product-families/create-product-family-input:
    title: Create Product Family Input
    type: object
    properties:
      product_family:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
    example:
      product_family:
        name: Acme Projects
        description: Amazing project management tool
    x-stoplight:
      id: product-families/create-product-family-input
      name: Create Product Family Input
      public: true
  product-families/create-product-family-output:
    title: Create Product Family Output
    type: object
    properties:
      product_family:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          description:
            type: string
          handle:
            type: string
          accounting_code:
            type: 'null'
    example:
      product_family:
        id: 933860
        name: Acme Projects
        description: Amazing project management tool
        handle: acme-projects
        accounting_code: null
    x-stoplight:
      id: product-families/create-product-family-output
      name: Create Product Family Output
      public: true
  products/read-the-product-via-chargify-id:
    title: Read the Product by Product ID
    type: object
    properties:
      product:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          expiration_interval:
            type: 'null'
          expiration_interval_unit:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          initial_charge_in_cents:
            type: 'null'
          '':
            type: integer
          trial_interval:
            type: integer
          trial_interval_unit:
            type: string
          archived_at:
            type: 'null'
          require_credit_card:
            type: boolean
          return_params:
            type: string
          taxable:
            type: boolean
          update_return_url:
            type: string
          initial_charge_after_trial:
            type: boolean
          version_number:
            type: integer
          update_return_params:
            type: string
          product_family:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              handle:
                type: string
              accounting_code:
                type: 'null'
          public_signup_pages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                return_url:
                  type: string
                return_params:
                  type: string
                url:
                  type: string
    example:
      product:
        id: 3861800
        name: Trial Product
        handle: trial-product
        description: Trial period with payment expected at end of trial.
        accounting_code: ''
        request_credit_card: true
        expiration_interval: null
        expiration_interval_unit: never
        created_at: '2016-07-08T09:53:55-04:00'
        updated_at: '2016-09-05T13:00:36-04:00'
        price_in_cents: 1000
        interval: 1
        interval_unit: month
        initial_charge_in_cents: null
        trial_price_in_cents: 0
        trial_interval: 7
        trial_interval_unit: day
        archived_at: null
        require_credit_card: true
        return_params: ''
        taxable: false
        update_return_url: ''
        initial_charge_after_trial: false
        version_number: 6
        update_return_params: ''
        product_family:
          id: 527890
          name: Acme Projects
          description: ''
          handle: billing-plans
          accounting_code: null
        public_signup_pages:
          - id: 294791
            return_url: ''
            return_params: ''
            url: 'https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product'
    x-stoplight:
      id: products/read-the-product-via-chargify-id
      name: Read the Product by Product ID
      public: true
  products/create-a-product-input:
    title: Create a Product Input
    type: object
    properties:
      product:
        type: object
        properties:
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          auto_create_signup_page:
            type: boolean
          tax_code:
            type: string
    example:
      product:
        name: ipsum
        handle: sed qui eu
        description: exercitation
        accounting_code: dolor enim proident qui
        request_credit_card: false
        price_in_cents: -53555719
        interval: -72364360
        interval_unit: eu
        auto_create_signup_page: true
        tax_code: D0000000
    x-stoplight:
      id: products/create-a-product-input
      name: Create a Product Input
      public: true
  products/create-a-product-output:
    title: Create a Product Output
    type: object
    properties:
      product:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          expiration_interval:
            type: 'null'
          expiration_interval_unit:
            type: 'null'
          created_at:
            type: string
          updated_at:
            type: string
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          initial_charge_in_cents:
            type: 'null'
          trial_price_in_cents:
            type: 'null'
          trial_interval:
            type: 'null'
          trial_interval_unit:
            type: 'null'
          archived_at:
            type: 'null'
          require_credit_card:
            type: boolean
          return_params:
            type: 'null'
          taxable:
            type: boolean
          update_return_url:
            type: 'null'
          initial_charge_after_trial:
            type: boolean
          version_number:
            type: integer
          update_return_params:
            type: 'null'
          product_family:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              handle:
                type: string
              accounting_code:
                type: 'null'
          public_signup_pages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                return_url:
                  type: 'null'
                return_params:
                  type: 'null'
                url:
                  type: string
    example:
      product:
        id: 4364984
        name: Gold Plan
        handle: gold
        description: This is our gold plan.
        accounting_code: '123'
        request_credit_card: true
        expiration_interval: null
        expiration_interval_unit: null
        created_at: '2016-11-04T16:31:15-04:00'
        updated_at: '2016-11-04T16:31:15-04:00'
        price_in_cents: 1000
        interval: 1
        interval_unit: month
        initial_charge_in_cents: null
        trial_price_in_cents: null
        trial_interval: null
        trial_interval_unit: null
        archived_at: null
        require_credit_card: true
        return_params: null
        taxable: false
        update_return_url: null
        initial_charge_after_trial: false
        version_number: 1
        update_return_params: null
        product_family:
          id: 527890
          name: Acme Projects
          description: ''
          handle: billing-plans
          accounting_code: null
        public_signup_pages:
          - id: 301078
            return_url: null
            return_params: null
            url: 'https://general-goods.chargify.com/subscribe/ftgbpq7f5qpr/gold'
    x-stoplight:
      id: products/create-a-product-output
      name: Create a Product Output
      public: true
  products/update-product-input:
    title: Update Product Input
    type: object
    properties:
      product:
        type: object
        properties:
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          auto_create_signup_page:
            type: boolean
          tax_code:
            type: string
    example:
      product:
        name: Platinum Plan
        handle: platinum
        description: This is our platinum plan.
        accounting_code: '123'
        request_credit_card: true
        price_in_cents: 1000
        interval: 1
        interval_unit: month
        auto_create_signup_page: true
        tax_code: D0000000
    x-stoplight:
      id: products/update-product-input
      name: Update Product Input
      public: true
  products/update-product-output:
    title: Update Product Output
    type: object
    properties:
      product:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          expiration_interval:
            type: 'null'
          expiration_interval_unit:
            type: 'null'
          created_at:
            type: string
          updated_at:
            type: string
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          initial_charge_in_cents:
            type: 'null'
          trial_price_in_cents:
            type: 'null'
          trial_interval:
            type: 'null'
          trial_interval_unit:
            type: 'null'
          archived_at:
            type: 'null'
          require_credit_card:
            type: boolean
          return_params:
            type: 'null'
          taxable:
            type: boolean
          update_return_url:
            type: 'null'
          initial_charge_after_trial:
            type: boolean
          version_number:
            type: integer
          update_return_params:
            type: 'null'
          product_family:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              handle:
                type: string
              accounting_code:
                type: 'null'
          public_signup_pages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                return_url:
                  type: 'null'
                return_params:
                  type: 'null'
                url:
                  type: string
    example:
      product:
        id: 4365034
        name: Platinum Plan
        handle: platinum
        description: This is our platinum plan.
        accounting_code: '123'
        request_credit_card: true
        expiration_interval: null
        expiration_interval_unit: null
        created_at: '2016-11-04T16:34:29-04:00'
        updated_at: '2016-11-04T16:37:11-04:00'
        price_in_cents: 1000
        interval: 1
        interval_unit: month
        initial_charge_in_cents: null
        trial_price_in_cents: null
        trial_interval: null
        trial_interval_unit: null
        archived_at: null
        require_credit_card: true
        return_params: null
        taxable: false
        update_return_url: null
        initial_charge_after_trial: false
        version_number: 1
        update_return_params: null
        product_family:
          id: 527890
          name: Acme Projects
          description: ''
          handle: billing-plans
          accounting_code: null
        public_signup_pages:
          - id: 301079
            return_url: null
            return_params: null
            url: 'https://general-goods.chargify.com/subscribe/wgyd96tb5pj9/platinum'
    x-stoplight:
      id: products/update-product-output
      name: Update Product Output
      public: true
  components/quantity/create-subscription-with-quantity-based-component:
    title: Create Subscription with Quantity-based Component
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
          components:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                price_point_id:
                  type: integer
                allocated_quantity:
                  type: integer
              required:
                - component_id
                - allocated_quantity
    example:
      subscription:
        product_handle: basic
        customer_attributes:
          first_name: Matt
          last_name: Example
          email: matt@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
        components:
          - component_id: 277221
            price_point_id: 20001
            allocated_quantity: 18
    x-stoplight:
      id: components/quantity/create-subscription-with-quantity-based-component
      name: Create Subscription with Quantity-based Component
      public: true
  components/quantity/reading-current-quantity-response:
    title: Reading Current Quantity Response
    type: object
    properties:
      component:
        type: object
        properties:
          component_id:
            type: integer
          subscription_id:
            type: integer
          allocated_quantity:
            type:
              - integer
              - string
          name:
            type: string
          kind:
            type: string
          unit_name:
            type: string
          pricing_scheme:
            type: string
          price_point_id:
            type: integer
    example:
      component:
        component_id: 399850
        subscription_id: 18342261
        allocated_quantity: 29
        name: Bronze Subscriptions 123
        kind: quantity_based_component
        unit_name: Bronze Subscriptions
        pricing_scheme: per_unit
        price_point_id: 121000
    x-stoplight:
      id: components/quantity/reading-current-quantity-response
      name: Reading Current Quantity Response
      public: true
  referral/validate-response:
    title: Validate Referral Response
    type: object
    properties:
      referral_code:
        type: object
        properties:
          id:
            type: integer
          site_id:
            type: integer
          subscription_id:
            type: integer
          code:
            type: string
    example:
      referral_code:
        id: 919199
        site_id: 31615
        subscription_id: 15076690
        code: gj4rht
    x-stoplight:
      id: referral/validate-response
      name: Validate Referral Response
      public: true
  refunds/create-a-refund-request:
    title: Create a Refund Request
    type: object
    properties:
      refund:
        type: object
        properties:
          payment_id:
            type: string
          amount:
            type: string
          memo:
            type: string
    example:
      refund:
        payment_id: '162269766'
        amount: '100.00'
        memo: Your memo here.
    x-stoplight:
      id: refunds/create-a-refund-request
      name: Create a Refund Request
      public: true
  refunds/create-a-refund-response:
    title: Create a Refund Response
    type: object
    properties:
      refund:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: 'null'
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: string
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: integer
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
    example:
      refund:
        id: 162272485
        subscription_id: 15236915
        type: Refund
        kind: null
        transaction_type: refund
        success: true
        amount_in_cents: 10000
        memo: Your memo here.
        created_at: '2016-11-14T15:14:14-05:00'
        starting_balance_in_cents: 0
        ending_balance_in_cents: 0
        gateway_used: bogus
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: 162269766
        product_id: 3792003
        tax_id: null
        component_id: null
        statement_id: 80500632
        customer_id: 14714298
    x-stoplight:
      id: refunds/create-a-refund-response
      name: Create a Refund Response
      public: true
  refunds/external/create-an-external-refund-request:
    title: Create an External Refund Request
    type: object
    properties:
      refund:
        type: object
        properties:
          amount:
            type: integer
          memo:
            type: string
      external:
        type: integer
    example:
      refund:
        amount: 20
        memo: 'Refunded with check# 123'
      external: 1
    x-stoplight:
      id: refunds/external/create-an-external-refund-request
      name: Create an External Refund Request
      public: true
  refunds/external/create-an-external-refund-response:
    title: Create an External Refund Response
    type: object
    properties:
      refund:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: 'null'
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
    example:
      refund:
        id: 162275149
        subscription_id: 15236915
        type: Refund
        kind: manual
        transaction_type: refund
        success: true
        amount_in_cents: 2000
        memo: 'Refunded with check# 123'
        created_at: '2016-11-14T15:24:41-05:00'
        starting_balance_in_cents: 0
        ending_balance_in_cents: 0
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: null
        product_id: 3792003
        tax_id: null
        component_id: null
        statement_id: 80500632
        customer_id: 14714298
    x-stoplight:
      id: refunds/external/create-an-external-refund-response
      name: Create an External Refund Response
      public: true
  statements/list-statement-ids-for-a-subscription-response:
    title: Read Statement IDs for a Subscription Response
    type: object
    properties:
      statement_ids:
        type: array
        items:
          type: integer
    example:
      statement_ids:
        - 79221109
        - 79221381
        - 79221642
        - 79221742
        - 79334531
        - 79702531
        - 79733833
    x-stoplight:
      id: statements/list-statement-ids-for-a-subscription-response
      name: Read Statement IDs for a Subscription Response
      public: true
  statements/list-statement-ids-for-a-site-response:
    title: Read Statement IDs for a Site Response
    type: object
    properties:
      statement_ids:
        type: array
        items:
          type: integer
    example:
      statement_ids:
        - 67201893
        - 67266652
        - 67301249
        - 67301813
        - 80499378
        - 80499379
        - 80500632
    x-stoplight:
      id: statements/list-statement-ids-for-a-site-response
      name: Read Statement IDs for a Site Response
      public: true
  statements/list-statements-for-a-subscription-response:
    title: Read Statements for a Subscription
    type: array
    items:
      type: object
      properties:
        statement:
          type: object
          properties:
            id:
              type: integer
            basic_html_view:
              type: string
            closed_at:
              type: string
            created_at:
              type: string
            customer_billing_address:
              type: string
            customer_billing_address_2:
              type: string
            customer_billing_city:
              type: string
            customer_billing_country:
              type: string
            customer_billing_state:
              type: string
            customer_billing_zip:
              type: string
            customer_first_name:
              type: string
            customer_last_name:
              type: string
            customer_organization:
              type: string
            customer_shipping_address:
              type: string
            customer_shipping_address_2:
              type: string
            customer_shipping_city:
              type: string
            customer_shipping_country:
              type: string
            customer_shipping_state:
              type: string
            customer_shipping_zip:
              type: string
            ending_balance_in_cents:
              type: integer
            future_payments:
              type: array
              items:
                type: object
            html_view:
              type: string
            memo:
              type: string
            opened_at:
              type: string
            settled_at:
              type: string
            starting_balance_in_cents:
              type: integer
            subscription_id:
              type: integer
            text_view:
              type: string
            updated_at:
              type: string
            total_in_cents:
              type: integer
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  subscription_id:
                    type: integer
                  type:
                    type: string
                  kind:
                    type:
                      - 'null'
                      - string
                  transaction_type:
                    type: string
                  success:
                    type: boolean
                  amount_in_cents:
                    type: integer
                  memo:
                    type: string
                  created_at:
                    type: string
                  starting_balance_in_cents:
                    type: integer
                  ending_balance_in_cents:
                    type: integer
                  gateway_used:
                    type:
                      - 'null'
                      - string
                  gateway_transaction_id:
                    type:
                      - 'null'
                      - string
                  gateway_order_id:
                    type: 'null'
                  payment_id:
                    type:
                      - integer
                      - 'null'
                  product_id:
                    type: integer
                  tax_id:
                    type: 'null'
                  component_id:
                    type: 'null'
                  statement_id:
                    type: integer
                  customer_id:
                    type: integer
                  item_name:
                    type: string
                  original_amount_in_cents:
                    type: 'null'
                  discount_amount_in_cents:
                    type: 'null'
                  taxable_amount_in_cents:
                    type:
                      - integer
                      - 'null'
                  taxations:
                    type: array
                    items:
                      type: object
                      properties:
                        tax_id:
                          type: 'null'
                        tax_charge_id:
                          type: integer
                        tax_name:
                          type: string
                        rate:
                          type: string
                        tax_amount_in_cents:
                          type: integer
                        tax_rules:
                          type: array
                          items:
                            type: object
                            properties:
                              tax_rule_id:
                                type: 'null'
                              country_code:
                                type: string
                              subdivision_code:
                                type: string
                              rate:
                                type: string
                              tax_amount_in_cents:
                                type: integer
                              description:
                                type: string
                  card_number:
                    type: string
                  card_expiration:
                    type: string
                  card_type:
                    type: string
                  refunded_amount_in_cents:
                    type: integer
            events:
              type: array
              items:
                type: object
                properties:
                  event:
                    type: object
                    properties:
                      id:
                        type: integer
                      key:
                        type: string
                      message:
                        type: string
                      subscription_id:
                        type: integer
                      created_at:
                        type: string
                      event_specific_data:
                        type:
                          - 'null'
                          - object
                        properties:
                          product_id:
                            type: integer
                          account_transaction_id:
                            type:
                              - integer
                              - 'null'
                          previous_subscription_state:
                            type: string
                          new_subscription_state:
                            type: string
    example:
      - statement:
          id: 79221109
          basic_html_view: |
            <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
              <tbody>
                <tr id="billing_statement_logo">
                  <td colspan="2" id="billing_statement_logo_cell">
                    <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                  </td>
                </tr>
                <tr id="billing_statement_masthead">
                  <td id="billing_statement_merchant_information">
                    <div id="billing_statement_merchant_name">My Awesome Company</div>
                    <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                  </td>
                  <td id="billing_statement_information">
                    <div id="billing_statement_title"> (79221109)</div>
                    <div id="billing_statement_product">Acme Projects - Trial Product</div>
                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_account_information">
                    <h2 class="billing_statement_section_title">Account Information</h2>
                    <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

                  </td>
                  <td id="billing_statement_summary">
                    <h2 class="billing_statement_section_title"> Summary</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_detail" colspan="2">
                    <h2 class="billing_statement_section_title"> Detail</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="billing_statement_listing_empty_results_row">
                      <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_period_activity" colspan="2">
                    <h2 class="billing_statement_section_title">Period Activity</h2>
                    <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Signup Success</td>
                    <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                  </tr>
                </tbody>
              </table>
            </div>

                  </td>
                </tr>
                <tr>
                  <td  colspan="2">
                    <p>We thank you for your continued business!</p>
                  </td>
                </tr>
              </tbody>
            </table>
          closed_at: '2016-10-24T16:20:13-04:00'
          created_at: '2016-10-24T16:20:12-04:00'
          customer_billing_address: 123 Anywhere Street
          customer_billing_address_2: ''
          customer_billing_city: Anywhere
          customer_billing_country: US
          customer_billing_state: MA
          customer_billing_zip: '02120'
          customer_first_name: Amelia
          customer_last_name: Example
          customer_organization: ''
          customer_shipping_address: 123 Anywhere Street
          customer_shipping_address_2: ''
          customer_shipping_city: Anywhere
          customer_shipping_country: US
          customer_shipping_state: MA
          customer_shipping_zip: '02120'
          ending_balance_in_cents: 0
          future_payments: []
          html_view: |
            <div id="billing_statement">
              <div id="billing_statement_account_information_section" class="billing_statement_section">
                <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

              </div>

              <div id="billing_statement_summary_section" class="billing_statement_section">
                <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

              </div>

              <div id="billing_statement_detail_section" class="billing_statement_section">
                <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="billing_statement_listing_empty_results_row">
                      <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

              </div>

              <div id="billing_statement_period_activity_section" class="billing_statement_section">
                <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Signup Success</td>
                    <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                  </tr>
                </tbody>
              </table>
            </div>

              </div>
              <div>
                <p>We thank you for your continued business!</p>
              </div>
            </div>
          memo: We thank you for your continued business!
          opened_at: '2016-10-24T16:20:12-04:00'
          settled_at: '2016-10-24T16:20:13-04:00'
          starting_balance_in_cents: 0
          subscription_id: 14900541
          text_view: |
            My Awesome Company                                                    (79221109)
            billing@example.com                                Acme Projects - Trial Product
            ================================================================================

            --------
             Summary
            --------

             ID......: 79221109
             Date....: 10/24/2016
            Billing Date......: 10/24/2016

            Starting Balance..: $0.00
            Current Charges...: $0.00
            Payments..........: $0.00
            Ending Balance....: $0.00

            Balance Paid......: 10/24/2016 04:20PM EDT

            -------------------
            Account Information
            -------------------

            Amelia Example
            amelia@example.com
            555-555-1212

            ### Shipping Address
            123 Anywhere Street
            Anywhere, MA 02120
            US

            ### Billing Address
            123 Anywhere Street
            Anywhere, MA 02120
            US


            -------
             Detail
            -------

            ### Current Charges and Adjustments

            Date/Time     Type   Detail                                              Charges
            ............  .....  ...............................................  ..........
            10/24/2016
            04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
            ............  .....  ...............................................  ..........
                                                                         Totals:       $0.00

            ### Payments

            No payments this period


            ---------------
            Period Activity
            ---------------

            Date/Time     Event/Details                                                     
            ............  ..................................................................
            10/24/2016    Signup Success                                                    
            04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                          ct                                                                
            ............  ..................................................................

            We thank you for your continued business!
          updated_at: '2016-10-24T16:20:13-04:00'
          total_in_cents: 0
          transactions:
            - id: 159423810
              subscription_id: 14900541
              type: Charge
              kind: trial
              transaction_type: charge
              success: true
              amount_in_cents: 0
              memo: Trial Price (10/24/2016 - 10/31/2016)
              created_at: '2016-10-24T16:20:12-04:00'
              starting_balance_in_cents: 0
              ending_balance_in_cents: 0
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: null
              product_id: 3861800
              tax_id: null
              component_id: null
              statement_id: 79221109
              customer_id: 14399371
              item_name: Trial Price
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: null
              taxations: []
          events:
            - event:
                id: 342036408
                key: signup_success
                message: Successful signup for Amelia Example's subscription to Trial Product
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:13-04:00'
                event_specific_data:
                  product_id: 3861800
                  account_transaction_id: null
      - statement:
          id: 79221381
          basic_html_view: |
            <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
              <tbody>
                <tr id="billing_statement_logo">
                  <td colspan="2" id="billing_statement_logo_cell">
                    <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                  </td>
                </tr>
                <tr id="billing_statement_masthead">
                  <td id="billing_statement_merchant_information">
                    <div id="billing_statement_merchant_name">My Awesome Company</div>
                    <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                  </td>
                  <td id="billing_statement_information">
                    <div id="billing_statement_title"> (79221381)</div>
                    <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_account_information">
                    <h2 class="billing_statement_section_title">Account Information</h2>
                    <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

                  </td>
                  <td id="billing_statement_summary">
                    <h2 class="billing_statement_section_title"> Summary</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_detail" colspan="2">
                    <h2 class="billing_statement_section_title"> Detail</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                      <td class="billing_statement_listing_cell_money">$40.00</td>
                    </tr>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Tax</td>
                      <td>MA Tax (6.25%)</td>
                      <td class="billing_statement_listing_cell_money">$2.50</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>CC Payment</td>
                      <td>
                        <div>Amelia Example - Basic Plan: Renewal payment</div>
                        XXXX-XXXX-XXXX-1 bogus (01/2026)
                      </td>
                      <td class="billing_statement_listing_cell_money">
                        $42.50
                      </td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_period_activity" colspan="2">
                    <h2 class="billing_statement_section_title">Period Activity</h2>
                    <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription State Change</td>
                    <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription Product Change</td>
                    <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Billing Date Change</td>
                    <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Renewal Success</td>
                    <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Payment Success</td>
                    <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                </tbody>
              </table>
            </div>

                  </td>
                </tr>
                <tr>
                  <td  colspan="2">
                    <p>We thank you for your continued business!</p>
                  </td>
                </tr>
              </tbody>
            </table>
          closed_at: '2016-10-24T16:21:13-04:00'
          created_at: '2016-10-24T16:21:12-04:00'
          customer_billing_address: 123 Anywhere Street
          customer_billing_address_2: ''
          customer_billing_city: Anywhere
          customer_billing_country: US
          customer_billing_state: MA
          customer_billing_zip: '02120'
          customer_first_name: Amelia
          customer_last_name: Example
          customer_organization: ''
          customer_shipping_address: 123 Anywhere Street
          customer_shipping_address_2: ''
          customer_shipping_city: Anywhere
          customer_shipping_country: US
          customer_shipping_state: MA
          customer_shipping_zip: '02120'
          ending_balance_in_cents: 0
          future_payments: []
          html_view: |
            <div id="billing_statement">
              <div id="billing_statement_account_information_section" class="billing_statement_section">
                <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

              </div>

              <div id="billing_statement_summary_section" class="billing_statement_section">
                <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

              </div>

              <div id="billing_statement_detail_section" class="billing_statement_section">
                <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                      <td class="billing_statement_listing_cell_money">$40.00</td>
                    </tr>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Tax</td>
                      <td>MA Tax (6.25%)</td>
                      <td class="billing_statement_listing_cell_money">$2.50</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>CC Payment</td>
                      <td>
                        <div>Amelia Example - Basic Plan: Renewal payment</div>
                        XXXX-XXXX-XXXX-1 bogus (01/2026)
                      </td>
                      <td class="billing_statement_listing_cell_money">
                        $42.50
                      </td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

              </div>

              <div id="billing_statement_period_activity_section" class="billing_statement_section">
                <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription State Change</td>
                    <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription Product Change</td>
                    <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Billing Date Change</td>
                    <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Renewal Success</td>
                    <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Payment Success</td>
                    <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                </tbody>
              </table>
            </div>

              </div>
              <div>
                <p>We thank you for your continued business!</p>
              </div>
            </div>
          memo: We thank you for your continued business!
          opened_at: '2016-10-24T16:20:14-04:00'
          settled_at: '2016-10-24T16:21:13-04:00'
          starting_balance_in_cents: 0
          subscription_id: 14900541
          text_view: |
            My Awesome Company                                                    (79221381)
            billing@example.com                                   Acme Projects - Basic Plan
            ================================================================================

            --------
             Summary
            --------

             ID......: 79221381
             Date....: 10/24/2016
            Billing Date......: 10/24/2016

            Starting Balance..:  $0.00
            Current Charges...: $42.50
            Payments..........: $42.50
            Ending Balance....:  $0.00

            Balance Paid......: 10/24/2016 04:21PM EDT

            -------------------
            Account Information
            -------------------

            Amelia Example
            amelia@example.com
            555-555-1212

            ### Shipping Address
            123 Anywhere Street
            Anywhere, MA 02120
            US

            ### Billing Address
            123 Anywhere Street
            Anywhere, MA 02120
            US


            -------
             Detail
            -------

            ### Current Charges and Adjustments

            Date/Time     Type   Detail                                              Charges
            ............  .....  ...............................................  ..........
            10/24/2016
            04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
            ............  .....  ...............................................  ..........
            10/24/2016
            04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
            ............  .....  ...............................................  ..........
                                                                         Totals:      $42.50

            ### Payments

            Date/Time     Type   Detail                                               Amount
            ............  .....  ...............................................  ..........
            10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
            04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
            ............  .....  ...............................................  ..........
                                                                         Totals:      $42.50


            ---------------
            Period Activity
            ---------------

            Date/Time     Event/Details                                                     
            ............  ..................................................................
            10/24/2016    Subscription State Change                                         
            04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                          trialing to active                                                
            ............  ..................................................................
            10/24/2016    Subscription Product Change                                       
            04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                          ct' to 'Basic Plan'                                               
            ............  ..................................................................
            10/24/2016    Billing Date Change                                               
            04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                          n from 10/31/2016 to 10/24/2016                                   
            ............  ..................................................................
            10/24/2016    Renewal Success                                                   
            04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
            ............  ..................................................................
            10/24/2016    Payment Success                                                   
            04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                          Basic Plan                                                        
            ............  ..................................................................

            We thank you for your continued business!
          updated_at: '2016-10-24T16:21:13-04:00'
          total_in_cents: 4250
          transactions:
            - id: 159424439
              subscription_id: 14900541
              type: Charge
              kind: baseline
              transaction_type: charge
              success: true
              amount_in_cents: 4000
              memo: Basic Plan (10/24/2016 - 11/24/2016)
              created_at: '2016-10-24T16:21:12-04:00'
              starting_balance_in_cents: 0
              ending_balance_in_cents: 4000
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: 159424449
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: 4000
              taxations:
                - tax_id: null
                  tax_charge_id: 159424444
                  tax_name: MA Tax
                  rate: '0.0625'
                  tax_amount_in_cents: 250
                  tax_rules:
                    - tax_rule_id: null
                      country_code: US
                      subdivision_code: MA
                      rate: '0.0625'
                      tax_amount_in_cents: 250
                      description: MA STATE TAX - MASSACHUSETTS
            - id: 159424444
              subscription_id: 14900541
              type: Charge
              kind: tax
              transaction_type: charge
              success: true
              amount_in_cents: 250
              memo: MA Tax (6.25%)
              created_at: '2016-10-24T16:21:12-04:00'
              starting_balance_in_cents: 4000
              ending_balance_in_cents: 4250
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: 159424449
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: null
              taxations: []
            - id: 159424449
              subscription_id: 14900541
              type: Payment
              kind: null
              transaction_type: payment
              success: true
              amount_in_cents: 4250
              memo: 'Amelia Example - Basic Plan: Renewal payment'
              created_at: '2016-10-24T16:21:13-04:00'
              starting_balance_in_cents: 4250
              ending_balance_in_cents: 0
              gateway_used: bogus
              gateway_transaction_id: '53433'
              gateway_order_id: null
              payment_id: null
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              card_number: XXXX-XXXX-XXXX-1
              card_expiration: 01/2026
              card_type: bogus
              refunded_amount_in_cents: 0
          events:
            - event:
                id: 342036536
                key: subscription_state_change
                message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:43-04:00'
                event_specific_data:
                  previous_subscription_state: trialing
                  new_subscription_state: active
            - event:
                id: 342036540
                key: subscription_product_change
                message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:43-04:00'
                event_specific_data:
                  previous_product_id: 3861800
                  new_product_id: 3792003
            - event:
                id: 342037380
                key: billing_date_change
                message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:11-04:00'
                event_specific_data: null
            - event:
                id: 342037470
                key: renewal_success
                message: Successful renewal for Amelia Example's subscription to Basic Plan
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:14-04:00'
                event_specific_data:
                  product_id: 3792003
                  account_transaction_id: 159424449
            - event:
                id: 342037482
                key: payment_success
                message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:14-04:00'
                event_specific_data:
                  product_id: 3792003
                  account_transaction_id: 159424449
    x-stoplight:
      id: statements/list-statements-for-a-subscription-response
      name: Read Statements for a Subscription
      public: true
  statements/read-show-by-chargify-id:
    title: Read by Statement ID
    type: object
    properties:
      statement:
        type: object
        properties:
          id:
            type: integer
          basic_html_view:
            type: string
          closed_at:
            type: string
          created_at:
            type: string
          customer_billing_address:
            type: string
          customer_billing_address_2:
            type: string
          customer_billing_city:
            type: string
          customer_billing_country:
            type: string
          customer_billing_state:
            type: string
          customer_billing_zip:
            type: string
          customer_first_name:
            type: string
          customer_last_name:
            type: string
          customer_organization:
            type: string
          customer_shipping_address:
            type: string
          customer_shipping_address_2:
            type: string
          customer_shipping_city:
            type: string
          customer_shipping_country:
            type: string
          customer_shipping_state:
            type: string
          customer_shipping_zip:
            type: string
          ending_balance_in_cents:
            type: integer
          future_payments:
            type: array
            items:
              type: object
          html_view:
            type: string
          memo:
            type: string
          opened_at:
            type: string
          settled_at:
            type: string
          starting_balance_in_cents:
            type: integer
          subscription_id:
            type: integer
          text_view:
            type: string
          updated_at:
            type: string
          total_in_cents:
            type: integer
          transactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                subscription_id:
                  type: integer
                type:
                  type: string
                kind:
                  type: string
                transaction_type:
                  type: string
                success:
                  type: boolean
                amount_in_cents:
                  type: integer
                memo:
                  type: string
                created_at:
                  type: string
                starting_balance_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: integer
                gateway_used:
                  type: 'null'
                gateway_transaction_id:
                  type: 'null'
                gateway_order_id:
                  type: 'null'
                payment_id:
                  type: 'null'
                product_id:
                  type: integer
                tax_id:
                  type: 'null'
                component_id:
                  type: 'null'
                statement_id:
                  type: integer
                customer_id:
                  type: integer
                item_name:
                  type: string
                original_amount_in_cents:
                  type: 'null'
                discount_amount_in_cents:
                  type: 'null'
                taxable_amount_in_cents:
                  type: 'null'
                taxations:
                  type: array
                  items:
                    type: object
          events:
            type: array
            items:
              type: object
              properties:
                event:
                  type: object
                  properties:
                    id:
                      type: integer
                    key:
                      type: string
                    message:
                      type: string
                    subscription_id:
                      type: integer
                    created_at:
                      type: string
                    event_specific_data:
                      type: object
                      properties:
                        product_id:
                          type: integer
                        account_transaction_id:
                          type: 'null'
    example:
      statement:
        id: 79221109
        basic_html_view: |
          <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
            <tbody>
              <tr id="billing_statement_logo">
                <td colspan="2" id="billing_statement_logo_cell">
                  <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                </td>
              </tr>
              <tr id="billing_statement_masthead">
                <td id="billing_statement_merchant_information">
                  <div id="billing_statement_merchant_name">My Awesome Company</div>
                  <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                </td>
                <td id="billing_statement_information">
                  <div id="billing_statement_title"> (79221109)</div>
                  <div id="billing_statement_product">Acme Projects - Trial Product</div>
                </td>
              </tr>
              <tr>
                <td id="billing_statement_account_information">
                  <h2 class="billing_statement_section_title">Account Information</h2>
                  <div class="billing_statement_section_content vcard">
            <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
            <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
            <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

            <div id="billing_statement_shipping_address" class="adr">
              <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
              <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
              <div id="billing_statement_shipping_address_locality_region_postal_code">
                <span class="locality">Anywhere</span>,
                <abbr class="region">MA</abbr>
                <span class="postal-code">02120</span>
              </div>
              <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
            </div>

            <div id="billing_statement_billing_address" class="adr">
              <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
              <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
              <div id="billing_statement_billing_address_locality_region_postal_code">
                <span class="locality">Anywhere</span>,
                <abbr class="region">MA</abbr>
                <span class="postal-code">02120</span>
              </div>
              <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
            </div>
            
          </div>

                </td>
                <td id="billing_statement_summary">
                  <h2 class="billing_statement_section_title"> Summary</h2>
                  <div class="billing_statement_section_content">
            <div id="billing_statement_summary_statement_date">
              <span class="billing_statement_summary_label"> Date:</span>
              <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
            </div>
            <div id="billing_statement_summary_usage_period">
              <span class="billing_statement_summary_label">Billing Date:</span>
              <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
            </div>

            <div id="billing_statement_summary_balance_summary">
              <div id="billing_statement_summary_starting_balance">
                <span class="billing_statement_summary_label">Starting Balance:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_current_charges">
                <span class="billing_statement_summary_label">Current Charges:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_current_payments_and_credits">
                <span class="billing_statement_summary_label">Payments:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_balance_due">
                <span class="billing_statement_summary_label">Ending Balance:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
            </div>

            <div id="billing_statement_summary_balance_paid">
              <div id="billing_statement_summary_balance_paid_date">
                <span class="billing_statement_summary_label">Balance Paid:</span>
                <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
              </div>
                <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                  PAID
                </div>
            </div>
          </div>

                </td>
              </tr>
              <tr>
                <td id="billing_statement_detail" colspan="2">
                  <h2 class="billing_statement_section_title"> Detail</h2>
                  <div class="billing_statement_section_content">
            <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
              <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
              <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_type">Type</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                    <th class="billing_statement_listing_cell_money">Charge</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Recurring</td>
                    <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                  <tr class="billing_statement_listing_tfoot">
                    <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                </tbody>
              </table>
            </div>

            <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
              <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
              <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_type">Type</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                    <th class="billing_statement_listing_cell_money">Amount</th>
                  </tr>
                </thead>
                <tbody>
                  <tr class="billing_statement_listing_empty_results_row">
                    <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                  </tr>
                  <tr class="billing_statement_listing_tfoot">
                    <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                </tbody>
              </table>
            </div>


          </div>

                </td>
              </tr>
              <tr>
                <td id="billing_statement_period_activity" colspan="2">
                  <h2 class="billing_statement_section_title">Period Activity</h2>
                  <div class="billing_statement_section_content">
            <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
              <thead>
                <tr>
                  <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                  <th class="billing_statement_listing_cell_event">Event</th>
                  <th class="billing_statement_listing_cell_detail">Detail</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                  <td>Signup Success</td>
                  <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                </tr>
              </tbody>
            </table>
          </div>

                </td>
              </tr>
              <tr>
                <td  colspan="2">
                  <p>We thank you for your continued business!</p>
                </td>
              </tr>
            </tbody>
          </table>
        closed_at: '2016-10-24T16:20:13-04:00'
        created_at: '2016-10-24T16:20:12-04:00'
        customer_billing_address: 123 Anywhere Street
        customer_billing_address_2: ''
        customer_billing_city: Anywhere
        customer_billing_country: US
        customer_billing_state: MA
        customer_billing_zip: '02120'
        customer_first_name: Amelia
        customer_last_name: Example
        customer_organization: ''
        customer_shipping_address: 123 Anywhere Street
        customer_shipping_address_2: ''
        customer_shipping_city: Anywhere
        customer_shipping_country: US
        customer_shipping_state: MA
        customer_shipping_zip: '02120'
        ending_balance_in_cents: 0
        future_payments: []
        html_view: |
          <div id="billing_statement">
            <div id="billing_statement_account_information_section" class="billing_statement_section">
              <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
              <div class="billing_statement_section_content vcard">
            <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
            <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
            <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

            <div id="billing_statement_shipping_address" class="adr">
              <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
              <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
              <div id="billing_statement_shipping_address_locality_region_postal_code">
                <span class="locality">Anywhere</span>,
                <abbr class="region">MA</abbr>
                <span class="postal-code">02120</span>
              </div>
              <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
            </div>

            <div id="billing_statement_billing_address" class="adr">
              <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
              <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
              <div id="billing_statement_billing_address_locality_region_postal_code">
                <span class="locality">Anywhere</span>,
                <abbr class="region">MA</abbr>
                <span class="postal-code">02120</span>
              </div>
              <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
            </div>
            
          </div>

            </div>

            <div id="billing_statement_summary_section" class="billing_statement_section">
              <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
              <div class="billing_statement_section_content">
            <div id="billing_statement_summary_statement_date">
              <span class="billing_statement_summary_label"> Date:</span>
              <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
            </div>
            <div id="billing_statement_summary_usage_period">
              <span class="billing_statement_summary_label">Billing Date:</span>
              <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
            </div>

            <div id="billing_statement_summary_balance_summary">
              <div id="billing_statement_summary_starting_balance">
                <span class="billing_statement_summary_label">Starting Balance:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_current_charges">
                <span class="billing_statement_summary_label">Current Charges:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_current_payments_and_credits">
                <span class="billing_statement_summary_label">Payments:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
              <div id="billing_statement_summary_balance_due">
                <span class="billing_statement_summary_label">Ending Balance:</span>
                <span class="billing_statement_summary_value">$0.00</span>
              </div>
            </div>

            <div id="billing_statement_summary_balance_paid">
              <div id="billing_statement_summary_balance_paid_date">
                <span class="billing_statement_summary_label">Balance Paid:</span>
                <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
              </div>
                <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                  PAID
                </div>
            </div>
          </div>

            </div>

            <div id="billing_statement_detail_section" class="billing_statement_section">
              <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
              <div class="billing_statement_section_content">
            <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
              <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
              <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_type">Type</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                    <th class="billing_statement_listing_cell_money">Charge</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Recurring</td>
                    <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                  <tr class="billing_statement_listing_tfoot">
                    <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                </tbody>
              </table>
            </div>

            <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
              <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
              <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_type">Type</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                    <th class="billing_statement_listing_cell_money">Amount</th>
                  </tr>
                </thead>
                <tbody>
                  <tr class="billing_statement_listing_empty_results_row">
                    <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                  </tr>
                  <tr class="billing_statement_listing_tfoot">
                    <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                    <td class="billing_statement_listing_cell_money">$0.00</td>
                  </tr>
                </tbody>
              </table>
            </div>


          </div>

            </div>

            <div id="billing_statement_period_activity_section" class="billing_statement_section">
              <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
              <div class="billing_statement_section_content">
            <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
              <thead>
                <tr>
                  <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                  <th class="billing_statement_listing_cell_event">Event</th>
                  <th class="billing_statement_listing_cell_detail">Detail</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                  <td>Signup Success</td>
                  <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                </tr>
              </tbody>
            </table>
          </div>

            </div>
            <div>
              <p>We thank you for your continued business!</p>
            </div>
          </div>
        memo: We thank you for your continued business!
        opened_at: '2016-10-24T16:20:12-04:00'
        settled_at: '2016-10-24T16:20:13-04:00'
        starting_balance_in_cents: 0
        subscription_id: 14900541
        text_view: |
          My Awesome Company                                                    (79221109)
          billing@example.com                                Acme Projects - Trial Product
          ================================================================================

          --------
           Summary
          --------

           ID......: 79221109
           Date....: 10/24/2016
          Billing Date......: 10/24/2016

          Starting Balance..: $0.00
          Current Charges...: $0.00
          Payments..........: $0.00
          Ending Balance....: $0.00

          Balance Paid......: 10/24/2016 04:20PM EDT

          -------------------
          Account Information
          -------------------

          Amelia Example
          amelia@example.com
          555-555-1212

          ### Shipping Address
          123 Anywhere Street
          Anywhere, MA 02120
          US

          ### Billing Address
          123 Anywhere Street
          Anywhere, MA 02120
          US


          -------
           Detail
          -------

          ### Current Charges and Adjustments

          Date/Time     Type   Detail                                              Charges
          ............  .....  ...............................................  ..........
          10/24/2016
          04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
          ............  .....  ...............................................  ..........
                                                                       Totals:       $0.00

          ### Payments

          No payments this period


          ---------------
          Period Activity
          ---------------

          Date/Time     Event/Details                                                     
          ............  ..................................................................
          10/24/2016    Signup Success                                                    
          04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                        ct                                                                
          ............  ..................................................................

          We thank you for your continued business!
        updated_at: '2016-10-24T16:20:13-04:00'
        total_in_cents: 0
        transactions:
          - id: 159423810
            subscription_id: 14900541
            type: Charge
            kind: trial
            transaction_type: charge
            success: true
            amount_in_cents: 0
            memo: Trial Price (10/24/2016 - 10/31/2016)
            created_at: '2016-10-24T16:20:12-04:00'
            starting_balance_in_cents: 0
            ending_balance_in_cents: 0
            gateway_used: null
            gateway_transaction_id: null
            gateway_order_id: null
            payment_id: null
            product_id: 3861800
            tax_id: null
            component_id: null
            statement_id: 79221109
            customer_id: 14399371
            item_name: Trial Price
            original_amount_in_cents: null
            discount_amount_in_cents: null
            taxable_amount_in_cents: null
            taxations: []
        events:
          - event:
              id: 342036408
              key: signup_success
              message: Successful signup for Amelia Example's subscription to Trial Product
              subscription_id: 14900541
              created_at: '2016-10-24T16:20:13-04:00'
              event_specific_data:
                product_id: 3861800
                account_transaction_id: null
    x-stoplight:
      id: statements/read-show-by-chargify-id
      name: Read by Statement ID
      public: true
  statements/count-statements-response:
    title: Count Statements Response
    type: object
    properties:
      count:
        type: integer
    example:
      count: 129
    x-stoplight:
      id: statements/count-statements-response
      name: Count Statements Response
      public: true
  subscriptions/list-subscriptions-output:
    title: Read Subscriptions Output
    type: array
    items:
      type: object
      properties:
        subscription:
          type: object
          properties:
            id:
              type: integer
              description: The subscription unique id within Chargify.
            state:
              type: string
              description: The current state of the subscription.
            balance_in_cents:
              type: integer
              description: Gives the current outstanding subscription balance in the number of cents.
            total_revenue_in_cents:
              type: integer
              description: Gives the total revenue from the subscription in the number of cents.
            product_price_in_cents:
              type: integer
              description: 'The recurring amount of the product (and version), currently subscribed. This may differ from the current price of the product, if you’ve changed the price of the product but haven’t, moved this subscription to a newer version.'
            product_version_number:
              type: integer
              description: ' The version of the product currently subscribed.,NOTE: we have not exposed versions (yet) elsewhere in the API, but if,you change the price of your product the versions will increment and existing subscriptions will remain on prior versions (by default, to support price grandfathering).'
            current_period_ends_at:
              type: string
              description: 'Timestamp relating to the end of the current (recurring) period (i.e.,when the next regularly scheduled attempted charge will occur)'
              format: date-time
            next_assessment_at:
              type: string
              description: 'Timestamp that indicates when capture of payment will be tried or,retried. This value will usually track the current_period_ends_at, but,will diverge if a renewal payment fails and must be retried. In that,case, the current_period_ends_at will advance to the end of the next,period (time doesn’t stop because a payment was missed) but the,next_assessment_at will be scheduled for the auto-retry time (i.e. 24,hours in the future, in some cases)'
              format: date-time
            trial_started_at:
              type:
                - 'null'
                - string
              description: Timestamp for when the trial period (if any) began
              format: date-time
            trial_ended_at:
              type:
                - 'null'
                - string
              description: Timestamp for when the trial period (if any) ended
              format: date-time
            activated_at:
              type: string
              description: 'Timestamp for when the subscription began (i.e. when it came out of trial, or when it began in the case of no trial)'
              format: date-time
            expires_at:
              type:
                - 'null'
                - string
              description: Timestamp giving the expiration date of this subscription (if any)
              format: date-time
            created_at:
              type: string
              description: The creation date for this subscription
              format: date-time
            updated_at:
              type: string
              description: The date of last update for this subscription
              format: date-time
            cancellation_message:
              type:
                - 'null'
                - string
              description: 'Seller-provided reason for, or note about, the cancellation.'
            cancellation_method:
              type:
                - 'null'
                - string
              description: 'The process used to cancel the subscription, if the subscription has been canceled. if the subscription''s state is nil, the subscription is not canceled.'
            cancel_at_end_of_period:
              type:
                - boolean
                - 'null'
              description: Whether or not the subscription will (or has) canceled at the end of the period.
            canceled_at:
              type:
                - 'null'
                - string
              description: The timestamp of the most recent cancellation
              format: date-time
            current_period_started_at:
              type: string
              description: Timestamp relating to the start of the current (recurring) period
              format: date-time
            previous_state:
              type: string
              description: 'Only valid for webhook payloads The previous state for webhooks that have indicated a change in state. For normal API calls, this will always be the same as the state (current state)'
            signup_payment_id:
              type: integer
              description: The ID of the transaction that generated the revenue
            signup_revenue:
              type: string
              description: 'The revenue, formatted as a string of decimal separated dollars and cents, from the subscription signup ($50.00 would be formatted as `50.00`)'
            delayed_cancel_at:
              type:
                - 'null'
                - string
              description: Timestamp for when the subscription is currently set to cancel.
              format: date-time
            coupon_code:
              type:
                - 'null'
                - string
              description: The coupon code applied to the subscription.
            payment_collection_method:
              type: string
              description: 'The type of payment collection to be used in the subscription. '
              enum:
                - automatic
                - invoice
            snap_day:
              type:
                - 'null'
                - integer
              description: 'The day of the month that the subscription will charge according to calendar billing rules, if used.'
            reason_code:
              type:
                - 'null'
                - string
              description: 'Code that indicates why the subscription was cancelled. '
            customer:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'The first name of the customer. '
                last_name:
                  type: string
                  description: 'The last name of the subscriber. '
                email:
                  type: string
                  description: The email of the customer
                  format: email
                cc_emails:
                  type:
                    - 'null'
                    - string
                  description: CC emails attached to the customer object
                organization:
                  type: string
                  description: The organization/company of the customer.
                reference:
                  type:
                    - 'null'
                    - string
                  description: 'A customer “reference”, or unique identifier from your app, stored in Chargify. Can be used so that you may reference your customer’s within Chargify using the same unique value you use in your application.'
                id:
                  type: integer
                created_at:
                  type: string
                  description: The created at timestamp of the customer
                  format: date-time
                updated_at:
                  type: string
                  description: The timestamp of the last time the customer was updated at
                  format: date-time
                address:
                  type:
                    - string
                    - 'null'
                  description: The customer’s shipping street address
                address_2:
                  type:
                    - string
                    - 'null'
                  description: Second line of the customer’s shipping address
                city:
                  type:
                    - string
                    - 'null'
                  description: The customer’s shipping address city
                state:
                  type:
                    - string
                    - 'null'
                  description: (Optional) The customer’s shipping address state. This must conform to the in order to be valid for tax locale purposes.
                zip:
                  type: string
                  description: 'The customer’s shipping address zip code '
                country:
                  type: string
                  description: 'The customer shipping address country, required in format (i.e. “US”).'
                phone:
                  type: string
                  description: The phone number of the customer.
                verified:
                  type: boolean
                  description: If the customer has been verified to use ACH as a payment method
                portal_customer_created_at:
                  type: string
                portal_invite_last_sent_at:
                  type:
                    - string
                    - 'null'
                  format: date-time
                  description: Timestamp of when the last Billing Portal invite was sent
                portal_invite_last_accepted_at:
                  type: 'null'
                  description: ''
            product:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the product
                name:
                  type: string
                  description: The product name
                handle:
                  type: string
                  description: The product API handle
                description:
                  type: string
                  description: The product description
                accounting_code:
                  type: string
                  description: 'The product family accounting code (has no bearing in Chargify, may be used within your app)'
                price_in_cents:
                  type: integer
                  description: 'The product price, in cents'
                interval:
                  type: integer
                  description: The numerical interval. An interval of ‘30’ coupled with an interval_unit of day would mean this product would renew every 30 days.
                interval_unit:
                  type: string
                  description: A string representing the interval unit for this product
                  enum:
                    - month
                    - day
                initial_charge_in_cents:
                  type:
                    - 'null'
                    - integer
                  description: The up front charge you have specified.
                expiration_interval:
                  type:
                    - 'null'
                    - integer
                  description: A numerical interval for the length a subscription to this product will run before it expires.
                expiration_interval_unit:
                  type:
                    - 'null'
                    - string
                  description: A string representing the trial interval unit for this product
                  enum:
                    - month
                    - day
                    - never
                trial_price_in_cents:
                  type:
                    - 'null'
                    - integer
                  description: 'The price of the trial period for a subscription to this product, in integer cents.'
                trial_interval:
                  type:
                    - 'null'
                    - integer
                  description: 'A numerical interval for the length of the trial period of a subscription to this product. '
                trial_interval_unit:
                  type: string
                  description: A string representing the trial interval unit for this trial
                  enum:
                    - month
                    - day
                initial_charge_after_trial:
                  type: boolean
                return_params:
                  type: string
                  description: The params to be appended to the return_url (public_signup_pages only)
                request_credit_card:
                  type: boolean
                  description: Request credit card for the product
                require_credit_card:
                  type: boolean
                  description: Require credit card for the product
                created_at:
                  type: string
                  description: Timestamp indicating when this product was created
                  format: date-time
                updated_at:
                  type: string
                  description: Timestamp indicating when this product was last updated
                  format: date-time
                archived_at:
                  type:
                    - 'null'
                    - string
                  description: Timestamp indicating when this product was archived
                  format: date-time
                update_return_url:
                  type: string
                  description: The url to which a customer will be returned after a successful account update
                update_return_params:
                  type: string
                product_family:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the product family
                    name:
                      type: string
                      description: The name of the product family
                    handle:
                      type: string
                      description: The API handle of the product family
                    accounting_code:
                      type:
                        - 'null'
                        - string
                      description: 'The product family accounting code (has no bearing in Chargify, may be used within your app)'
                    description:
                      type: string
                      description: The product family description
                public_signup_pages:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The id of the public signup page.
                      url:
                        type: string
                        description: The public facing URL for the Public Signup Page
                        format: uri
                taxable:
                  type: boolean
                  description: Is the product taxable
                version_number:
                  type: integer
                  description: Version number of the product
            credit_card:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the payment profile
                payment_type:
                  type: string
                  enum:
                    - credit_card
                    - bank_account
                    - paypal_account
                first_name:
                  type: string
                  description: First name on card or bank account
                last_name:
                  type: string
                  description: Last name on card or bank account
                masked_card_number:
                  type:
                    - 'null'
                    - string
                  description: Masked card number only exposing the last 4 digits of the card
                card_type:
                  type:
                    - 'null'
                    - string
                  enum:
                    - visa
                    - master
                    - discover
                    - american_express
                    - diners_club
                    - jcb
                    - switch
                    - solo
                    - dankort
                    - maestro
                    - forbrugsforeningen
                    - laser
                    - 'null'
                expiration_month:
                  type:
                    - integer
                    - 'null'
                  description: Expiration month of the card on file
                expiration_year:
                  type:
                    - integer
                    - 'null'
                  description: Expiration year of the card on file
                billing_address:
                  type: string
                  description: Billing address of the card on file
                billing_address_2:
                  type: string
                  description: Secondary billing address of the card on file
                billing_city:
                  type: string
                  description: Billing city of the card on file
                billing_state:
                  type:
                    - 'null'
                    - string
                  description: Billing state of the card on file
                billing_country:
                  type: string
                  description: Billing Country of the card on file
                billing_zip:
                  type:
                    - string
                    - 'null'
                  description: Billing zip of the card on file
                current_vault:
                  type:
                    - string
                    - 'null'
                  description: Current vault of the payment method
                  enum:
                    - bogus
                    - authorizenet
                    - authorizenet_cim
                    - beanstream
                    - bpoint
                    - braintree_blue
                    - chargify
                    - cybersource
                    - elavon
                    - eway
                    - eway_rapid_std
                    - firstdata
                    - fusebox
                    - litle
                    - moneris
                    - moneris_us
                    - orbital
                    - payment_express
                    - paymill
                    - pin
                    - quickpay
                    - stripe_connect
                    - trust_commerce
                    - wirecard
                vault_token:
                  type: string
                  description: 'If you have an existing vault_token from your gateway, you may associate it with this new payment profile.'
                customer_vault_token:
                  type: 'null'
                customer_id:
                  type: integer
            payment_type:
              type: string
            referral_code:
              type: string
              description: The referral code used during signup of the subscription
            next_product_id:
              type:
                - 'null'
                - integer
              description: Next product ID if delayed product change has been scheduled
            coupon_use_count:
              type:
                - integer
                - 'null'
              description: Number of times the applied coupon has been used
            coupon_uses_allowed:
              type:
                - integer
                - 'null'
              description: Number of times the applied coupon can be used
    example:
      - subscription:
          id: 15236915
          state: active
          balance_in_cents: 0
          total_revenue_in_cents: 14000
          product_price_in_cents: 1000
          product_version_number: 7
          current_period_ends_at: '2016-11-15T14:48:10-05:00'
          next_assessment_at: '2016-11-15T14:48:10-05:00'
          trial_started_at: null
          trial_ended_at: null
          activated_at: '2016-11-14T14:48:12-05:00'
          expires_at: null
          created_at: '2016-11-14T14:48:10-05:00'
          updated_at: '2016-11-14T15:24:41-05:00'
          cancellation_message: null
          cancellation_method: null
          cancel_at_end_of_period: null
          canceled_at: null
          current_period_started_at: '2016-11-14T14:48:10-05:00'
          previous_state: active
          signup_payment_id: 162269766
          signup_revenue: '260.00'
          delayed_cancel_at: null
          coupon_code: 5SNN6HFK3GBH
          payment_collection_method: automatic
          snap_day: null
          reason_code: null
          customer:
            first_name: Curtis
            last_name: Test
            email: curtis@example.com
            cc_emails: jeff@example.com
            organization: ''
            reference: null
            id: 14714298
            created_at: '2016-11-14T14:48:10-05:00'
            updated_at: '2016-11-14T14:48:13-05:00'
            address: 123 Anywhere Street
            address_2: ''
            city: Boulder
            state: CO
            zip: '80302'
            country: US
            phone: ''
            verified: false
            portal_customer_created_at: '2016-11-14T14:48:13-05:00'
            portal_invite_last_sent_at: '2016-11-14T14:48:13-05:00'
            portal_invite_last_accepted_at: null
          product:
            id: 3792003
            name: $10 Basic Plan
            handle: basic
            description: lorem ipsum
            accounting_code: basic
            price_in_cents: 1000
            interval: 1
            interval_unit: day
            initial_charge_in_cents: null
            expiration_interval: null
            expiration_interval_unit: never
            trial_price_in_cents: null
            trial_interval: null
            trial_interval_unit: month
            initial_charge_after_trial: false
            return_params: ''
            request_credit_card: false
            require_credit_card: false
            created_at: '2016-03-24T13:38:39-04:00'
            updated_at: '2016-11-03T13:03:05-04:00'
            archived_at: null
            update_return_url: ''
            update_return_params: ''
            product_family:
              id: 527890
              name: Acme Projects
              handle: billing-plans
              accounting_code: null
              description: ''
            public_signup_pages:
              - id: 281054
                url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
              - id: 281240
                url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
              - id: 282694
                url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
            taxable: false
            version_number: 7
          credit_card:
            id: 10191713
            payment_type: credit_card
            first_name: Curtis
            last_name: Test
            masked_card_number: XXXX-XXXX-XXXX-1
            card_type: bogus
            expiration_month: 1
            expiration_year: 2026
            billing_address: 123 Anywhere Street
            billing_address_2: ''
            billing_city: Boulder
            billing_state: null
            billing_country: ''
            billing_zip: '80302'
            current_vault: bogus
            vault_token: '1'
            customer_vault_token: null
            customer_id: 14714298
          payment_type: credit_card
          referral_code: w7kjc9
          next_product_id: null
          coupon_use_count: 1
          coupon_uses_allowed: 1
      - subscription:
          id: 15189649
          state: canceled
          balance_in_cents: 15000
          total_revenue_in_cents: 10000
          product_price_in_cents: 10000
          product_version_number: 1
          current_period_ends_at: '2017-11-10T13:14:00-05:00'
          next_assessment_at: '2017-11-10T13:14:00-05:00'
          trial_started_at: null
          trial_ended_at: null
          activated_at: '2016-11-10T13:14:02-05:00'
          expires_at: null
          created_at: '2016-11-10T13:14:00-05:00'
          updated_at: '2016-11-14T11:14:01-05:00'
          cancellation_message: ''
          cancellation_method: merchant_ui
          cancel_at_end_of_period: false
          canceled_at: '2016-11-14T11:14:01-05:00'
          current_period_started_at: '2016-11-10T13:14:00-05:00'
          previous_state: canceled
          signup_payment_id: 161794022
          signup_revenue: '100.00'
          delayed_cancel_at: null
          coupon_code: null
          payment_collection_method: invoice
          snap_day: null
          customer:
            first_name: Frankie
            last_name: Bravo
            email: testfrankie11@test.com
            cc_emails: ''
            organization: ''
            reference: null
            id: 14543712
            created_at: '2016-11-02T10:16:17-04:00'
            updated_at: '2016-11-14T09:54:39-05:00'
            address: ''
            address_2: ''
            city: ''
            state: ''
            zip: ''
            country: ''
            phone: '5555551212'
            verified: true
            portal_customer_created_at: '2016-11-02T10:16:19-04:00'
            portal_invite_last_sent_at: '2016-11-10T13:14:03-05:00'
            portal_invite_last_accepted_at: null
          product:
            id: 4038269
            name: Annual Product
            handle: annual-product
            description: ''
            accounting_code: ''
            price_in_cents: 10000
            interval: 12
            interval_unit: month
            initial_charge_in_cents: null
            expiration_interval: null
            expiration_interval_unit: never
            trial_price_in_cents: null
            trial_interval: null
            trial_interval_unit: month
            initial_charge_after_trial: false
            return_params: ''
            request_credit_card: true
            require_credit_card: true
            created_at: '2016-09-28T09:54:05-04:00'
            updated_at: '2016-09-28T09:54:05-04:00'
            archived_at: null
            update_return_url: ''
            update_return_params: ''
            product_family:
              id: 527890
              name: Acme Projects
              handle: billing-plans
              accounting_code: null
              description: ''
            public_signup_pages:
              - id: 297032
                url: 'https://general-goods.chargify.com/subscribe/b3hjynp5ss52/annual-product'
            taxable: false
            version_number: 1
          credit_card:
            id: 10188522
            payment_type: credit_card
            first_name: Fran
            last_name: Becker
            masked_card_number: null
            card_type: null
            expiration_month: null
            expiration_year: null
            billing_address: 123 Montana Way
            billing_address_2: ''
            billing_city: Boulder
            billing_state: CO
            billing_country: US
            billing_zip: '90210'
            current_vault: bogus
            vault_token: '123456789'
            customer_vault_token: null
            customer_id: 14543712
          payment_type: bank_account
          referral_code: hspss6
          next_product_id: null
          coupon_use_count: null
          coupon_uses_allowed: null
    x-stoplight:
      id: subscriptions/list-subscriptions-output
      name: Read Subscriptions Output
      public: true
  subscription/read-subscription:
    title: Read Subscription by Customer ID
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type:
              - 'null'
              - string
          cancellation_message:
            type:
              - 'null'
              - string
          next_product_id:
            type:
              - 'null'
              - integer
          cancel_at_end_of_period:
            type: boolean
          payment_collection_method:
            type: string
          snap_day:
            type:
              - string
              - 'null'
          cancellation_method:
            type:
              - 'null'
              - string
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type:
              - 'null'
              - string
          coupon_code:
            type:
              - 'null'
              - string
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type:
              - 'null'
              - string
          referral_code:
            type:
              - string
              - 'null'
          coupon_use_count:
            type: 'null'
          coupon_uses_allowed:
            type: 'null'
          reason_code:
            type:
              - 'null'
              - string
          automatically_resume_at:
            type: 'null'
          current_billing_amount_in_cents:
            type: integer
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type:
                  - string
                  - 'null'
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type:
                  - string
                  - 'null'
              address:
                type:
                  - string
                  - 'null'
              address_2:
                type:
                  - string
                  - 'null'
              city:
                type:
                  - string
                  - 'null'
              state:
                type:
                  - string
                  - 'null'
              zip:
                type:
                  - string
                  - 'null'
              country:
                type:
                  - string
                  - 'null'
              phone:
                type:
                  - string
                  - 'null'
              portal_invite_last_sent_at:
                type:
                  - string
                  - 'null'
              portal_invite_last_accepted_at:
                type:
                  - 'null'
                  - string
              verified:
                type:
                  - boolean
                  - 'null'
              portal_customer_created_at:
                type:
                  - string
                  - 'null'
              cc_emails:
                type:
                  - string
                  - 'null'
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              tax_code:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type:
                  - array
                  - 'null'
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type:
                        - string
                        - 'null'
                    return_params:
                      type:
                        - string
                        - 'null'
                    url:
                      type:
                        - string
                        - 'null'
    example:
      subscription:
        id: 18220670
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2017-06-27T13:45:15-05:00'
        created_at: '2017-06-27T13:45:13-05:00'
        updated_at: '2017-06-30T09:26:50-05:00'
        expires_at: null
        balance_in_cents: 10000
        current_period_ends_at: '2017-06-30T12:00:00-05:00'
        next_assessment_at: '2017-06-30T12:00:00-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: automatic
        snap_day: end
        cancellation_method: null
        current_period_started_at: '2017-06-27T13:45:13-05:00'
        previous_state: active
        signup_payment_id: 191819284
        signup_revenue: '0.00'
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: 0
        product_price_in_cents: 0
        product_version_number: 1
        payment_type: null
        referral_code: d3pw7f
        coupon_use_count: null
        coupon_uses_allowed: null
        reason_code: null
        automatically_resume_at: null
        current_billing_amount_in_cents: 10000
        customer:
          id: 17780587
          first_name: Catie
          last_name: Test
          organization: 'Acme, Inc.'
          email: catie@example.com
          created_at: '2017-06-27T13:01:05-05:00'
          updated_at: '2017-06-30T09:23:10-05:00'
          reference: 123ABC
          address: 123 Anywhere Street
          address_2: 'Apartment #10'
          city: Los Angeles
          state: CA
          zip: '90210'
          country: US
          phone: 555-555-5555
          portal_invite_last_sent_at: '2017-06-27T13:45:16-05:00'
          portal_invite_last_accepted_at: null
          verified: true
          portal_customer_created_at: '2017-06-27T13:01:08-05:00'
          cc_emails: support@example.com
          tax_exempt: true
        product:
          id: 4470347
          name: Zero Dollar Product
          handle: zero-dollar-product
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2017-03-23T10:54:12-05:00'
          updated_at: '2017-04-20T15:18:46-05:00'
          price_in_cents: 0
          interval: 1
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: false
          return_params: ''
          taxable: false
          update_return_url: ''
          tax_code: ''
          initial_charge_after_trial: false
          version_number: 1
          update_return_params: ''
          product_family:
            id: 997233
            name: Acme Products
            description: ''
            handle: acme-products
            accounting_code: null
          public_signup_pages:
            - id: 316810
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product'
    x-stoplight:
      id: subscription/read-subscription
      name: Read Subscription by Customer ID
      public: true
  subscriptions/create-subscription-request:
    title: Create Subscription Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
    example:
      subscription:
        product_handle: basic
        customer_attributes:
          first_name: Alysa
          last_name: Test
          email: alysa@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
    x-stoplight:
      id: subscriptions/create-subscription-request
      name: Create Subscription Request
      public: true
  subscriptions/subscription-import-request:
    title: Subscription Import Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          next_billing_at:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              reference:
                type: string
              organization:
                type: string
          payment_profile_attributes:
            type: object
            properties:
              vault_token:
                type: string
              customer_vault_token:
                type: string
              current_vault:
                type: string
              expiration_year:
                type: string
              expiration_month:
                type: string
              card_type:
                type: string
              last_four:
                type: string
    example:
      subscription:
        product_handle: basic
        next_billing_at: '2010-08-29T12:00:00-04:00'
        customer_attributes:
          first_name: John
          last_name: Doe
          email: john.doe@example.com
          reference: '123'
          organization: Acme Widgets
        payment_profile_attributes:
          vault_token: '12345'
          customer_vault_token: '67890'
          current_vault: authorizenet
          expiration_year: '2020'
          expiration_month: '12'
          card_type: visa
          last_four: '1111'
    x-stoplight:
      id: subscriptions/subscription-import-request
      name: Subscription Import Request
      public: true
  subscriptions/subscription-import-response:
    title: Subscription Import Response
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: 'null'
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: 'null'
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: string
          coupon_use_count:
            type: 'null'
          coupon_uses_allowed:
            type: 'null'
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: string
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: string
              address:
                type: 'null'
              address_2:
                type: 'null'
              city:
                type: 'null'
              state:
                type: 'null'
              zip:
                type: 'null'
              country:
                type: 'null'
              phone:
                type: 'null'
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: string
              cc_emails:
                type: 'null'
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type: string
                    return_params:
                      type: string
                    url:
                      type: string
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: 'null'
              billing_city:
                type: 'null'
              billing_state:
                type: 'null'
              billing_zip:
                type: 'null'
              billing_country:
                type: 'null'
              customer_vault_token:
                type: string
              billing_address_2:
                type: 'null'
              payment_type:
                type: string
    example:
      subscription:
        id: 15254809
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2016-11-15T15:33:44-05:00'
        created_at: '2016-11-15T15:33:44-05:00'
        updated_at: '2016-11-15T15:33:44-05:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2017-08-29T12:00:00-04:00'
        next_assessment_at: '2017-08-29T12:00:00-04:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: null
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2016-11-15T15:33:44-05:00'
        previous_state: active
        signup_payment_id: 0
        signup_revenue: '0.00'
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: 0
        product_price_in_cents: 1000
        product_version_number: 7
        payment_type: credit_card
        referral_code: tg8qbq
        coupon_use_count: null
        coupon_uses_allowed: null
        customer:
          id: 14731081
          first_name: John
          last_name: Doe
          organization: Acme Widgets
          email: john.doe@example.com
          created_at: '2016-11-15T15:33:44-05:00'
          updated_at: '2016-11-15T15:33:45-05:00'
          reference: '123'
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: null
          portal_invite_last_sent_at: '2016-11-15T15:33:45-05:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2016-11-15T15:33:45-05:00'
          cc_emails: null
        product:
          id: 3792003
          name: $10 Basic Plan
          handle: basic
          description: lorem ipsum
          accounting_code: basic
          request_credit_card: false
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-03-24T13:38:39-04:00'
          updated_at: '2016-11-03T13:03:05-04:00'
          price_in_cents: 1000
          interval: 1
          interval_unit: day
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: false
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 7
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 281054
              return_url: 'http://www.example.com?successfulsignup'
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
            - id: 281240
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
            - id: 282694
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
        credit_card:
          id: 10202898
          first_name: John
          last_name: Doe
          masked_card_number: XXXX-XXXX-XXXX-1111
          card_type: visa
          expiration_month: 12
          expiration_year: 2020
          customer_id: 14731081
          current_vault: authorizenet
          vault_token: '12345'
          billing_address: null
          billing_city: null
          billing_state: null
          billing_zip: null
          billing_country: null
          customer_vault_token: '67890'
          billing_address_2: null
          payment_type: credit_card
    x-stoplight:
      id: subscriptions/subscription-import-response
      name: Subscription Import Response
      public: true
  subscriptions/cancel-subscription-request:
    title: Cancel Subscription Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          cancellation_message:
            type: string
          cancellation_method:
            type: string
          reason_code:
            type: string
    example:
      subscription:
        cancellation_message: Canceling the subscription via the API
    x-stoplight:
      id: subscriptions/cancel-subscription-request
      name: Cancel Subscription Request
      public: true
  subscriptions/update-subscription-billing-day-change-request:
    title: 'Update Subscription: Billing Day Change Request'
    type: object
    properties:
      subscription:
        type: object
        properties:
          snap_day:
            type: string
    example:
      subscription:
        snap_day: end
    x-stoplight:
      id: subscriptions/update-subscription-billing-day-change-request
      name: 'Update Subscription: Billing Day Change Request'
      public: true
  subscriptions/update-subscription-payment-method-request:
    title: 'Update Subscription: Payment Method Request'
    type: object
    properties:
      subscription:
        type: object
        properties:
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
    example:
      subscription:
        credit_card_attributes:
          full_number: '4111111111111111'
          expiration_month: '10'
          expiration_year: '2030'
    x-stoplight:
      id: subscriptions/update-subscription-payment-method-request
      name: 'Update Subscription: Payment Method Request'
      public: true
  subscriptions/update-subscription-product-change-request:
    title: 'Update Subscription: Product Change Request'
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
    example:
      subscription:
        product_handle: pro
    x-stoplight:
      id: subscriptions/update-subscription-product-change-request
      name: 'Update Subscription: Product Change Request'
      public: true
  subscriptions/change-default-payment-profile-response:
    title: Create Default Payment Profile Response
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          masked_card_number:
            type: string
          card_type:
            type: string
          expiration_month:
            type: integer
          expiration_year:
            type: integer
          customer_id:
            type: integer
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          customer_vault_token:
            type: 'null'
          billing_address_2:
            type: string
          payment_type:
            type: string
    example:
      payment_profile:
        id: 10211899
        first_name: Amelia
        last_name: Example
        masked_card_number: XXXX-XXXX-XXXX-1
        card_type: bogus
        expiration_month: 2
        expiration_year: 2018
        customer_id: 14399371
        current_vault: bogus
        vault_token: '1'
        billing_address: ''
        billing_city: ''
        billing_state: ''
        billing_zip: ''
        billing_country: ''
        customer_vault_token: null
        billing_address_2: ''
        payment_type: credit_card
    x-stoplight:
      id: subscriptions/change-default-payment-profile-response
      name: Create Default Payment Profile Response
      public: true
  subscriptions/subscription-override-request:
    title: Subscription Override Request
    type: object
    example:
      subscription:
        activated_at: '1999-12-01'
        canceled_at: '2000-12-31'
        cancellation_message: Original cancellation in 2000
        expires_at: '2001-07-15'
    x-stoplight:
      id: subscriptions/subscription-override-request
      name: Subscription Override Request
      public: true
  subscriptions/subscription-preview-request:
    title: Subscription Preview Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              address:
                type: string
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              country:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
              billing_address:
                type: string
              billing_city:
                type: string
              billing_state:
                type: string
              billing_zip:
                type: string
              billing_country:
                type: string
    example:
      subscription:
        product_handle: paid-annual-seats
        customer_attributes:
          first_name: Sasha
          last_name: Test
          email: sasha@example.com
          address: 870 Massachusetts Avenue
          city: Boston
          state: MA
          zip: 02118
          country: US
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
          billing_address: 870 Massachusetts Avenue
          billing_city: 'Boston '
          billing_state: MA
          billing_zip: '02118 '
          billing_country: 'US '
    x-stoplight:
      id: subscriptions/subscription-preview-request
      name: Subscription Preview Request
      public: true
  transactions/transaction-response:
    title: Transaction Response
    type: object
    properties:
      transaction:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type:
              - 'null'
              - string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type:
              - string
              - 'null'
          gateway_transaction_id:
            type:
              - string
              - 'null'
          gateway_order_id:
            type:
              - 'null'
              - string
          payment_id:
            type:
              - 'null'
              - integer
          product_id:
            type: integer
          tax_id:
            type:
              - 'null'
              - integer
          component_id:
            type:
              - 'null'
              - integer
          statement_id:
            type: integer
          customer_id:
            type: integer
          item_name:
            type:
              - 'null'
              - string
          parent_id:
            type:
              - integer
              - 'null'
            description: '(Experimental) Only present for Payment types. Some payments modify earlier payments, such as when a payment from one subscription is "split" and applied to other subscriptions in Invoice Consolidation. In those cases, this field identifies the original Payment (by ID) from which this one derived.'
          role:
            type:
              - string
              - 'null'
            description: '(Experimental) Only present for Payment types. Payments may be marked with a role to define the context in which they were applied. Valid values are currently reserved for invoicing and consolidated invoicing: invoice_payment, consolidated_invoice_payment, invoice_segment_payment, payment_split'
          card_number:
            type:
              - string
              - 'null'
            description: Only present for Payment types.  The masked card  number used for the payment.
          card_expiration:
            type:
              - string
              - 'null'
            description: 'Only present for Payment types.  The expiration date of the card used for the payment, in "MM/YYYY" format.'
          card_type:
            type:
              - string
              - 'null'
            description: 'Only present for Payment types.  The brand of the card used in the payment transaciton, i.e. `visa`,`master`, `discover`, `american_express`, `diners_club`, `jcb`, `switch`, `solo`, `dankort`, `maestro`, `forbrugsforeningen`, or `laser`.'
          refunded_amount_in_cents:
            type: integer
            description: Only present for Payment types.  The amount of this payment that has been refunded.
          original_amount_in_cents:
            type: integer
            description: Only present for Charge or Credit types.  Returns the amount of the charge before discounts. (Which is a mirror of `amount_in_cents` but with a more descriptive name.)
          discount_amount_in_cents:
            type: integer
            description: 'Only present for Charge or Credit types.  Returns the amount of the discount applied to this charge, or 0 if no discount was applied.'
          taxable_amount_in_cents:
            type:
              - integer
              - 'null'
            description: 'Only present for Charge or Credit types.  Returns `null` if the charge or credit was not taxable.  If the charge or credit was taxable, returns the taxable amount, which is the amount after any discounts i.e. `original_amount_in_cents - discount_amount_in_cents`'
          taxations:
            type: array
            description: 'Only present on Charge and Credit types.  An array of detailed taxation data for the charge, one element per tax that gets applied.'
            items:
              type: object
              properties:
                tax_id:
                  type: integer
                  description: The ID of the tax represented in the taxation.
                tax_charge_id:
                  type: integer
                  description: The ID of another charge that represents the amount charged in this taxation.
                tax_name:
                  type: string
                  description: The name of the tax applied.
                rate:
                  type: string
                  description: 'The tax rate, when applied, as a string representing a decimal number.  e.g. "0.05" would represent a 5% tax.'
                tax_amount_in_cents:
                  type: integer
                  description: The amount of tax from the tax identified by `tax_id` on this charge.
                tax_rules:
                  type: array
                  description: A single Chargify tax can have many tax rules.  This array enumerates all of the rules (scoped to the single tax) that applied to this charge.
                  items:
                    type: object
                    properties:
                      tax_rule_id:
                        type: integer
                      country_code:
                        type: string
                      subdivision_code:
                        type: string
                      rate:
                        type: string
                      tax_amount_in_cents:
                        type: integer
                      description:
                        type: string
    example:
      transaction:
        id: 237759849
        subscription_id: 21607180
        type: Payment
        kind: one_time
        transaction_type: payment
        success: true
        amount_in_cents: 10000
        memo: 'Payment for: 123'
        created_at: '2018-04-24T16:48:19-05:00'
        starting_balance_in_cents: 10000
        ending_balance_in_cents: 0
        gateway_used: bogus
        gateway_transaction_id: '53433'
        gateway_order_id: null
        payment_id: null
        product_id: 4610619
        tax_id: null
        component_id: null
        statement_id: 113513284
        customer_id: 21259051
        item_name: null
        parent_id: null
        role: null
        card_number: XXXX-XXXX-XXXX-1
        card_expiration: 01/2028
        card_type: bogus
        refunded_amount_in_cents: 0
    x-stoplight:
      id: transactions/transaction-response
      name: Transaction Response
      public: true
  coupons/create-coupon-input:
    title: Create Coupon Input
    type: object
    properties:
      coupon:
        type: object
        properties:
          name:
            type: string
            description: The internal coupon name. This information is never displayed to customers.
          code:
            type: string
            description: 'The coupon code. This is used by you or your customers to apply the coupon to a subscription. The code may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): `%`, `@`, `+`, `-`, `_`, and `.`'
          description:
            type: string
            description: The coupon description. This will be displayed to the customers after the coupon validation.
          percentage:
            type: string
            description: 'The discount percentage. Should be an integer between 1 and 100. You should set the percentage or the amount, but not both.'
          allow_negative_balance:
            type:
              - boolean
              - string
            description: 'If `true`, credits will carry forward to next billing. Otherwise discount may not exceed total of the charges.    '
          recurring:
            type:
              - string
              - boolean
            description: 'If `true`, the discount will be applied at signup and every renewal (for the number of renewals given by duration_period_count). Otherwise, discount will be applied only at signup.'
          end_date:
            type:
              - string
              - 'null'
            description: 'Coupon ending date. If set, the coupon will expire at the end of the day in your site’s time zone on this date. (See Expiration Date on [Coupons](https://help.chargify.com/products/product-coupons.html) for more details.)'
            format: date-time
          product_family_id:
            type: string
            description: 'The ID of the product family to which the coupon belongs. The coupon can be added only to products in this product family. '
          stackable:
            type:
              - boolean
              - string
            description: If `true` coupon can be combined with other stackable coupons to produce a larger discount. If `false` coupon cannot be combined with other coupons.
          compounding_strategy:
            type: string
            enum:
              - full-price
              - compound
            description: Must be either `compound` or  `full-price`.
      restricted_products:
        type: object
        properties:
          '1':
            type: boolean
      restricted_components:
        type: object
        properties:
          '1':
            type: boolean
          '2':
            type: boolean
    example:
      coupon:
        name: 15% off
        code: 15OFF
        description: 15% off for life
        percentage: '15'
        allow_negative_balance: 'false'
        recurring: 'false'
        end_date: '2012-08-29T12:00:00-04:00'
        product_family_id: '2'
        stackable: 'true'
        compounding_strategy: compound
      restricted_products:
        '1': true
      restricted_components:
        '1': true
        '2': false
    x-stoplight:
      id: coupons/create-coupon-input
      name: Create Coupon Input
      public: true
  coupons/coupon-usage-output:
    title: Coupon Usage Output
    type: array
    items:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
        id:
          type: integer
          description: ID of the product
        signups:
          type: integer
          description: Number of times the coupon has been applied
        savings:
          type:
            - number
            - 'null'
          description: Dollar amount of customer savings as a result of the coupon.
        savings_in_cents:
          type:
            - number
            - 'null'
          description: Dollar amount of customer savings as a result of the coupon.
        revenue:
          type:
            - number
            - 'null'
          description: Total revenue of the all subscriptions that have received a discount from this coupon.
        revenue_in_cents:
          type: number
          description: Total revenue of the all subscriptions that have received a discount from this coupon.
    example:
      - name: No cost product
        id: 3903594
        signups: 0
        savings: 0
        savings_in_cents: 0
        revenue: 0
        revenue_in_cents: 0
      - name: Product that expires
        id: 3853680
        signups: 0
        savings: 0
        savings_in_cents: 0
        revenue: 0
        revenue_in_cents: 0
      - name: Trial Product
        id: 3861800
        signups: 1
        savings: 30
        savings_in_cents: 3000
        revenue: 20
        revenue_in_cents: 2000
    x-stoplight:
      id: coupons/coupon-usage-output
      name: Coupon Usage Output
      public: true
  coupon/create-subscription-with-coupon-input:
    title: Create Subscription with Coupon Input
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
          coupon_code:
            type: string
    example:
      subscription:
        product_handle: basic
        customer_attributes:
          first_name: Joe
          last_name: Blow
          email: joe@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
        coupon_code: 100PERCENT
    x-stoplight:
      id: coupon/create-subscription-with-coupon-input
      name: Create Subscription with Coupon Input
      public: true
  coupon/create-subscription-with-coupon-output:
    title: Create Subscription with Coupon Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: 'null'
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: string
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: string
          coupon_use_count:
            type: integer
          coupon_uses_allowed:
            type: 'null'
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: 'null'
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: 'null'
              address_2:
                type: 'null'
              city:
                type: 'null'
              state:
                type: 'null'
              zip:
                type: 'null'
              country:
                type: 'null'
              phone:
                type: 'null'
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: string
              cc_emails:
                type: 'null'
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type: string
                    return_params:
                      type: string
                    url:
                      type: string
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: 'null'
              billing_city:
                type: 'null'
              billing_state:
                type: 'null'
              billing_zip:
                type: 'null'
              billing_country:
                type: 'null'
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: 'null'
              payment_type:
                type: string
    example:
      subscription:
        id: 15479934
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2016-12-02T15:59:08-05:00'
        created_at: '2016-12-02T15:59:06-05:00'
        updated_at: '2016-12-02T15:59:08-05:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2016-12-03T15:59:06-05:00'
        next_assessment_at: '2016-12-03T15:59:06-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: null
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2016-12-02T15:59:06-05:00'
        previous_state: active
        signup_payment_id: 164720323
        signup_revenue: '5.00'
        delayed_cancel_at: null
        coupon_code: 100PERCENT
        total_revenue_in_cents: 500
        product_price_in_cents: 1000
        product_version_number: 7
        payment_type: credit_card
        referral_code: 7b8p8v
        coupon_use_count: 1
        coupon_uses_allowed: null
        customer:
          id: 14943291
          first_name: Joe
          last_name: Blow
          organization: null
          email: joe@example.com
          created_at: '2016-12-02T15:59:06-05:00'
          updated_at: '2016-12-02T15:59:09-05:00'
          reference: null
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: null
          portal_invite_last_sent_at: '2016-12-02T15:59:09-05:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2016-12-02T15:59:09-05:00'
          cc_emails: null
          tax_exempt: false
        product:
          id: 3792003
          name: $10 Basic Plan
          handle: basic
          description: lorem ipsum
          accounting_code: basic
          request_credit_card: false
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2016-03-24T13:38:39-04:00'
          updated_at: '2016-11-03T13:03:05-04:00'
          price_in_cents: 1000
          interval: 1
          interval_unit: day
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: false
          return_params: ''
          taxable: false
          update_return_url: ''
          initial_charge_after_trial: false
          version_number: 7
          update_return_params: ''
          product_family:
            id: 527890
            name: Acme Projects
            description: ''
            handle: billing-plans
            accounting_code: null
          public_signup_pages:
            - id: 281054
              return_url: 'http://www.example.com?successfulsignup'
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic'
            - id: 281240
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic'
            - id: 282694
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic'
        credit_card:
          id: 10345872
          first_name: Joe
          last_name: Blow
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 10
          expiration_year: 2020
          customer_id: 14943291
          current_vault: bogus
          vault_token: '1'
          billing_address: null
          billing_city: null
          billing_state: null
          billing_zip: null
          billing_country: null
          customer_vault_token: null
          billing_address_2: null
          payment_type: credit_card
    x-stoplight:
      id: coupon/create-subscription-with-coupon-output
      name: Create Subscription with Coupon Output
      public: true
  coupon/add-the-coupon-to-subscription-output:
    title: Add the Coupon to Subscription Output
    type: object
    properties:
      codes:
        type: array
        items:
          type: string
    example:
      codes:
        - COUPON_1
        - COUPON_2
    x-stoplight:
      id: coupon/add-the-coupon-to-subscription-output
      name: Add the Coupon to Subscription Output
      public: true
  coupons/list-coupons-for-a-site-output:
    title: List Coupons for a Site Output
    type: array
    items:
      type: object
      properties:
        coupon:
          type: object
          properties:
            id:
              type: integer
              description: The ID of the coupon in Chargify.
            name:
              type: string
              description: The na
            code:
              type: string
            description:
              type: string
            amount_in_cents:
              type: 'null'
            product_family_id:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
            start_date:
              type: string
            end_date:
              type: 'null'
            percentage:
              type: integer
            recurring:
              type: boolean
            duration_period_count:
              type: 'null'
            duration_interval:
              type: integer
            duration_interval_unit:
              type: string
            allow_negative_balance:
              type: boolean
            archived_at:
              type: 'null'
            conversion_limit:
              type: integer
            stackable:
              type: boolean
            compounding_strategy:
              type: string
            coupon_restrictions:
              type: array
              items:
                type: object
    example:
      - coupon:
          id: 999999
          name: 50% coupon
          code: 50PERCENT
          description: 50 PERCENT OFF
          amount_in_cents: null
          product_family_id: 527890
          created_at: '2016-10-21T17:02:08-04:00'
          updated_at: '2016-10-21T17:06:11-04:00'
          start_date: '2016-10-21T17:02:08-04:00'
          end_date: null
          percentage: 50
          recurring: true
          duration_period_count: null
          duration_interval: 1
          duration_interval_unit: day
          allow_negative_balance: true
          archived_at: null
          conversion_limit: 100
          stackable: false
          compounding_strategy: compound
          coupon_restrictions: []
      - coupon:
          id: 123456
          name: 100% coupon
          code: 100PERCENT
          description: 100 PERCENT OFF
          amount_in_cents: null
          product_family_id: 527890
          created_at: '2016-10-21T17:02:08-04:00'
          updated_at: '2016-10-21T17:06:11-04:00'
          start_date: '2016-10-21T17:02:08-04:00'
          end_date: null
          percentage: 50
          recurring: true
          duration_period_count: null
          duration_interval: 1
          duration_interval_unit: day
          allow_negative_balance: true
          archived_at: null
          conversion_limit: 100
          stackable: false
          compounding_strategy: compound
          coupon_restrictions: []
      - coupon:
          id: 888888
          name: 25% coupon
          code: 25PERCENT
          description: 25 PERCENT OFF
          amount_in_cents: null
          product_family_id: 527890
          created_at: '2016-10-21T17:02:08-04:00'
          updated_at: '2016-10-21T17:06:11-04:00'
          start_date: '2016-10-21T17:02:08-04:00'
          end_date: null
          percentage: 25
          recurring: true
          duration_period_count: null
          duration_interval: 1
          duration_interval_unit: day
          allow_negative_balance: true
          archived_at: null
          conversion_limit: 100
          stackable: false
          compounding_strategy: compound
          coupon_restrictions: []
    x-stoplight:
      id: coupons/list-coupons-for-a-site-output
      name: List Coupons for a Site Output
      public: true
  coupon/subcodes/create-a-coupon-subcode:
    title: Create a Coupon Subcode Input
    type: object
    example:
      codes:
        - 15OFF
        - 20OFF
        - 50 OFF
    x-stoplight:
      id: coupon/subcodes/create-a-coupon-subcode
      name: Create a Coupon Subcode Input
      public: true
  coupons/subcodes/create-a-coupon-subcode-output:
    title: Create a Coupon Subcode Output
    type: object
    properties:
      created_codes:
        type: array
        items:
          type: string
      duplicate_codes:
        type: array
        items:
          type: object
      invalid_codes:
        type: array
        items:
          type: object
    example:
      created_codes:
        - BALTIMOREFALL
        - ORLANDOFALL
        - DETROITFALL
      duplicate_codes: []
      invalid_codes: []
    x-stoplight:
      id: coupons/subcodes/create-a-coupon-subcode-output
      name: Create a Coupon Subcode Output
      public: true
  coupons/subcodes/retrieve-coupon-subcodes-output:
    title: Read Coupon Subcodes for a Site
    type: object
    properties:
      codes:
        type: array
        items:
          type: string
    example:
      codes:
        - 3JU6PR
        - 9RO6MP
        - 8OG1VV
        - 5FL7VV
        - 2SV8XK
        - 4LW8LH
        - 3VL4GZ
        - 9UI9XO
        - 0LZ0CC
        - 8XI9JV
        - 9UV5YE
        - 3UI4GX
        - 6SL5ST
        - 9WC8IJ
        - 2KA3PZ
        - 7WR1VR
        - 3VY7MN
        - 6KC3KB
        - 7DF7YT
        - 9FH1ED
    x-stoplight:
      id: coupons/subcodes/retrieve-coupon-subcodes-output
      name: Read Coupon Subcodes for a Site
      public: true
  customers/list-customers-for-a-site-output:
    title: Read Customers for a Site Output
    type: array
    items:
      type: object
      properties:
        customer:
          type: object
          properties:
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
            cc_emails:
              type: string
            organization:
              type: string
            reference:
              type: 'null'
            id:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
            address:
              type: string
            address_2:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
            country:
              type: string
            phone:
              type: string
            verified:
              type: 'null'
            portal_customer_created_at:
              type: string
            portal_invite_last_sent_at:
              type: string
            portal_invite_last_accepted_at:
              type: 'null'
            tax_exempt:
              type: boolean
    example:
      - customer:
          first_name: Kayla
          last_name: Test
          email: kayla@example.com
          cc_emails: 'john@example.com, sue@example.com'
          organization: ''
          reference: null
          id: 14126091
          created_at: '2016-10-04T15:22:27-04:00'
          updated_at: '2016-10-04T15:22:30-04:00'
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          verified: null
          portal_customer_created_at: '2016-10-04T15:22:29-04:00'
          portal_invite_last_sent_at: '2016-10-04T15:22:30-04:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
      - customer:
          first_name: 'Nick '
          last_name: Test
          email: nick@example.com
          cc_emails: 'john@example.com, sue@example.com'
          organization: ''
          reference: null
          id: 14254093
          created_at: '2016-10-13T16:52:51-04:00'
          updated_at: '2016-10-13T16:52:54-04:00'
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          verified: null
          portal_customer_created_at: '2016-10-13T16:52:54-04:00'
          portal_invite_last_sent_at: '2016-10-13T16:52:54-04:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
      - customer:
          first_name: Don
          last_name: Test
          email: don@example.com
          cc_emails: 'john@example.com, sue@example.com'
          organization: ''
          reference: null
          id: 14332342
          created_at: '2016-10-19T10:49:13-04:00'
          updated_at: '2016-10-19T10:49:19-04:00'
          address: 1737 15th St
          address_2: ''
          city: Boulder
          state: CO
          zip: '80302'
          country: US
          phone: ''
          verified: null
          portal_customer_created_at: '2016-10-19T10:49:19-04:00'
          portal_invite_last_sent_at: '2016-10-19T10:49:19-04:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
    x-stoplight:
      id: customers/list-customers-for-a-site-output
      name: Read Customers for a Site Output
      public: true
  customers/search-for-customer-output:
    title: Search for Customer Output
    type: array
    items:
      type: object
      properties:
        customer:
          type: object
          properties:
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
            cc_emails:
              type:
                - 'null'
                - string
            organization:
              type: string
            reference:
              type: string
            id:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
            address:
              type:
                - 'null'
                - string
            address_2:
              type:
                - 'null'
                - string
            city:
              type:
                - 'null'
                - string
            state:
              type:
                - 'null'
                - string
            zip:
              type:
                - 'null'
                - string
            country:
              type:
                - 'null'
                - string
            phone:
              type:
                - 'null'
                - string
            verified:
              type: boolean
            portal_customer_created_at:
              type:
                - 'null'
                - string
            portal_invite_last_sent_at:
              type:
                - 'null'
                - string
            portal_invite_last_accepted_at:
              type: 'null'
            tax_exempt:
              type: boolean
    example:
      - customer:
          first_name: Amelia
          last_name: Example
          email: amelia@example.com
          cc_emails: 'john@example.com, joe@example.com'
          organization: Acme
          reference: JQPUBLIC
          id: 14399371
          created_at: '2016-10-24T16:20:12-04:00'
          updated_at: '2016-10-26T13:25:33-04:00'
          address: 123 Anywhere Street
          address_2: ''
          city: Anywhere
          state: MA
          zip: '02120'
          country: US
          phone: 555-555-1212
          verified: false
          portal_customer_created_at: null
          portal_invite_last_sent_at: null
          portal_invite_last_accepted_at: null
          tax_exempt: false
      - customer:
          first_name: Matt
          last_name: Example
          email: matt@example.com
          cc_emails: ''
          organization: Acme
          reference: '1234'
          id: 14585723
          created_at: '2016-11-04T17:08:31-04:00'
          updated_at: '2016-12-02T18:03:36-05:00'
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          verified: false
          portal_customer_created_at: '2016-11-04T17:08:34-04:00'
          portal_invite_last_sent_at: '2016-11-04T17:08:34-04:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
      - customer:
          first_name: John
          last_name: Doe
          email: john.doe@example.com
          cc_emails: null
          organization: Acme Widgets
          reference: '123'
          id: 14731081
          created_at: '2016-11-15T15:33:44-05:00'
          updated_at: '2016-11-15T15:33:45-05:00'
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: null
          verified: false
          portal_customer_created_at: '2016-11-15T15:33:45-05:00'
          portal_invite_last_sent_at: '2016-11-15T15:33:45-05:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
      - customer:
          first_name: Joe
          last_name: Blow
          email: joe@example.com
          cc_emails: ''
          organization: Acme
          reference: ABC123
          id: 14943291
          created_at: '2016-12-02T15:59:06-05:00'
          updated_at: '2016-12-02T18:03:17-05:00'
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          verified: false
          portal_customer_created_at: '2016-12-02T15:59:09-05:00'
          portal_invite_last_sent_at: '2016-12-02T15:59:09-05:00'
          portal_invite_last_accepted_at: null
          tax_exempt: false
    x-stoplight:
      id: customers/search-for-customer-output
      name: Search for Customer Output
      public: true
  customer/create-a-customer-input:
    title: Create a Customer Input
    type: object
    properties:
      customer:
        type: object
        required:
          - first_name
          - last_name
          - email
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
    required:
      - customer
    example:
      customer:
        first_name: Martha
        last_name: Washington
        email: martha@example.com
    x-stoplight:
      id: customer/create-a-customer-input
      name: Create a Customer Input
      public: true
  customer/create-a-customer-output:
    title: Create a Customer Output
    type: object
    properties:
      customer:
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          cc_emails:
            type: string
          organization:
            type: 'null'
          reference:
            type: 'null'
          id:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
          address:
            type: 'null'
          address_2:
            type: 'null'
          city:
            type: 'null'
          state:
            type: 'null'
          zip:
            type: 'null'
          country:
            type: 'null'
          phone:
            type: 'null'
          verified:
            type: boolean
          portal_customer_created_at:
            type: 'null'
          portal_invite_last_sent_at:
            type: 'null'
          portal_invite_last_accepted_at:
            type: 'null'
          tax_exempt:
            type: boolean
    example:
      customer:
        first_name: Martha
        last_name: Washington
        email: martha@example.com
        cc_emails: 'john@example.com, sue@example.com'
        organization: null
        reference: null
        id: 14967442
        created_at: '2016-12-05T10:33:07-05:00'
        updated_at: '2016-12-05T10:33:07-05:00'
        address: null
        address_2: null
        city: null
        state: null
        zip: null
        country: null
        phone: null
        verified: false
        portal_customer_created_at: null
        portal_invite_last_sent_at: null
        portal_invite_last_accepted_at: null
        tax_exempt: false
    x-stoplight:
      id: customer/create-a-customer-output
      name: Create a Customer Output
      public: true
  customers/list-customers-subscriptions-array-output:
    title: Read Customers Subscriptions Array Output
    type: array
    items:
      type: object
      properties:
        subscription:
          type: object
          properties:
            id:
              type: integer
            state:
              type: string
            balance_in_cents:
              type: integer
            total_revenue_in_cents:
              type: integer
            product_price_in_cents:
              type: integer
            product_version_number:
              type: integer
            current_period_ends_at:
              type: string
            next_assessment_at:
              type: string
            trial_started_at:
              type: 'null'
            trial_ended_at:
              type: 'null'
            activated_at:
              type: string
            expires_at:
              type: 'null'
            created_at:
              type: string
            updated_at:
              type: string
            cancellation_message:
              type: 'null'
            cancellation_method:
              type: 'null'
            cancel_at_end_of_period:
              type: boolean
            canceled_at:
              type: 'null'
            current_period_started_at:
              type: string
            previous_state:
              type: string
            signup_payment_id:
              type: integer
            signup_revenue:
              type: string
            delayed_cancel_at:
              type: 'null'
            coupon_code:
              type: 'null'
            payment_collection_method:
              type: string
            snap_day:
              type: 'null'
            customer:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                cc_emails:
                  type: string
                organization:
                  type: string
                reference:
                  type: 'null'
                id:
                  type: integer
                created_at:
                  type: string
                updated_at:
                  type: string
                address:
                  type: string
                address_2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
                country:
                  type: string
                phone:
                  type: string
                verified:
                  type: boolean
                portal_customer_created_at:
                  type: string
                portal_invite_last_sent_at:
                  type: string
                portal_invite_last_accepted_at:
                  type: 'null'
                tax_exempt:
                  type: boolean
            product:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                handle:
                  type: string
                description:
                  type: string
                accounting_code:
                  type: string
                price_in_cents:
                  type: integer
                interval:
                  type: integer
                interval_unit:
                  type: string
                initial_charge_in_cents:
                  type: 'null'
                expiration_interval:
                  type: 'null'
                expiration_interval_unit:
                  type: string
                trial_price_in_cents:
                  type: 'null'
                trial_interval:
                  type: 'null'
                trial_interval_unit:
                  type: string
                initial_charge_after_trial:
                  type: boolean
                return_params:
                  type: string
                request_credit_card:
                  type: boolean
                require_credit_card:
                  type: boolean
                created_at:
                  type: string
                updated_at:
                  type: string
                archived_at:
                  type: 'null'
                update_return_url:
                  type: string
                update_return_params:
                  type: string
                product_family:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    handle:
                      type: string
                    accounting_code:
                      type: 'null'
                    description:
                      type: string
                public_signup_pages:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      url:
                        type: string
                taxable:
                  type: boolean
                version_number:
                  type: integer
            credit_card:
              type: object
              properties:
                id:
                  type: integer
                payment_type:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                masked_card_number:
                  type: string
                card_type:
                  type: string
                expiration_month:
                  type: integer
                expiration_year:
                  type: integer
                billing_address:
                  type: string
                billing_address_2:
                  type: string
                billing_city:
                  type: string
                billing_state:
                  type: string
                billing_country:
                  type: string
                billing_zip:
                  type: string
                current_vault:
                  type: string
                vault_token:
                  type: string
                customer_vault_token:
                  type: 'null'
                customer_id:
                  type: integer
            payment_type:
              type: string
            referral_code:
              type: string
            next_product_id:
              type: 'null'
            coupon_use_count:
              type: 'null'
            coupon_uses_allowed:
              type: 'null'
    example:
      - subscription:
          id: 14950975
          state: active
          balance_in_cents: 0
          total_revenue_in_cents: 22500
          product_price_in_cents: 7500
          product_version_number: 1
          current_period_ends_at: '2017-10-27T16:40:38-04:00'
          next_assessment_at: '2017-10-27T16:40:38-04:00'
          trial_started_at: null
          trial_ended_at: null
          activated_at: '2016-10-27T12:06:32-04:00'
          expires_at: null
          created_at: '2016-10-27T12:06:30-04:00'
          updated_at: '2016-11-18T13:22:53-05:00'
          cancellation_message: null
          cancellation_method: null
          cancel_at_end_of_period: false
          canceled_at: null
          current_period_started_at: '2016-10-27T16:40:38-04:00'
          previous_state: active
          signup_payment_id: 159783974
          signup_revenue: '75.00'
          delayed_cancel_at: null
          coupon_code: null
          payment_collection_method: automatic
          snap_day: null
          customer:
            first_name: Martha
            last_name: Example
            email: marthw@example.com
            cc_emails: ''
            organization: ''
            reference: null
            id: 14451040
            created_at: '2016-10-27T12:05:23-04:00'
            updated_at: '2016-12-05T10:53:37-05:00'
            address: 123 Anywhere Street
            address_2: ''
            city: Boston
            state: MA
            zip: '02120'
            country: US
            phone: ''
            verified: false
            portal_customer_created_at: '2016-10-27T12:05:25-04:00'
            portal_invite_last_sent_at: '2016-10-27T12:06:32-04:00'
            portal_invite_last_accepted_at: null
            tax_exempt: false
          product:
            id: 4298069
            name: ANNUAL product
            handle: annual-product-test
            description: ''
            accounting_code: ''
            price_in_cents: 7500
            interval: 12
            interval_unit: month
            initial_charge_in_cents: null
            expiration_interval: null
            expiration_interval_unit: never
            trial_price_in_cents: null
            trial_interval: null
            trial_interval_unit: month
            initial_charge_after_trial: false
            return_params: ''
            request_credit_card: true
            require_credit_card: true
            created_at: '2016-10-27T11:59:59-04:00'
            updated_at: '2016-10-27T11:59:59-04:00'
            archived_at: null
            update_return_url: ''
            update_return_params: ''
            product_family:
              id: 528484
              name: Products
              handle: wild-about-animals
              accounting_code: null
              description: Products
            public_signup_pages:
              - id: 299848
                url: 'https://general-goods.chargify.com/subscribe/pxfxqcgz8pq8/annual-product-test'
            taxable: false
            version_number: 1
          credit_card:
            id: 10228039
            payment_type: credit_card
            first_name: Example
            last_name: Exampe
            masked_card_number: XXXX-XXXX-XXXX-1
            card_type: bogus
            expiration_month: 1
            expiration_year: 2018
            billing_address: ''
            billing_address_2: ''
            billing_city: ''
            billing_state: ''
            billing_country: ''
            billing_zip: ''
            current_vault: bogus
            vault_token: '1'
            customer_vault_token: null
            customer_id: 14451040
          payment_type: credit_card
          referral_code: 9652hf
          next_product_id: null
          coupon_use_count: null
          coupon_uses_allowed: null
      - subscription:
          id: 14950962
          state: past_due
          balance_in_cents: 1000
          total_revenue_in_cents: 3000
          product_price_in_cents: 1000
          product_version_number: 1
          current_period_ends_at: '2016-12-27T15:42:19-05:00'
          next_assessment_at: '2016-12-05T18:22:22-05:00'
          trial_started_at: null
          trial_ended_at: null
          activated_at: '2016-10-27T12:05:24-04:00'
          expires_at: null
          created_at: '2016-10-27T12:05:23-04:00'
          updated_at: '2016-12-04T18:22:22-05:00'
          cancellation_message: null
          cancellation_method: null
          cancel_at_end_of_period: false
          canceled_at: null
          current_period_started_at: '2016-11-27T15:42:19-05:00'
          previous_state: past_due
          signup_payment_id: 159783933
          signup_revenue: '10.00'
          delayed_cancel_at: null
          coupon_code: null
          payment_collection_method: automatic
          snap_day: null
          customer:
            first_name: Martha
            last_name: Example
            email: marthw@example.com
            cc_emails: ''
            organization: ''
            reference: null
            id: 14451040
            created_at: '2016-10-27T12:05:23-04:00'
            updated_at: '2016-12-05T10:53:37-05:00'
            address: 123 Anywhere Street
            address_2: ''
            city: Boston
            state: MA
            zip: '02120'
            country: US
            phone: ''
            verified: false
            portal_customer_created_at: '2016-10-27T12:05:25-04:00'
            portal_invite_last_sent_at: '2016-10-27T12:06:32-04:00'
            portal_invite_last_accepted_at: null
            tax_exempt: false
          product:
            id: 4298068
            name: Platinum Plan
            handle: platinum123
            description: This is our platinum plan.
            accounting_code: '123'
            price_in_cents: 1000
            interval: 1
            interval_unit: month
            initial_charge_in_cents: null
            expiration_interval: null
            expiration_interval_unit: never
            trial_price_in_cents: null
            trial_interval: null
            trial_interval_unit: month
            initial_charge_after_trial: false
            return_params: ''
            request_credit_card: true
            require_credit_card: true
            created_at: '2016-10-27T11:58:02-04:00'
            updated_at: '2016-11-04T16:55:23-04:00'
            archived_at: null
            update_return_url: ''
            update_return_params: ''
            product_family:
              id: 528484
              name: Products
              handle: wild-about-animals
              accounting_code: null
              description: Products
            public_signup_pages:
              - id: 299847
                url: 'https://general-goods.chargify.com/subscribe/s5bc5q6gjftv/platinum123'
            taxable: false
            version_number: 1
          credit_card:
            id: 10228046
            payment_type: credit_card
            first_name: Example
            last_name: Example
            masked_card_number: XXXX-XXXX-XXXX-2
            card_type: bogus
            expiration_month: 2
            expiration_year: 2018
            billing_address: ''
            billing_address_2: ''
            billing_city: ''
            billing_state: ''
            billing_country: ''
            billing_zip: ''
            current_vault: bogus
            vault_token: '2'
            customer_vault_token: null
            customer_id: 14451040
          payment_type: credit_card
          referral_code: gkgb6g
          next_product_id: null
          coupon_use_count: null
          coupon_uses_allowed: null
    x-stoplight:
      id: customers/list-customers-subscriptions-array-output
      name: Read Customers Subscriptions Array Output
      public: true
  invoices/payments/create-payment-output:
    title: Create Payment Output
    type: object
    properties:
      payment:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          type:
            type: string
          kind:
            type: string
          transaction_type:
            type: string
          success:
            type: boolean
          amount_in_cents:
            type: integer
          memo:
            type: string
          created_at:
            type: string
          starting_balance_in_cents:
            type: integer
          ending_balance_in_cents:
            type: integer
          gateway_used:
            type: 'null'
          gateway_transaction_id:
            type: 'null'
          gateway_order_id:
            type: 'null'
          payment_id:
            type: 'null'
          product_id:
            type: integer
          tax_id:
            type: 'null'
          component_id:
            type: 'null'
          statement_id:
            type: integer
          customer_id:
            type: integer
          card_number:
            type: 'null'
          card_expiration:
            type: 'null'
          card_type:
            type: 'null'
          refunded_amount_in_cents:
            type: integer
    example:
      payment:
        id: 165068629
        subscription_id: 14823581
        type: Payment
        kind: manual
        transaction_type: payment
        success: true
        amount_in_cents: 1000
        memo: Lorem ipsum
        created_at: '2016-12-05T13:33:58-05:00'
        starting_balance_in_cents: 2177
        ending_balance_in_cents: 1177
        gateway_used: null
        gateway_transaction_id: null
        gateway_order_id: null
        payment_id: null
        product_id: 3794121
        tax_id: null
        component_id: null
        statement_id: 81751632
        customer_id: 14332342
        card_number: null
        card_expiration: null
        card_type: null
        refunded_amount_in_cents: 0
    x-stoplight:
      id: invoices/payments/create-payment-output
      name: Create Payment Output
      public: true
  metadata/read-metadata-subscribers-output:
    title: Read Metadata for Subscribers Output
    type: object
    properties:
      total_count:
        type: integer
      current_page:
        type: integer
      total_pages:
        type: integer
      per_page:
        type: integer
      metadata:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            resource_id:
              type: integer
            name:
              type: string
    example:
      total_count: 2
      current_page: 1
      total_pages: 1
      per_page: 20
      metadata:
        - value: The quick brown fox
          resource_id: 15479934
          name: Comments
        - value: L
          resource_id: 15479934
          name: T-Shirt Size
    x-stoplight:
      id: metadata/read-metadata-subscribers-output
      name: Read Metadata for Subscribers Output
      public: true
  metadata/read-metadata-for-a-site:
    title: Read Metadata Data for Site Output
    type: object
    properties:
      total_count:
        type: integer
      current_page:
        type: integer
      total_pages:
        type: integer
      per_page:
        type: integer
      metadata:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            resource_id:
              type: integer
            name:
              type: string
    example:
      total_count: 2
      current_page: 1
      total_pages: 1
      per_page: 20
      metadata:
        - value: Red
          resource_id: 19186044
          name: Shirt Color
        - value: Blue
          resource_id: 19186076
          name: Shirt Color
    x-stoplight:
      id: metadata/read-metadata-for-a-site
      name: Read Metadata Data for Site Output
      public: true
  list-metadata-for-a-subscriber-output:
    title: Read Metadata for a Subscriber Output
    type: object
    properties:
      total_count:
        type: integer
      current_page:
        type: integer
      total_pages:
        type: integer
      per_page:
        type: integer
      metadata:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            resource_id:
              type: integer
            name:
              type: string
    example:
      total_count: 2
      current_page: 1
      total_pages: 1
      per_page: 20
      metadata:
        - value: The quick brown fox
          resource_id: 15479934
          name: Comments
        - value: L
          resource_id: 15479934
          name: T-Shirt Size
    x-stoplight:
      id: list-metadata-for-a-subscriber-output
      name: Read Metadata for a Subscriber Output
      public: true
  metadata/update-metadata-output:
    title: Update Metadata Output
    type: array
    items:
      type: object
      properties:
        value:
          type: string
        resource_id:
          type: integer
        name:
          type: string
    example:
      - value: Blue
        resource_id: 15479934
        name: Shirt Color
    x-stoplight:
      id: metadata/update-metadata-output
      name: Update Metadata Output
      public: true
  payment-profiles/list-payment-profiles-for-a-site-outuput:
    title: List Payment Profiles for a Site Output
    type: array
    items:
      type: object
      properties:
        payment_profile:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string
            customer_id:
              type: integer
            current_vault:
              type: string
            vault_token:
              type: string
            billing_address:
              type: string
            billing_city:
              type: string
            billing_state:
              type: string
            billing_zip:
              type: string
            billing_country:
              type: string
            customer_vault_token:
              type: 'null'
            billing_address_2:
              type: string
            bank_name:
              type: string
            masked_bank_routing_number:
              type: string
            masked_bank_account_number:
              type: string
            bank_account_type:
              type: string
            bank_account_holder_type:
              type: string
            payment_type:
              type: string
    example:
      - payment_profile:
          id: 10089892
          first_name: Chester
          last_name: Tester
          customer_id: 14543792
          current_vault: bogus
          vault_token: '0011223344'
          billing_address: 456 Juniper Court
          billing_city: Boulder
          billing_state: CO
          billing_zip: '80302'
          billing_country: US
          customer_vault_token: null
          billing_address_2: ''
          bank_name: Bank of Kansas City
          masked_bank_routing_number: XXXX6789
          masked_bank_account_number: XXXX3344
          bank_account_type: checking
          bank_account_holder_type: personal
          payment_type: bank_account
      - payment_profile:
          id: 10188522
          first_name: Frankie
          last_name: Tester
          customer_id: 14543712
          current_vault: bogus
          vault_token: '123456789'
          billing_address: 123 Montana Way
          billing_city: Los Angeles
          billing_state: CA
          billing_zip: '90210'
          billing_country: US
          customer_vault_token: null
          billing_address_2: ''
          bank_name: Bank of Kansas City
          masked_bank_routing_number: XXXX6789
          masked_bank_account_number: XXXX6789
          bank_account_type: checking
          bank_account_holder_type: personal
          payment_type: bank_account
    x-stoplight:
      id: payment-profiles/list-payment-profiles-for-a-site-outuput
      name: List Payment Profiles for a Site Output
      public: true
  sales-receipts/get-a-sales-receipt-output:
    title: Get a Sales Receipt Output
    type: object
    properties:
      id:
        type: string
      site_id:
        type: integer
      subscription_id:
        type: integer
      transaction_time:
        type: string
      number:
        type: integer
      currency:
        type: string
      subtotal_in_cents:
        type: integer
      discount_in_cents:
        type: integer
      taxable_subtotal_in_cents:
        type: integer
      tax_in_cents:
        type: integer
      total_in_cents:
        type: integer
      liability_debit_in_cents:
        type: integer
      customer:
        type: object
        properties:
          id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          organization:
            type: string
          reference:
            type: string
      shipping_address:
        type: object
        properties:
          line_1:
            type: string
          line_2:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
      billing_address:
        type: object
        properties:
          line_1:
            type: string
          line_2:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
      line_items:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: integer
            amount_in_cents:
              type: integer
            discount_in_cents:
              type: integer
            tax_in_cents:
              type: integer
            accounting_code:
              type:
                - 'null'
                - string
            kind:
              type: string
            item_type:
              type: string
            item_id:
              type: integer
            item_name:
              type: string
            product_id:
              type: integer
            taxable:
              type: boolean
            description:
              type: string
      discounts:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: integer
            amount_in_cents:
              type: integer
            item_type:
              type: string
            item_id:
              type: integer
            item_name:
              type: string
            description:
              type: string
      taxes:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: integer
            amount_in_cents:
              type: integer
            item_type:
              type: string
            item_id:
              type: integer
            item_name:
              type: string
            description:
              type: string
      payments:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: integer
            liability_account:
              type: string
            amount_in_cents:
              type: integer
            kind:
              type: 'null'
            description:
              type: string
            payment_method:
              type: object
              properties:
                masked_card_number:
                  type: string
                card_expiration:
                  type: string
                card_brand:
                  type: string
    example:
      id: f22b6080-4c28-11e5-93ee-000a27020040
      site_id: 1
      subscription_id: 1
      transaction_time: '2015-08-26T15:30:45-04:00'
      number: 1
      currency: USD
      subtotal_in_cents: 7200
      discount_in_cents: 720
      taxable_subtotal_in_cents: 6480
      tax_in_cents: 549
      total_in_cents: 7029
      liability_debit_in_cents: 0
      customer:
        id: 1
        first_name: Mark
        last_name: Wahlberg
        email: marky@example.com
        organization: The Funky Bunch
        reference: marky
      shipping_address:
        line_1: 100 Shipping St.
        line_2: Apt 200
        city: Pleasantville
        state: CA
        zip: '12345'
        country: US
      billing_address:
        line_1: 1 Infinite Loop
        line_2: Suite 100
        city: Cupertino
        state: CA
        zip: '95014'
        country: US
      line_items:
        - transaction_id: 1
          amount_in_cents: 2900
          discount_in_cents: 290
          tax_in_cents: 261
          accounting_code: basic-plan-000
          kind: baseline
          item_type: Product
          item_id: 1
          item_name: Basic Plan
          product_id: 1
          taxable: true
          description: Basic Plan (08/26/2015 - 09/26/2015)
        - transaction_id: 2
          amount_in_cents: 1000
          discount_in_cents: 100
          tax_in_cents: 90
          accounting_code: null
          kind: quantity_based_component
          item_type: QuantityBasedComponent
          item_id: 1
          item_name: Taxable Widget
          product_id: 1
          taxable: true
          description: 'Taxable Widget: 10 units'
        - transaction_id: 3
          amount_in_cents: 500
          discount_in_cents: 50
          tax_in_cents: 0
          accounting_code: null
          kind: quantity_based_component
          item_type: QuantityBasedComponent
          item_id: 2
          item_name: Non-Taxable Widget
          product_id: 1
          taxable: false
          description: 'Non-Taxable Widget: 5 units'
        - transaction_id: 4
          amount_in_cents: 1000
          discount_in_cents: 100
          tax_in_cents: 90
          accounting_code: null
          kind: metered_component
          item_type: MeteredComponent
          item_id: 3
          item_name: Taxable Minutes
          product_id: 1
          taxable: true
          description: 'Taxable Minutes: 100 units'
        - transaction_id: 5
          amount_in_cents: 500
          discount_in_cents: 50
          tax_in_cents: 0
          accounting_code: null
          kind: metered_component
          item_type: MeteredComponent
          item_id: 4
          item_name: Non-Taxable Minutes
          product_id: 1
          taxable: false
          description: 'Non-Taxable Minutes: 50 units'
        - transaction_id: 6
          amount_in_cents: 100
          discount_in_cents: 10
          tax_in_cents: 9
          accounting_code: null
          kind: on_off_component
          item_type: OnOffComponent
          item_id: 6
          item_name: Taxable Add-On
          product_id: 1
          taxable: true
          description: Taxable Add-On
        - transaction_id: 7
          amount_in_cents: 100
          discount_in_cents: 10
          tax_in_cents: 0
          accounting_code: null
          kind: on_off_component
          item_type: OnOffComponent
          item_id: 8
          item_name: Non-Taxable Add-On
          product_id: 1
          taxable: false
          description: Non-Taxable Add-On
        - transaction_id: 8
          amount_in_cents: 1100
          discount_in_cents: 110
          tax_in_cents: 99
          accounting_code: basic-plan-000
          kind: initial
          item_type: Product
          item_id: 1
          item_name: Basic Plan
          product_id: 1
          taxable: true
          description: Initial/Startup fees
      discounts:
        - transaction_id: 9
          amount_in_cents: -720
          item_type: Coupon
          item_id: 1
          item_name: 10% Off
          description: 'Coupon: 10PERCENT - Save 10% on new signups'
      taxes:
        - transaction_id: 10
          amount_in_cents: 549
          item_type: Tax
          item_id: 1
          item_name: CA Sales Tax
          description: CA Sales Tax (10.0%)
      payments:
        - transaction_id: 11
          liability_account: na
          amount_in_cents: 7029
          kind: null
          description: 'Mark Wahlberg - Basic Plan: Signup payment'
          payment_method:
            masked_card_number: XXXX-XXXX-XXXX-1
            card_expiration: 12/2022
            card_brand: bogus
    x-stoplight:
      id: sales-receipts/get-a-sales-receipt-output
      name: Get a Sales Receipt Output
      public: true
  components/metered/create-usage-when-creating-a-new-subscription Input:
    title: Create Usage When Creating a New Subscription Input
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
          components:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                unit_balance:
                  type: integer
                price_point_id:
                  type: integer
    example:
      subscription:
        product_handle: basic
        customer_attributes:
          first_name: Joe
          last_name: Blow
          email: joe1049am@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
        components:
          - component_id: 195268
            unit_balance: 20
            price_point_id: 12345
    x-stoplight:
      id: components/metered/create-usage-when-creating-a-new-subscription Input
      name: Create Usage When Creating a New Subscription Input
      public: true
  components/quantity/update-the-quantity-allocation-request:
    title: Update the quantity allocation
    type: object
    properties:
      allocation:
        type: object
        properties:
          component_id:
            type: integer
          price_point_id:
            type: integer
          quantity:
            type: integer
          memo:
            type: string
          proration_downgrade_scheme:
            type: string
          proration_collection_method:
            type: string
          proration_upgrade_scheme:
            type: string
    example:
      allocation:
        component_id: 375250
        price_point_id: 75
        quantity: 29
        memo: Text messages usage May 2020
        proration_downgrade_scheme: no-prorate
        proration_collection_method: automatic
        proration_upgrade_scheme: no-prorate
    x-stoplight:
      id: components/quantity/update-the-quantity-allocation-request
      name: Update the quantity allocation
      public: true
  statements/list-statements-for-a-site:
    title: Read Statements for a Site
    type: array
    items:
      type: object
      properties:
        statement:
          type: object
          properties:
            id:
              type: integer
            basic_html_view:
              type: string
            closed_at:
              type: string
            created_at:
              type: string
            customer_billing_address:
              type: string
            customer_billing_address_2:
              type: string
            customer_billing_city:
              type: string
            customer_billing_country:
              type: string
            customer_billing_state:
              type: string
            customer_billing_zip:
              type: string
            customer_first_name:
              type: string
            customer_last_name:
              type: string
            customer_organization:
              type: string
            customer_shipping_address:
              type: string
            customer_shipping_address_2:
              type: string
            customer_shipping_city:
              type: string
            customer_shipping_country:
              type: string
            customer_shipping_state:
              type: string
            customer_shipping_zip:
              type: string
            ending_balance_in_cents:
              type: integer
            future_payments:
              type: array
              items:
                type: object
            html_view:
              type: string
            memo:
              type: string
            opened_at:
              type: string
            settled_at:
              type: string
            starting_balance_in_cents:
              type: integer
            subscription_id:
              type: integer
            text_view:
              type: string
            updated_at:
              type: string
            total_in_cents:
              type: integer
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  subscription_id:
                    type: integer
                  type:
                    type: string
                  kind:
                    type:
                      - 'null'
                      - string
                  transaction_type:
                    type: string
                  success:
                    type: boolean
                  amount_in_cents:
                    type: integer
                  memo:
                    type: string
                  created_at:
                    type: string
                  starting_balance_in_cents:
                    type: integer
                  ending_balance_in_cents:
                    type: integer
                  gateway_used:
                    type:
                      - 'null'
                      - string
                  gateway_transaction_id:
                    type:
                      - 'null'
                      - string
                  gateway_order_id:
                    type: 'null'
                  payment_id:
                    type:
                      - integer
                      - 'null'
                  product_id:
                    type: integer
                  tax_id:
                    type: 'null'
                  component_id:
                    type: 'null'
                  statement_id:
                    type: integer
                  customer_id:
                    type: integer
                  item_name:
                    type: string
                  original_amount_in_cents:
                    type: 'null'
                  discount_amount_in_cents:
                    type: 'null'
                  taxable_amount_in_cents:
                    type:
                      - integer
                      - 'null'
                  taxations:
                    type: array
                    items:
                      type: object
                      properties:
                        tax_id:
                          type: 'null'
                        tax_charge_id:
                          type: integer
                        tax_name:
                          type: string
                        rate:
                          type: string
                        tax_amount_in_cents:
                          type: integer
                        tax_rules:
                          type: array
                          items:
                            type: object
                            properties:
                              tax_rule_id:
                                type: 'null'
                              country_code:
                                type: string
                              subdivision_code:
                                type: string
                              rate:
                                type: string
                              tax_amount_in_cents:
                                type: integer
                              description:
                                type: string
                  card_number:
                    type: string
                  card_expiration:
                    type: string
                  card_type:
                    type: string
                  refunded_amount_in_cents:
                    type: integer
            events:
              type: array
              items:
                type: object
                properties:
                  event:
                    type: object
                    properties:
                      id:
                        type: integer
                      key:
                        type: string
                      message:
                        type: string
                      subscription_id:
                        type: integer
                      created_at:
                        type: string
                      event_specific_data:
                        type:
                          - 'null'
                          - object
                        properties:
                          product_id:
                            type: integer
                          account_transaction_id:
                            type:
                              - integer
                              - 'null'
                          previous_subscription_state:
                            type: string
                          new_subscription_state:
                            type: string
    example:
      - statement:
          id: 79221109
          basic_html_view: |
            <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
              <tbody>
                <tr id="billing_statement_logo">
                  <td colspan="2" id="billing_statement_logo_cell">
                    <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                  </td>
                </tr>
                <tr id="billing_statement_masthead">
                  <td id="billing_statement_merchant_information">
                    <div id="billing_statement_merchant_name">My Awesome Company</div>
                    <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                  </td>
                  <td id="billing_statement_information">
                    <div id="billing_statement_title"> (79221109)</div>
                    <div id="billing_statement_product">Acme Projects - Trial Product</div>
                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_account_information">
                    <h2 class="billing_statement_section_title">Account Information</h2>
                    <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

                  </td>
                  <td id="billing_statement_summary">
                    <h2 class="billing_statement_section_title"> Summary</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_detail" colspan="2">
                    <h2 class="billing_statement_section_title"> Detail</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="billing_statement_listing_empty_results_row">
                      <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_period_activity" colspan="2">
                    <h2 class="billing_statement_section_title">Period Activity</h2>
                    <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Signup Success</td>
                    <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                  </tr>
                </tbody>
              </table>
            </div>

                  </td>
                </tr>
                <tr>
                  <td  colspan="2">
                    <p>We thank you for your continued business!</p>
                  </td>
                </tr>
              </tbody>
            </table>
          closed_at: '2016-10-24T16:20:13-04:00'
          created_at: '2016-10-24T16:20:12-04:00'
          customer_billing_address: 123 Anywhere Street
          customer_billing_address_2: ''
          customer_billing_city: Anywhere
          customer_billing_country: US
          customer_billing_state: MA
          customer_billing_zip: '02120'
          customer_first_name: Amelia
          customer_last_name: Example
          customer_organization: ''
          customer_shipping_address: 123 Anywhere Street
          customer_shipping_address_2: ''
          customer_shipping_city: Anywhere
          customer_shipping_country: US
          customer_shipping_state: MA
          customer_shipping_zip: '02120'
          ending_balance_in_cents: 0
          future_payments: []
          html_view: |
            <div id="billing_statement">
              <div id="billing_statement_account_information_section" class="billing_statement_section">
                <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

              </div>

              <div id="billing_statement_summary_section" class="billing_statement_section">
                <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:12Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:20PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

              </div>

              <div id="billing_statement_detail_section" class="billing_statement_section">
                <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:20:12Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Trial Price (10/24/2016 - 10/31/2016)</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="billing_statement_listing_empty_results_row">
                      <td colspan="4" class="billing_statement_listing_empty_results_cell">No payments this period</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$0.00</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

              </div>

              <div id="billing_statement_period_activity_section" class="billing_statement_section">
                <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:13Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Signup Success</td>
                    <td>Successful signup for Amelia Example&#39;s subscription to Trial Product</td>
                  </tr>
                </tbody>
              </table>
            </div>

              </div>
              <div>
                <p>We thank you for your continued business!</p>
              </div>
            </div>
          memo: We thank you for your continued business!
          opened_at: '2016-10-24T16:20:12-04:00'
          settled_at: '2016-10-24T16:20:13-04:00'
          starting_balance_in_cents: 0
          subscription_id: 14900541
          text_view: |
            My Awesome Company                                                    (79221109)
            billing@example.com                                Acme Projects - Trial Product
            ================================================================================

            --------
             Summary
            --------

             ID......: 79221109
             Date....: 10/24/2016
            Billing Date......: 10/24/2016

            Starting Balance..: $0.00
            Current Charges...: $0.00
            Payments..........: $0.00
            Ending Balance....: $0.00

            Balance Paid......: 10/24/2016 04:20PM EDT

            -------------------
            Account Information
            -------------------

            Amelia Example
            amelia@example.com
            555-555-1212

            ### Shipping Address
            123 Anywhere Street
            Anywhere, MA 02120
            US

            ### Billing Address
            123 Anywhere Street
            Anywhere, MA 02120
            US


            -------
             Detail
            -------

            ### Current Charges and Adjustments

            Date/Time     Type   Detail                                              Charges
            ............  .....  ...............................................  ..........
            10/24/2016
            04:20PM EDT   Recur  Trial Price (10/24/2016 - 10/31/2016)                 $0.00
            ............  .....  ...............................................  ..........
                                                                         Totals:       $0.00

            ### Payments

            No payments this period


            ---------------
            Period Activity
            ---------------

            Date/Time     Event/Details                                                     
            ............  ..................................................................
            10/24/2016    Signup Success                                                    
            04:20PM EDT   Successful signup for Amelia Example's subscription to Trial Produ
                          ct                                                                
            ............  ..................................................................

            We thank you for your continued business!
          updated_at: '2016-10-24T16:20:13-04:00'
          total_in_cents: 0
          transactions:
            - id: 159423810
              subscription_id: 14900541
              type: Charge
              kind: trial
              transaction_type: charge
              success: true
              amount_in_cents: 0
              memo: Trial Price (10/24/2016 - 10/31/2016)
              created_at: '2016-10-24T16:20:12-04:00'
              starting_balance_in_cents: 0
              ending_balance_in_cents: 0
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: null
              product_id: 3861800
              tax_id: null
              component_id: null
              statement_id: 79221109
              customer_id: 14399371
              item_name: Trial Price
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: null
              taxations: []
          events:
            - event:
                id: 342036408
                key: signup_success
                message: Successful signup for Amelia Example's subscription to Trial Product
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:13-04:00'
                event_specific_data:
                  product_id: 3861800
                  account_transaction_id: null
      - statement:
          id: 79221381
          basic_html_view: |
            <table id="billing_statement" cellpadding="0" cellspacing="0" border="0">
              <tbody>
                <tr id="billing_statement_logo">
                  <td colspan="2" id="billing_statement_logo_cell">
                    <img src="https://s3.amazonaws.com/production.chargify/sites/31615/small.png?1464882101" alt="Logo">
                  </td>
                </tr>
                <tr id="billing_statement_masthead">
                  <td id="billing_statement_merchant_information">
                    <div id="billing_statement_merchant_name">My Awesome Company</div>
                    <div id="billing_statement_merchant_email"><a href="mailto:billing@example.com">billing@example.com</a></div>
                  </td>
                  <td id="billing_statement_information">
                    <div id="billing_statement_title"> (79221381)</div>
                    <div id="billing_statement_product">Acme Projects - Basic Plan</div>
                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_account_information">
                    <h2 class="billing_statement_section_title">Account Information</h2>
                    <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

                  </td>
                  <td id="billing_statement_summary">
                    <h2 class="billing_statement_section_title"> Summary</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_detail" colspan="2">
                    <h2 class="billing_statement_section_title"> Detail</h2>
                    <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                      <td class="billing_statement_listing_cell_money">$40.00</td>
                    </tr>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Tax</td>
                      <td>MA Tax (6.25%)</td>
                      <td class="billing_statement_listing_cell_money">$2.50</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>CC Payment</td>
                      <td>
                        <div>Amelia Example - Basic Plan: Renewal payment</div>
                        XXXX-XXXX-XXXX-1 bogus (01/2026)
                      </td>
                      <td class="billing_statement_listing_cell_money">
                        $42.50
                      </td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

                  </td>
                </tr>
                <tr>
                  <td id="billing_statement_period_activity" colspan="2">
                    <h2 class="billing_statement_section_title">Period Activity</h2>
                    <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription State Change</td>
                    <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription Product Change</td>
                    <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Billing Date Change</td>
                    <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Renewal Success</td>
                    <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Payment Success</td>
                    <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                </tbody>
              </table>
            </div>

                  </td>
                </tr>
                <tr>
                  <td  colspan="2">
                    <p>We thank you for your continued business!</p>
                  </td>
                </tr>
              </tbody>
            </table>
          closed_at: '2016-10-24T16:21:13-04:00'
          created_at: '2016-10-24T16:21:12-04:00'
          customer_billing_address: 123 Anywhere Street
          customer_billing_address_2: ''
          customer_billing_city: Anywhere
          customer_billing_country: US
          customer_billing_state: MA
          customer_billing_zip: '02120'
          customer_first_name: Amelia
          customer_last_name: Example
          customer_organization: ''
          customer_shipping_address: 123 Anywhere Street
          customer_shipping_address_2: ''
          customer_shipping_city: Anywhere
          customer_shipping_country: US
          customer_shipping_state: MA
          customer_shipping_zip: '02120'
          ending_balance_in_cents: 0
          future_payments: []
          html_view: |
            <div id="billing_statement">
              <div id="billing_statement_account_information_section" class="billing_statement_section">
                <h2 id="billing_statement_account_information_section_title" class="billing_statement_section_title">Account Information</h2>
                <div class="billing_statement_section_content vcard">
              <div id="billing_statement_customer_name" class="fn">Amelia Example</div>
              <div id="billing_statement_customer_email"><a class="email" href="mailto:amelia@example.com">amelia@example.com</a></div>
              <div id="billing_statement_customer_phone" class="tel"><span class="value">555-555-1212</span></div>

              <div id="billing_statement_shipping_address" class="adr">
                <h3 id="billing_statement_shipping_address_title" class="billing_statement_subsection_title">Shipping Address</h3>
                <div id="billing_statement_shipping_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_shipping_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_shipping_address_country_name" class="country-name">US</div>
              </div>

              <div id="billing_statement_billing_address" class="adr">
                <h3 id="billing_statement_billing_address_title" class="billing_statement_subsection_title">Billing Address</h3>
                <div id="billing_statement_billing_address_street_address" class="street-address">123 Anywhere Street</div>
                <div id="billing_statement_billing_address_locality_region_postal_code">
                  <span class="locality">Anywhere</span>,
                  <abbr class="region">MA</abbr>
                  <span class="postal-code">02120</span>
                </div>
                <div id="billing_statement_billing_address_country_name" class="country-name">US</div>
              </div>
              
            </div>

              </div>

              <div id="billing_statement_summary_section" class="billing_statement_section">
                <h2 id="billing_statement_summary_section_title" class="billing_statement_section_title"> Summary</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_summary_statement_date">
                <span class="billing_statement_summary_label"> Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:21:13Z">10/24/2016</abbr></span>
              </div>
              <div id="billing_statement_summary_usage_period">
                <span class="billing_statement_summary_label">Billing Date:</span>
                <span class="billing_statement_summary_value"><abbr title="2016-10-24T20:20:14Z">10/24/2016</abbr></span>
              </div>

              <div id="billing_statement_summary_balance_summary">
                <div id="billing_statement_summary_starting_balance">
                  <span class="billing_statement_summary_label">Starting Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
                <div id="billing_statement_summary_current_charges">
                  <span class="billing_statement_summary_label">Current Charges:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_current_payments_and_credits">
                  <span class="billing_statement_summary_label">Payments:</span>
                  <span class="billing_statement_summary_value">$42.50</span>
                </div>
                <div id="billing_statement_summary_balance_due">
                  <span class="billing_statement_summary_label">Ending Balance:</span>
                  <span class="billing_statement_summary_value">$0.00</span>
                </div>
              </div>

              <div id="billing_statement_summary_balance_paid">
                <div id="billing_statement_summary_balance_paid_date">
                  <span class="billing_statement_summary_label">Balance Paid:</span>
                  <span class="billing_statement_summary_value">10/24/2016 04:21PM EDT</span>
                </div>
                  <div id="billing_statement_summary_balance_paid_stamp" class="billing_statement_balance_paid_stamp_paid">
                    PAID
                  </div>
              </div>
            </div>

              </div>

              <div id="billing_statement_detail_section" class="billing_statement_section">
                <h2 id="billing_statement_detail_section_title" class="billing_statement_section_title"> Detail</h2>
                <div class="billing_statement_section_content">
              <div id="billing_statement_detail_current_charges_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_current_charges_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Current Charges and Adjustments</h3>
                <table id="billing_statement_detail_current_charges_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Charge</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Recurring</td>
                      <td>Basic Plan (10/24/2016 - 11/24/2016)</td>
                      <td class="billing_statement_listing_cell_money">$40.00</td>
                    </tr>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:12Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>Tax</td>
                      <td>MA Tax (6.25%)</td>
                      <td class="billing_statement_listing_cell_money">$2.50</td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <div id="billing_statement_detail_payments_credits_subsection" class="billing_statement_detail_subsection billing_statement_subsection">
                <h3 id="billing_statement_detail_payments_credits_title" class="billing_statement_detail_subsection_title billing_statement_subsection_title">Payments</h3>
                <table id="billing_statement_detail_payments_credits_listing" class="billing_statement_detail_listing billing_statement_listing">
                  <thead>
                    <tr>
                      <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                      <th class="billing_statement_listing_cell_type">Type</th>
                      <th class="billing_statement_listing_cell_detail">Detail</th>
                      <th class="billing_statement_listing_cell_money">Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><abbr title="2016-10-24T20:21:13Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                      <td>CC Payment</td>
                      <td>
                        <div>Amelia Example - Basic Plan: Renewal payment</div>
                        XXXX-XXXX-XXXX-1 bogus (01/2026)
                      </td>
                      <td class="billing_statement_listing_cell_money">
                        $42.50
                      </td>
                    </tr>
                    <tr class="billing_statement_listing_tfoot">
                      <td colspan="3" class="billing_statement_listing_cell_totals_label">Totals</td>
                      <td class="billing_statement_listing_cell_money">$42.50</td>
                    </tr>
                  </tbody>
                </table>
              </div>


            </div>

              </div>

              <div id="billing_statement_period_activity_section" class="billing_statement_section">
                <h2 id="billing_statement_period_activity_section_title" class="billing_statement_section_title">Period Activity</h2>
                <div class="billing_statement_section_content">
              <table id="billing_statement_period_activity_listing" class="billing_statement_period_activity_listing billing_statement_listing">
                <thead>
                  <tr>
                    <th class="billing_statement_listing_cell_datetime">Date/Time</th>
                    <th class="billing_statement_listing_cell_event">Event</th>
                    <th class="billing_statement_listing_cell_detail">Detail</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription State Change</td>
                    <td>State changed on Amelia Example&#39;s subscription to Basic Plan from trialing to active</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:20:43Z">10/24/2016 <span class='time_and_zone'>04:20PM EDT</span></abbr></td>
                    <td>Subscription Product Change</td>
                    <td>Product changed on Amelia Example&#39;s subscription from &#39;Trial Product&#39; to &#39;Basic Plan&#39;</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:11Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Billing Date Change</td>
                    <td>Billing date changed on Amelia Example&#39;s subscription to Basic Plan from 10/31/2016 to 10/24/2016</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Renewal Success</td>
                    <td>Successful renewal for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                  <tr>
                    <td><abbr title="2016-10-24T20:21:14Z">10/24/2016 <span class='time_and_zone'>04:21PM EDT</span></abbr></td>
                    <td>Payment Success</td>
                    <td>Successful payment of $42.50 for Amelia Example&#39;s subscription to Basic Plan</td>
                  </tr>
                </tbody>
              </table>
            </div>

              </div>
              <div>
                <p>We thank you for your continued business!</p>
              </div>
            </div>
          memo: We thank you for your continued business!
          opened_at: '2016-10-24T16:20:14-04:00'
          settled_at: '2016-10-24T16:21:13-04:00'
          starting_balance_in_cents: 0
          subscription_id: 14900541
          text_view: |
            My Awesome Company                                                    (79221381)
            billing@example.com                                   Acme Projects - Basic Plan
            ================================================================================

            --------
             Summary
            --------

             ID......: 79221381
             Date....: 10/24/2016
            Billing Date......: 10/24/2016

            Starting Balance..:  $0.00
            Current Charges...: $42.50
            Payments..........: $42.50
            Ending Balance....:  $0.00

            Balance Paid......: 10/24/2016 04:21PM EDT

            -------------------
            Account Information
            -------------------

            Amelia Example
            amelia@example.com
            555-555-1212

            ### Shipping Address
            123 Anywhere Street
            Anywhere, MA 02120
            US

            ### Billing Address
            123 Anywhere Street
            Anywhere, MA 02120
            US


            -------
             Detail
            -------

            ### Current Charges and Adjustments

            Date/Time     Type   Detail                                              Charges
            ............  .....  ...............................................  ..........
            10/24/2016
            04:21PM EDT   Recur  Basic Plan (10/24/2016 - 11/24/2016)                 $40.00
            ............  .....  ...............................................  ..........
            10/24/2016
            04:21PM EDT   Tax    MA Tax (6.25%)                                        $2.50
            ............  .....  ...............................................  ..........
                                                                         Totals:      $42.50

            ### Payments

            Date/Time     Type   Detail                                               Amount
            ............  .....  ...............................................  ..........
            10/24/2016             XXXX-XXXX-XXXX-1 bogus (01/2026)               
            04:21PM EDT   CCPay  Amelia Example - Basic Plan: Renewal payment         $42.50
            ............  .....  ...............................................  ..........
                                                                         Totals:      $42.50


            ---------------
            Period Activity
            ---------------

            Date/Time     Event/Details                                                     
            ............  ..................................................................
            10/24/2016    Subscription State Change                                         
            04:20PM EDT   State changed on Amelia Example's subscription to Basic Plan from 
                          trialing to active                                                
            ............  ..................................................................
            10/24/2016    Subscription Product Change                                       
            04:20PM EDT   Product changed on Amelia Example's subscription from 'Trial Produ
                          ct' to 'Basic Plan'                                               
            ............  ..................................................................
            10/24/2016    Billing Date Change                                               
            04:21PM EDT   Billing date changed on Amelia Example's subscription to Basic Pla
                          n from 10/31/2016 to 10/24/2016                                   
            ............  ..................................................................
            10/24/2016    Renewal Success                                                   
            04:21PM EDT   Successful renewal for Amelia Example's subscription to Basic Plan
            ............  ..................................................................
            10/24/2016    Payment Success                                                   
            04:21PM EDT   Successful payment of $42.50 for Amelia Example's subscription to 
                          Basic Plan                                                        
            ............  ..................................................................

            We thank you for your continued business!
          updated_at: '2016-10-24T16:21:13-04:00'
          total_in_cents: 4250
          transactions:
            - id: 159424439
              subscription_id: 14900541
              type: Charge
              kind: baseline
              transaction_type: charge
              success: true
              amount_in_cents: 4000
              memo: Basic Plan (10/24/2016 - 11/24/2016)
              created_at: '2016-10-24T16:21:12-04:00'
              starting_balance_in_cents: 0
              ending_balance_in_cents: 4000
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: 159424449
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: 4000
              taxations:
                - tax_id: null
                  tax_charge_id: 159424444
                  tax_name: MA Tax
                  rate: '0.0625'
                  tax_amount_in_cents: 250
                  tax_rules:
                    - tax_rule_id: null
                      country_code: US
                      subdivision_code: MA
                      rate: '0.0625'
                      tax_amount_in_cents: 250
                      description: MA STATE TAX - MASSACHUSETTS
            - id: 159424444
              subscription_id: 14900541
              type: Charge
              kind: tax
              transaction_type: charge
              success: true
              amount_in_cents: 250
              memo: MA Tax (6.25%)
              created_at: '2016-10-24T16:21:12-04:00'
              starting_balance_in_cents: 4000
              ending_balance_in_cents: 4250
              gateway_used: null
              gateway_transaction_id: null
              gateway_order_id: null
              payment_id: 159424449
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              original_amount_in_cents: null
              discount_amount_in_cents: null
              taxable_amount_in_cents: null
              taxations: []
            - id: 159424449
              subscription_id: 14900541
              type: Payment
              kind: null
              transaction_type: payment
              success: true
              amount_in_cents: 4250
              memo: 'Amelia Example - Basic Plan: Renewal payment'
              created_at: '2016-10-24T16:21:13-04:00'
              starting_balance_in_cents: 4250
              ending_balance_in_cents: 0
              gateway_used: bogus
              gateway_transaction_id: '53433'
              gateway_order_id: null
              payment_id: null
              product_id: 3792003
              tax_id: null
              component_id: null
              statement_id: 79221381
              customer_id: 14399371
              card_number: XXXX-XXXX-XXXX-1
              card_expiration: 01/2026
              card_type: bogus
              refunded_amount_in_cents: 0
          events:
            - event:
                id: 342036536
                key: subscription_state_change
                message: State changed on Amelia Example's subscription to Basic Plan from trialing to active
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:43-04:00'
                event_specific_data:
                  previous_subscription_state: trialing
                  new_subscription_state: active
            - event:
                id: 342036540
                key: subscription_product_change
                message: Product changed on Amelia Example's subscription from 'Trial Product' to 'Basic Plan'
                subscription_id: 14900541
                created_at: '2016-10-24T16:20:43-04:00'
                event_specific_data:
                  previous_product_id: 3861800
                  new_product_id: 3792003
            - event:
                id: 342037380
                key: billing_date_change
                message: Billing date changed on Amelia Example's subscription to Basic Plan from 10/31/2016 to 10/24/2016
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:11-04:00'
                event_specific_data: null
            - event:
                id: 342037470
                key: renewal_success
                message: Successful renewal for Amelia Example's subscription to Basic Plan
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:14-04:00'
                event_specific_data:
                  product_id: 3792003
                  account_transaction_id: 159424449
            - event:
                id: 342037482
                key: payment_success
                message: Successful payment of $42.50 for Amelia Example's subscription to Basic Plan
                subscription_id: 14900541
                created_at: '2016-10-24T16:21:14-04:00'
                event_specific_data:
                  product_id: 3792003
                  account_transaction_id: 159424449
    x-stoplight:
      id: statements/list-statements-for-a-site
      name: Read Statements for a Site
      public: true
  reason_code/show_response:
    title: ReasonCode Show Response
    type: object
    properties:
      reason_code:
        type: object
        properties:
          id:
            type: integer
          site_id:
            type: integer
          code:
            type: string
          description:
            type: string
          position:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
    example:
      reason_code:
        id: 1
        site_id: 2
        code: CHEAP
        description: This is muuy caro
        position: 2
        created_at: '2017-02-16T16:48:45-05:00'
        updated_at: '2017-02-17T16:29:59-05:00'
    x-stoplight:
      id: reason_code/show_response
      name: ReasonCode Show Response
      public: true
  reason_code/list_response:
    title: Read Reason Codes for a Site Response
    type: array
    items:
      type: object
      properties:
        reason_code:
          type: object
          properties:
            id:
              type: integer
            site_id:
              type: integer
            code:
              type: string
            description:
              type: string
            position:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    example:
      - reason_code:
          id: 2
          site_id: 2
          code: LARGE
          description: This is too complicated
          position: 1
          created_at: '2017-02-16T16:49:07-05:00'
          updated_at: '2017-02-17T16:29:51-05:00'
      - reason_code:
          id: 1
          site_id: 2
          code: CH1
          description: This doesnt meet my needs
          position: 2
          created_at: '2017-02-16T16:48:45-05:00'
          updated_at: '2017-02-17T16:29:59-05:00'
      - reason_code:
          id: 5
          site_id: 2
          code: HAN99
          description: Hard to setup
          position: 3
          created_at: '2017-02-17T16:29:42-05:00'
          updated_at: '2017-02-17T16:29:59-05:00'
    x-stoplight:
      id: reason_code/list_response
      name: Read Reason Codes for a Site Response
      public: true
  reason_codes/delete_response:
    title: Delete a Reason Code Response
    type: object
    properties:
      ok:
        type: string
    example:
      ok: ok
    x-stoplight:
      id: reason_codes/delete_response
      name: Delete a Reason Code Response
      public: true
  reason_codes/create_code_response:
    title: ReasonCode Create Response
    type: object
    properties:
      reason_code:
        type: object
        properties:
          id:
            type: integer
          site_id:
            type: integer
          code:
            type: string
          description:
            type:
              - 'null'
              - string
          position:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
    example:
      reason_code:
        id: 6
        site_id: 2
        code: NOTHANKYOU
        description: null
        position: 6
        created_at: '2017-02-21T16:20:00-05:00'
        updated_at: '2017-02-21T16:20:00-05:00'
    x-stoplight:
      id: reason_codes/create_code_response
      name: ReasonCode Create Response
      public: true
  reason_code/update_response:
    title: ReasonCode Update Response
    type: object
    properties:
      reason_code:
        type: object
        properties:
          id:
            type: integer
          site_id:
            type: integer
          code:
            type: string
          description:
            type: string
          position:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
    example:
      reason_code:
        id: 1
        site_id: 2
        code: '00023'
        description: Not using the product currently
        position: 2
        created_at: '2017-02-16T16:48:45-05:00'
        updated_at: '2017-02-21T16:33:10-05:00'
    x-stoplight:
      id: reason_code/update_response
      name: ReasonCode Update Response
      public: true
  /reason_codes/create_code_request:
    title: ReasonCode Create Request
    type: object
    properties:
      reason_code:
        type: object
        properties:
          code:
            type: string
          description:
            type: string
          position:
            type: integer
    example:
      reason_code:
        code: NOTHANKYOU
        description: No thank you!
        position: 5
    x-stoplight:
      id: /reason_codes/create_code_request
      name: ReasonCode Create Request
      public: true
  subscriptions/hold-subscription-request:
    title: Hold (Pause) Subscription Request
    type: object
    properties:
      hold:
        type: object
        properties:
          automatically_resume_at:
            type: string
            format: date-time
    example:
      hold:
        automatically_resume: true
        automatically_resume_at: '2017-05-25T11:25:00Z'
    x-stoplight:
      id: subscriptions/hold-subscription-request
      name: Hold (Pause) Subscription Request
      public: true
  payments/update-payment-profile:
    title: Update Payment Profile
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          full_number:
            type: string
          card_type:
            type: string
          expiration_month:
            type: string
          expiration_year:
            type: string
          current_vault:
            type: string
          vault_token:
            type: string
          billing_address:
            type: string
          billing_city:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          billing_country:
            type: string
          billing_address_2:
            type: 'null'
    example:
      payment_profile:
        first_name: Graham
        last_name: Test
        full_number: '4111111111111111'
        card_type: master
        expiration_month: '04'
        expiration_year: '2030'
        current_vault: bogus
        vault_token: '1'
        billing_address: 456 Juniper Court
        billing_city: Boulder
        billing_state: CO
        billing_zip: '80302'
        billing_country: US
        billing_address_2: null
    x-stoplight:
      id: payments/update-payment-profile
      name: Update Payment Profile
      public: true
  components/create-component-with-price-points-request:
    title: Create Component with Price Points Request
    type: object
    properties:
      quantity_based_component:
        type: object
        required:
          - name
          - description
          - unit_name
          - pricing_scheme
          - default_price_point_name
          - default_price_point_handle
          - prices
          - price_points
        properties:
          name:
            type: string
          description:
            type: string
          unit_name:
            type: string
          pricing_scheme:
            type: string
          default_price_point_name:
            type: string
          default_price_point_handle:
            type: string
          prices:
            type: array
            items:
              type: object
              properties:
                starting_quantity:
                  type: string
                ending_quantity:
                  type: string
                unit_price:
                  type: string
          price_points:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                handle:
                  type: string
                pricing_scheme:
                  type: string
                prices:
                  type: array
                  items:
                    type: object
                    properties:
                      starting_quantity:
                        type: string
                      ending_quantity:
                        type: string
                      unit_price:
                        type:
                          - string
                          - number
                    required:
                      - starting_quantity
                      - ending_quantity
                      - unit_price
              required:
                - name
                - handle
                - pricing_scheme
                - prices
          public_signup_page_ids:
            type: array
            items:
              type: string
    required:
      - quantity_based_component
    example:
      quantity_based_component:
        name: Widget
        description: widget
        unit_name: widget
        pricing_scheme: volume
        default_price_point_name: Initial
        default_price_point_handle: initial-handle
        prices:
          - starting_quantity: '1'
            ending_quantity: '100'
            unit_price: '5.00'
          - starting_quantity: '101'
            unit_price: '4.00'
        price_points:
          - name: Wholesale
            handle: wholesale-handle
            pricing_scheme: tiered
            prices:
              - starting_quantity: '1'
                ending_quantity: '2'
                unit_price: '1'
        public_signup_page_ids:
          - '1'
    x-stoplight:
      id: components/create-component-with-price-points-request
      name: Create Component with Price Points Request
      public: true
  components/price-points/create-price-point-request:
    title: Create Price Point Request
    type: object
    properties:
      price_point:
        type: object
        required:
          - name
          - pricing_scheme
          - prices
        properties:
          name:
            type: string
          handle:
            type: string
          pricing_scheme:
            type: string
          prices:
            type: array
            items:
              type: object
              properties:
                starting_quantity:
                  type: integer
                ending_quantity:
                  type: integer
                unit_price:
                  type: integer
    required:
      - price_point
    example:
      price_point:
        name: Wholesale
        handle: wholesale-handle
        pricing_scheme: stairstep
        prices:
          - starting_quantity: 1
            ending_quantity: 100
            unit_price: 5
          - starting_quantity: 101
            unit_price: 4
    x-stoplight:
      id: components/price-points/create-price-point-request
      name: Create Price Point Request
      public: true
  components/price-points/create-price-point-response:
    title: Create Price Point Response
    type: object
    properties:
      price_point:
        type: object
        properties:
          id:
            type: integer
          default:
            type: boolean
          name:
            type: string
          pricing_scheme:
            type: string
          component_id:
            type: integer
          handle:
            type: string
          archived_at:
            type: 'null'
          created_at:
            type: string
          updated_at:
            type: string
          prices:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                component_id:
                  type: integer
                starting_quantity:
                  type: integer
                ending_quantity:
                  type:
                    - integer
                    - 'null'
                unit_price:
                  type: string
    example:
      price_point:
        id: 79
        default: false
        name: Wholesale
        pricing_scheme: stairstep
        component_id: 74
        handle: wholesale-handle
        archived_at: null
        created_at: '2017-07-05T13:44:30-04:00'
        updated_at: '2017-07-05T13:44:30-04:00'
        prices:
          - id: 119
            component_id: 74
            starting_quantity: 1
            ending_quantity: 100
            unit_price: '5.0'
          - id: 120
            component_id: 74
            starting_quantity: 101
            ending_quantity: null
            unit_price: '4.0'
    x-stoplight:
      id: components/price-points/create-price-point-response
      name: Create Price Point Response
      public: true
  components/price-points/bulk-create-price-points-request:
    title: Bulk Create Price Points Request
    type: object
    properties:
      price_points:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            handle:
              type: string
            pricing_scheme:
              type: string
            prices:
              type: array
              items:
                type: object
                properties:
                  starting_quantity:
                    type: integer
                  unit_price:
                    type: integer
                  ending_quantity:
                    type: integer
          required:
            - name
            - pricing_scheme
            - prices
    required:
      - price_points
    example:
      price_points:
        - name: Wholesale
          handle: wholesale
          pricing_scheme: per_unit
          prices:
            - starting_quantity: 1
              unit_price: 5
        - name: MSRP
          handle: msrp
          pricing_scheme: per_unit
          prices:
            - starting_quantity: 1
              ending_quantity: 100
              unit_price: 4
            - starting_quantity: 101
              unit_price: 4
    x-stoplight:
      id: components/price-points/bulk-create-price-points-request
      name: Bulk Create Price Points Request
      public: true
  components/price-points/list-price-points-response:
    title: List Price Points Response
    type: object
    properties:
      price_points:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            default:
              type: boolean
            name:
              type: string
            pricing_scheme:
              type: string
            component_id:
              type: integer
            handle:
              type: string
            archived_at:
              type: 'null'
            created_at:
              type: string
            updated_at:
              type: string
            prices:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  component_id:
                    type: integer
                  starting_quantity:
                    type: integer
                  ending_quantity:
                    type: 'null'
                  unit_price:
                    type: string
    example:
      price_points:
        - id: 80
          default: false
          name: Wholesale Two
          pricing_scheme: per_unit
          component_id: 74
          handle: wholesale-two
          archived_at: null
          created_at: '2017-07-05T13:55:40-04:00'
          updated_at: '2017-07-05T13:55:40-04:00'
          prices:
            - id: 121
              component_id: 74
              starting_quantity: 1
              ending_quantity: null
              unit_price: '5.0'
        - id: 81
          default: false
          name: MSRP
          pricing_scheme: per_unit
          component_id: 74
          handle: msrp
          archived_at: null
          created_at: '2017-07-05T13:55:40-04:00'
          updated_at: '2017-07-05T13:55:40-04:00'
          prices:
            - id: 122
              component_id: 74
              starting_quantity: 1
              ending_quantity: null
              unit_price: '4.0'
    x-stoplight:
      id: components/price-points/list-price-points-response
      name: List Price Points Response
      public: true
  components/price-points/update-price-point-request:
    title: Update Price Point Request
    type: object
    properties:
      price_point:
        type: object
        properties:
          name:
            type: string
          prices:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                ending_quantity:
                  type: integer
                unit_price:
                  type: integer
                _destroy:
                  type: string
                starting_quantity:
                  type: integer
    example:
      price_point:
        name: Default
        prices:
          - id: 1
            ending_quantity: 100
            unit_price: 5
          - id: 2
            _destroy: 'true'
          - starting_quantity: 101
            unit_price: 4
    x-stoplight:
      id: components/price-points/update-price-point-request
      name: Update Price Point Request
      public: true
  components/onoff/create-subscription-with-onoff-component:
    title: Create Subscription with On/Off Component Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
          components:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                enabled:
                  type: boolean
    example:
      subscription:
        product_handle: one-hundred-dollar-product
        customer_attributes:
          first_name: Joe
          last_name: Blow
          email: joe@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
        components:
          - component_id: 399853
            enabled: true
            price_point_id: 123456
    x-stoplight:
      id: components/onoff/create-subscription-with-onoff-component
      name: Create Subscription with On/Off Component Request
      public: true
  components/onoff/toggling-on-off-request:
    title: Create Allocation for On/Off Component Request
    type: object
    properties:
      allocation:
        type: object
        properties:
          component_id:
            type: integer
          quantity:
            type: integer
          price_point_id:
            type: integer
    example:
      allocation:
        component_id: 399850
        quantity: 0
        price_point_id: 130350
    x-stoplight:
      id: components/onoff/toggling-on-off-request
      name: Create Allocation for On/Off Component Request
      public: true
  components/onoff/toggling-on-off-response:
    title: Create Allocation for On/Off Component Response
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            component_id:
              type: integer
            subscription_id:
              type: integer
            quantity:
              type: integer
            previous_quantity:
              type: integer
            memo:
              type: 'null'
            timestamp:
              type: string
            proration_upgrade_scheme:
              type: string
            proration_downgrade_scheme:
              type: string
            price_point_id:
              type: integer
            previous_price_point_id:
              type: integer
            payment:
              type: 'null'
    example:
      - allocation:
          component_id: 399853
          subscription_id: 18342261
          quantity: 0
          previous_quantity: 1
          memo: null
          timestamp: '2017-07-10T21:00:38Z'
          proration_upgrade_scheme: no-prorate
          proration_downgrade_scheme: no-prorate
          price_point_id: 121003
          previous_price_point_id: 121003
          payment: null
    x-stoplight:
      id: components/onoff/toggling-on-off-response
      name: Create Allocation for On/Off Component Response
      public: true
  components/ononff/reading-the-current-status-response:
    title: Reading the current status response
    type: object
    properties:
      component:
        type: object
        properties:
          component_id:
            type: integer
          subscription_id:
            type: integer
          enabled:
            type: boolean
          allocated_quantity:
            type: integer
          name:
            type: string
          kind:
            type: string
          unit_name:
            type: string
          price_point_id:
            type: integer
    example:
      component:
        component_id: 399853
        subscription_id: 18342261
        enabled: false
        allocated_quantity: 0
        name: Annual Support Services
        kind: on_off_component
        unit_name: on/off
        price_point_id: 121003
    x-stoplight:
      id: components/ononff/reading-the-current-status-response
      name: Reading the current status response
      public: true
  invoice/list-charges-response:
    title: Read Charges Response
    type: object
    properties:
      invoice:
        type: object
        properties:
          id:
            type: integer
          subscription_id:
            type: integer
          statement_id:
            type: integer
          site_id:
            type: integer
          state:
            type: string
          total_amount_in_cents:
            type: integer
          paid_at:
            type: 'null'
          created_at:
            type: string
          updated_at:
            type: string
          amount_due_in_cents:
            type: integer
          number:
            type: string
          charges:
            type: array
            items:
              type: object
              properties:
                created_at:
                  type: string
                subscription_id:
                  type: integer
                type:
                  type: string
                memo:
                  type: string
                kind:
                  type: string
                amount_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: integer
                success:
                  type: boolean
                id:
                  type: integer
                payment_id:
                  type: 'null'
                product_id:
                  type: integer
                transaction_type:
                  type: string
                gateway_transaction_id:
                  type: 'null'
                gateway_order_id:
                  type: 'null'
                starting_balance_in_cents:
                  type: integer
                component_id:
                  type: 'null'
                tax_id:
                  type: 'null'
                customer_id:
                  type: integer
          line_items:
            type: array
            items:
              type: object
              properties:
                created_at:
                  type: string
                subscription_id:
                  type: integer
                type:
                  type: string
                memo:
                  type: string
                kind:
                  type:
                    - 'null'
                    - string
                amount_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: integer
                success:
                  type: boolean
                id:
                  type: integer
                payment_id:
                  type: 'null'
                product_id:
                  type: integer
                transaction_type:
                  type: string
                gateway_transaction_id:
                  type: 'null'
                gateway_order_id:
                  type: 'null'
                starting_balance_in_cents:
                  type: integer
                component_id:
                  type: 'null'
                tax_id:
                  type: 'null'
                customer_id:
                  type: integer
          payments_and_credits:
            type: array
            items:
              type: object
              properties:
                created_at:
                  type: string
                subscription_id:
                  type: integer
                type:
                  type: string
                memo:
                  type: string
                kind:
                  type: string
                amount_in_cents:
                  type: integer
                ending_balance_in_cents:
                  type: 'null'
                success:
                  type: boolean
                id:
                  type: integer
                payment_id:
                  type: 'null'
                product_id:
                  type: 'null'
                transaction_type:
                  type: string
                gateway_transaction_id:
                  type: 'null'
                gateway_order_id:
                  type: 'null'
                starting_balance_in_cents:
                  type: 'null'
                component_id:
                  type: 'null'
                tax_id:
                  type: 'null'
                customer_id:
                  type: integer
    example:
      invoice:
        id: 1532074
        subscription_id: 17518841
        statement_id: 94596778
        site_id: 36547
        state: partial
        total_amount_in_cents: 5655
        paid_at: null
        created_at: '2017-07-10T11:10:15-04:00'
        updated_at: '2017-07-10T11:10:50-04:00'
        amount_due_in_cents: 155
        number: 000399
        charges:
          - created_at: '2017-07-10T11:10:13-04:00'
            subscription_id: 17518841
            type: Charge
            memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
            kind: baseline
            amount_in_cents: 7107
            ending_balance_in_cents: 1607
            success: true
            id: 193822851
            payment_id: null
            product_id: 4465911
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: -5500
            component_id: null
            tax_id: null
            customer_id: 17034509
          - created_at: '2017-07-10T11:10:14-04:00'
            subscription_id: 17518841
            type: Charge
            memo: TX Tax (8.25%)
            kind: tax
            amount_in_cents: 469
            ending_balance_in_cents: 655
            success: true
            id: 193822853
            payment_id: null
            product_id: 4465911
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 186
            component_id: null
            tax_id: null
            customer_id: 17034509
        line_items:
          - created_at: '2017-07-10T11:10:13-04:00'
            subscription_id: 17518841
            type: Charge
            memo: costs (10 Jul 2017 - 1 Aug 2017) (Prorated)
            kind: baseline
            amount_in_cents: 7107
            ending_balance_in_cents: 1607
            success: true
            id: 193822851
            payment_id: null
            product_id: 4465911
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: -5500
            component_id: null
            tax_id: null
            customer_id: 17034509
          - created_at: '2017-07-10T11:10:14-04:00'
            subscription_id: 17518841
            type: Adjustment
            memo: 'Coupon: PERCENTS - percents'
            kind: coupon
            amount_in_cents: -1421
            ending_balance_in_cents: 186
            success: true
            id: 193822852
            payment_id: null
            product_id: 4465911
            transaction_type: adjustment
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 1607
            component_id: null
            tax_id: null
            customer_id: 17034509
          - created_at: '2017-07-10T11:10:14-04:00'
            subscription_id: 17518841
            type: Charge
            memo: TX Tax (8.25%)
            kind: tax
            amount_in_cents: 469
            ending_balance_in_cents: 655
            success: true
            id: 193822853
            payment_id: null
            product_id: 4465911
            transaction_type: charge
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 186
            component_id: null
            tax_id: null
            customer_id: 17034509
          - created_at: '2017-07-10T11:10:50-04:00'
            subscription_id: 17518841
            type: Adjustment
            memo: this is a credit
            kind: null
            amount_in_cents: -500
            ending_balance_in_cents: 155
            success: true
            id: 193822901
            payment_id: null
            product_id: 4465911
            transaction_type: adjustment
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: 655
            component_id: null
            tax_id: null
            customer_id: 17034509
        payments_and_credits:
          - created_at: '2017-07-10T11:10:15-04:00'
            subscription_id: 17518841
            type: InfoTransaction
            memo: Previous balance applied
            kind: previous_balance_applied
            amount_in_cents: -5500
            ending_balance_in_cents: null
            success: true
            id: 193822855
            payment_id: null
            product_id: null
            transaction_type: info
            gateway_transaction_id: null
            gateway_order_id: null
            starting_balance_in_cents: null
            component_id: null
            tax_id: null
            customer_id: 17034509
    x-stoplight:
      id: invoice/list-charges-response
      name: Read Charges Response
      public: true
  components/quantity/update-the-quantity-allocation:
    title: Update the quantity allocation response
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            component_id:
              type: integer
            subscription_id:
              type: integer
            quantity:
              type: integer
            previous_quantity:
              type: integer
            memo:
              type: string
            timestamp:
              type: string
            proration_upgrade_scheme:
              type: string
            proration_downgrade_scheme:
              type: string
            price_point_id:
              type: integer
            previous_price_point_id:
              type: integer
            payment:
              type: 'null'
    example:
      - allocation:
          component_id: 399850
          subscription_id: 18342261
          quantity: 29
          previous_quantity: 0
          memo: Text messages usage May 2020
          timestamp: '2017-07-12T20:01:36Z'
          proration_upgrade_scheme: no-prorate
          proration_downgrade_scheme: no-prorate
          price_point_id: 130350
          previous_price_point_id: 130350
          payment: null
    x-stoplight:
      id: components/quantity/update-the-quantity-allocation
      name: Update the quantity allocation response
      public: true
  components/price-points/bulk-update-a-subscription-s-component-s-price-points:
    title: Bulk Update a Subscription's Component's Price Points
    type: object
    properties:
      components:
        type: array
        items:
          type: object
          properties:
            component_id:
              type: integer
            price_point:
              type:
                - integer
                - string
    example:
      components:
        - component_id: 997
          price_point: 1022
        - component_id: 998
          price_point: wholesale-handle
        - component_id: 999
          price_point: _default
    x-stoplight:
      id: components/price-points/bulk-update-a-subscription-s-component-s-price-points
      name: Bulk Update a Subscription's Component's Price Points
      public: true
  components/price-points/bulk-reset-a-subscription-s-component-s-price-points:
    title: Bulk Reset a Subscription's Component's Price Points
    $ref: '#/definitions/subscription/read-subscription'
    example:
      subscription:
        id: -70678768
        state: non
        trial_started_at: null
        trial_ended_at: null
        activated_at: ex adipisicing dolore
        created_at: fugiat pariatur
        updated_at: proident aliqua
        expires_at: null
        balance_in_cents: 57088831
        current_period_ends_at: nostrud Duis
        next_assessment_at: officia in
        canceled_at: aliqua culpa
        cancellation_message: null
        next_product_id: -42919579
        cancel_at_end_of_period: false
        payment_collection_method: nostrud ex ullamco offici
        snap_day: null
        cancellation_method: null
        current_period_started_at: elit
        previous_state: sunt anim nostrud adipisicing Lorem
        signup_payment_id: -99401772
        signup_revenue: anim in nulla aliqua
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: -71744706
        product_price_in_cents: -35608324
        product_version_number: -66245013
        payment_type: eiusmod proident ea velit
        referral_code: Duis ex
        coupon_use_count: null
        coupon_uses_allowed: null
        reason_code: adipisicing eiusmod laboris
        automatically_resume_at: null
        current_billing_amount_in_cents: 25153479
        customer:
          id: 54798682
          first_name: magna consectetur
          last_name: eu in
          organization: elit Lorem eiusmod in
          email: quis pariatur
          created_at: adipisicing
          updated_at: irure
          reference: null
          address: proident incididunt dolore mollit
          address_2: null
          city: cillum
          state: null
          zip: null
          country: sit ipsum consequat reprehenderit
          phone: null
          portal_invite_last_sent_at: laboris id do velit
          portal_invite_last_accepted_at: null
          verified: null
          portal_customer_created_at: qui reprehenderit
          cc_emails: quis id nostrud cupidatat
          tax_exempt: true
        product:
          id: 22472781
          name: in nisi aliqua
          handle: dolor
          description: eiusmod enim
          accounting_code: cupidatat consectetur Ut eiusmod
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: sit
          created_at: sunt adipisicing ex vel
          updated_at: cupidatat ipsum Lorem dolor id
          price_in_cents: 37028840
          interval: -83120871
          interval_unit: magna irure incididunt
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: eiusmod ullamco ipsum voluptate
          archived_at: null
          require_credit_card: false
          return_params: laboris veniam adipisicing aute
          taxable: true
          update_return_url: commodo dolor sit
          tax_code: dolor exercitation mollit
          initial_charge_after_trial: true
          version_number: -59532114
          update_return_params: labore commodo
          product_family:
            id: 46591404
            name: e
            description: exercitation pariatur Lorem fugiat
            handle: Ut cillum reprehenderit
            accounting_code: null
          public_signup_pages:
            - {}
            - return_params: null
              return_url: null
            - {}
    x-stoplight:
      id: components/price-points/bulk-reset-a-subscription-s-component-s-price-points
      name: Bulk Reset a Subscription's Component's Price Points
      public: true
  /customfields/metadata/list-metadata-for-a-customer-output:
    title: Read Metadata Data for a Customer Output
    type: object
    properties:
      total_count:
        type: integer
      current_page:
        type: integer
      total_pages:
        type: integer
      per_page:
        type: integer
      metadata:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            resource_id:
              type: integer
            name:
              type: string
    example:
      total_count: 1
      current_page: 1
      total_pages: 1
      per_page: 20
      metadata:
        - value: Red
          resource_id: 19186044
          name: Shirt Color
    x-stoplight:
      id: /customfields/metadata/list-metadata-for-a-customer-output
      name: Read Metadata Data for a Customer Output
      public: true
  coupon/add-the-coupon-newness:
    title: Add the Coupon to Subscription Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: boolean
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: string
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: 'null'
          coupon_use_count:
            type: integer
          coupon_uses_allowed:
            type: integer
          reason_code:
            type: 'null'
          automatically_resume_at:
            type: 'null'
          coupon_codes:
            type: array
            items:
              type: string
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: string
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: string
              address_2:
                type: string
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              country:
                type: string
              phone:
                type: string
              portal_invite_last_sent_at:
                type: 'null'
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: 'null'
              cc_emails:
                type: 'null'
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: 'null'
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: 'null'
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: 'null'
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: 'null'
              taxable:
                type: boolean
              update_return_url:
                type: 'null'
              tax_code:
                type: 'null'
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: 'null'
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: 'null'
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: string
              billing_city:
                type: string
              billing_state:
                type: string
              billing_zip:
                type: string
              billing_country:
                type: string
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: string
              payment_type:
                type: string
    example:
      subscription:
        id: 50
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2017-11-01T04:17:47-04:00'
        created_at: '2017-11-01T04:17:46-04:00'
        updated_at: '2017-11-08T09:17:44-05:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2017-12-01T03:17:46-05:00'
        next_assessment_at: '2017-12-01T03:17:46-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2017-11-01T04:17:46-04:00'
        previous_state: active
        signup_payment_id: 109
        signup_revenue: '10.00'
        delayed_cancel_at: null
        coupon_code: ABC123
        total_revenue_in_cents: 1000
        product_price_in_cents: 1000
        product_version_number: 1
        payment_type: credit_card
        referral_code: null
        coupon_use_count: 0
        coupon_uses_allowed: 1
        reason_code: null
        automatically_resume_at: null
        coupon_codes:
          - ABC123
        customer:
          id: 50
          first_name: Fred
          last_name: Jones
          organization: ''
          email: fred@jones.com
          created_at: '2017-11-01T04:17:46-04:00'
          updated_at: '2017-11-01T04:17:46-04:00'
          reference: null
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          portal_invite_last_sent_at: null
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: null
          cc_emails: null
          tax_exempt: false
        product:
          id: 97
          name: User-friendly systemic matrices
          handle: handle_1d382acd0
          description: Fugiat quis mollitia.  Ex et sunt sed qui.  Facilis qui et sequi laudantium quos autem eos.
          accounting_code: null
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: null
          created_at: '2017-09-13T12:45:35-04:00'
          updated_at: '2017-09-13T12:45:35-04:00'
          price_in_cents: 1000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: null
          archived_at: null
          require_credit_card: true
          return_params: null
          taxable: false
          update_return_url: null
          tax_code: null
          initial_charge_after_trial: false
          version_number: 1
          update_return_params: null
          product_family:
            id: 4
            name: Acme Online
            description: null
            handle: acme-online
            accounting_code: null
          public_signup_pages: []
        credit_card:
          id: 36
          first_name: Fred
          last_name: Jones
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 1
          expiration_year: 2025
          customer_id: 50
          current_vault: bogus
          vault_token: '1'
          billing_address: ''
          billing_city: ''
          billing_state: AL
          billing_zip: ''
          billing_country: US
          customer_vault_token: null
          billing_address_2: ''
          payment_type: credit_card
    x-stoplight:
      id: coupon/add-the-coupon-newness
      name: Add the Coupon to Subscription Output
      public: true
  create-subscription-with-multiple-coupon-output:
    title: Create Subscription with Multiple Coupon Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: 'null'
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: string
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type:
              - 'null'
              - string
          coupon_use_count:
            type: integer
          coupon_uses_allowed:
            type: integer
          reason_code:
            type: 'null'
          automatically_resume_at:
            type: 'null'
          coupon_codes:
            type: array
            items:
              type: string
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: 'null'
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: 'null'
              address_2:
                type: 'null'
              city:
                type: 'null'
              state:
                type: 'null'
              zip:
                type: 'null'
              country:
                type: 'null'
              phone:
                type: 'null'
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: string
              cc_emails:
                type: 'null'
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              tax_code:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type: 'null'
                    return_params:
                      type: string
                    url:
                      type: string
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: 'null'
              billing_city:
                type: 'null'
              billing_state:
                type: 'null'
              billing_zip:
                type: 'null'
              billing_country:
                type: 'null'
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: 'null'
              payment_type:
                type: string
    example:
      subscription:
        id: 19730041
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2017-11-13T12:51:27-06:00'
        created_at: '2017-11-13T12:51:26-06:00'
        updated_at: '2017-11-13T12:51:27-06:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2017-12-13T12:51:26-06:00'
        next_assessment_at: '2017-12-13T12:51:26-06:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: null
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2017-11-13T12:51:26-06:00'
        previous_state: active
        signup_payment_id: 211813093
        signup_revenue: '225.00'
        delayed_cancel_at: null
        coupon_code: STACK_COMP_100_DOLLAR
        total_revenue_in_cents: 22500
        product_price_in_cents: 100000
        product_version_number: 1
        payment_type: credit_card
        referral_code: null
        coupon_use_count: 1
        coupon_uses_allowed: 1
        reason_code: null
        automatically_resume_at: null
        coupon_codes:
          - STACK_COMP_100_DOLLAR
          - STACK_COMP_75_PERCENT
        customer:
          id: 19311096
          first_name: Joe
          last_name: Example
          organization: null
          email: joe@example.com
          created_at: '2017-11-13T12:51:26-06:00'
          updated_at: '2017-11-13T12:51:28-06:00'
          reference: null
          address: null
          address_2: null
          city: null
          state: null
          zip: null
          country: null
          phone: null
          portal_invite_last_sent_at: '2017-11-13T12:51:28-06:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2017-11-13T12:51:28-06:00'
          cc_emails: null
          tax_exempt: false
        product:
          id: 4581816
          name: Basic
          handle: basic
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2017-11-02T15:00:11-05:00'
          updated_at: '2017-11-07T09:20:12-06:00'
          price_in_cents: 100000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: true
          return_params: ''
          taxable: false
          update_return_url: ''
          tax_code: ''
          initial_charge_after_trial: false
          version_number: 1
          update_return_params: ''
          product_family:
            id: 1025627
            name: Acme Products
            description: ''
            handle: acme-products
            accounting_code: null
          public_signup_pages:
            - id: 333589
              return_url: null
              return_params: ''
              url: 'https://general-goods.chargify.com/subscribe/hbwtd98j3hk2/basic'
        credit_card:
          id: 13380483
          first_name: Joe
          last_name: Example
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 10
          expiration_year: 2020
          customer_id: 19311096
          current_vault: bogus
          vault_token: '1'
          billing_address: null
          billing_city: null
          billing_state: null
          billing_zip: null
          billing_country: null
          customer_vault_token: null
          billing_address_2: null
          payment_type: credit_card
    x-stoplight:
      id: create-subscription-with-multiple-coupon-output
      name: Create Subscription with Multiple Coupon Output
      public: true
  create-subscription-with-multiple-coupon-input:
    title: Create Subscription with Multiple Coupon Input
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          customer_attributes:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
          credit_card_attributes:
            type: object
            properties:
              full_number:
                type: string
              expiration_month:
                type: string
              expiration_year:
                type: string
          coupon_codes:
            type: array
            items:
              type: string
    example:
      subscription:
        product_handle: basic
        customer_attributes:
          first_name: Joe
          last_name: Example
          email: joe@example.com
        credit_card_attributes:
          full_number: '1'
          expiration_month: '10'
          expiration_year: '2020'
        coupon_codes:
          - STACK_COMP_100_DOLLAR
          - STACK_COMP_75_PERCENT
    x-stoplight:
      id: create-subscription-with-multiple-coupon-input
      name: Create Subscription with Multiple Coupon Input
      public: true
  read-usage-for-a-subscriptions-metered-usage:
    title: Read usage for a subscription's metered component output
    type: array
    items:
      type: object
      properties:
        usage:
          type: object
          properties:
            id:
              type: integer
            memo:
              type: string
            created_at:
              type: string
            price_point_id:
              type: integer
            quantity:
              type: integer
    example:
      - usage:
          id: 143497499
          memo: Fourth record
          created_at: '2018-01-03T08:53:52-06:00'
          price_point_id: 149416
          quantity: 200
      - usage:
          id: 143497490
          memo: Third record
          created_at: '2018-01-03T08:53:36-06:00'
          price_point_id: 149416
          quantity: 50
      - usage:
          id: 143497474
          memo: Second record
          created_at: '2018-01-03T08:52:46-06:00'
          price_point_id: 149416
          quantity: 20
      - usage:
          id: 143497461
          memo: First record
          created_at: '2018-01-03T08:52:29-06:00'
          price_point_id: 149416
          quantity: 10
    x-stoplight:
      id: read-usage-for-a-subscriptions-metered-usage
      name: Read usage for a subscription's metered component output
      public: true
  read-allocations-for-a-subscriptions-quantity-based-components:
    title: Read allocations for a subscription's quantity-based components
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            component_id:
              type: integer
            subscription_id:
              type: integer
            quantity:
              type: string
            previous_quantity:
              type: string
            memo:
              type: string
            timestamp:
              type: string
            proration_upgrade_scheme:
              type: string
            proration_downgrade_scheme:
              type: string
            price_point_id:
              type: integer
            previous_price_point_id:
              type: integer
    example:
      - allocation:
          component_id: 426645
          subscription_id: 20310847
          quantity: '100.0'
          previous_quantity: '50.0'
          memo: Third record
          timestamp: '2018-01-03T15:15:41Z'
          proration_upgrade_scheme: prorate-delay-capture
          proration_downgrade_scheme: no-prorate
          price_point_id: 149418
          previous_price_point_id: 149418
      - allocation:
          component_id: 426645
          subscription_id: 20310847
          quantity: '50.0'
          previous_quantity: '10.0'
          memo: Second record
          timestamp: '2018-01-03T15:15:13Z'
          proration_upgrade_scheme: full-price-attempt-capture
          proration_downgrade_scheme: no-prorate
          price_point_id: 149418
          previous_price_point_id: 149418
      - allocation:
          component_id: 426645
          subscription_id: 20310847
          quantity: '10.0'
          previous_quantity: '0.0'
          memo: First record
          timestamp: '2018-01-03T15:14:46Z'
          proration_upgrade_scheme: full-price-delay-capture
          proration_downgrade_scheme: no-prorate
          price_point_id: 149418
          previous_price_point_id: 149418
    x-stoplight:
      id: read-allocations-for-a-subscriptions-quantity-based-components
      name: Read allocations for a subscription's quantity-based components
      public: true
  read-history-for-subscriptions-on-off-component:
    title: Read History for Subscription's On/Off Component
    type: array
    items:
      type: object
      properties:
        allocation:
          type: object
          properties:
            component_id:
              type: integer
            subscription_id:
              type: integer
            quantity:
              type: integer
            previous_quantity:
              type: integer
            memo:
              type: string
            timestamp:
              type: string
            proration_upgrade_scheme:
              type: string
            proration_downgrade_scheme:
              type: string
            price_point_id:
              type: integer
            previous_price_point_id:
              type: integer
    example:
      - allocation:
          component_id: 426655
          subscription_id: 20310847
          quantity: 1
          previous_quantity: 0
          memo: Purchased hosting
          timestamp: '2018-01-03T15:37:12Z'
          proration_upgrade_scheme: prorate-delay-capture
          proration_downgrade_scheme: no-prorate
          price_point_id: 149428
          previous_price_point_id: 149428
      - allocation:
          component_id: 426655
          subscription_id: 20310847
          quantity: 0
          previous_quantity: 1
          memo: Canceled hosting
          timestamp: '2018-01-03T15:36:33Z'
          proration_upgrade_scheme: no-prorate
          proration_downgrade_scheme: prorate
          price_point_id: 149428
          previous_price_point_id: 149428
      - allocation:
          component_id: 426655
          subscription_id: 20310847
          quantity: 1
          previous_quantity: 0
          memo: Purchased hosting
          timestamp: '2018-01-03T15:36:10Z'
          proration_upgrade_scheme: prorate-attempt-capture
          proration_downgrade_scheme: no-prorate
          price_point_id: 149428
          previous_price_point_id: 149428
    x-stoplight:
      id: read-history-for-subscriptions-on-off-component
      name: Read History for Subscription's On/Off Component
      public: true
  update-on-hold-subscriptions-input:
    title: Update On-Hold Subscriptions Input
    type: object
    example:
      hold:
        automatically_resume_at: '2019-01-20'
    x-stoplight:
      id: update-on-hold-subscriptions-input
      name: Update On-Hold Subscriptions Input
      public: true
  update-on-hold-subscriptions-output:
    title: Update On-Hold Subscriptions Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: boolean
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: 'null'
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: string
          coupon_use_count:
            type: 'null'
          coupon_uses_allowed:
            type: 'null'
          reason_code:
            type: 'null'
          automatically_resume_at:
            type: string
          coupon_codes:
            type: array
            items:
              type: object
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: string
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: string
              address_2:
                type: string
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              country:
                type: string
              phone:
                type: string
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: 'null'
              portal_customer_created_at:
                type: string
              cc_emails:
                type: 'null'
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: 'null'
              trial_price_in_cents:
                type: 'null'
              trial_interval:
                type: 'null'
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              tax_code:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: string
              billing_city:
                type: string
              billing_state:
                type: string
              billing_zip:
                type: string
              billing_country:
                type: string
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: string
              payment_type:
                type: string
    example:
      subscription:
        id: 20359140
        state: on_hold
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2018-01-05T17:15:50-06:00'
        created_at: '2018-01-05T17:15:49-06:00'
        updated_at: '2018-01-09T10:26:14-06:00'
        expires_at: null
        balance_in_cents: 0
        current_period_ends_at: '2023-01-05T17:15:00-06:00'
        next_assessment_at: '2023-01-05T17:15:00-06:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: automatic
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2018-01-05T17:15:49-06:00'
        previous_state: active
        signup_payment_id: 219829722
        signup_revenue: '100.00'
        delayed_cancel_at: null
        coupon_code: null
        total_revenue_in_cents: 10009991
        product_price_in_cents: 10000
        product_version_number: 1
        payment_type: credit_card
        referral_code: 8y7jqr
        coupon_use_count: null
        coupon_uses_allowed: null
        reason_code: null
        automatically_resume_at: '2019-01-20T00:00:00-06:00'
        coupon_codes: []
        customer:
          id: 19948683
          first_name: Vanessa
          last_name: Test
          organization: ''
          email: vanessa@example.com
          created_at: '2018-01-05T17:15:49-06:00'
          updated_at: '2018-01-05T17:15:51-06:00'
          reference: null
          address: 123 Anywhere Ln
          address_2: ''
          city: Boston
          state: MA
          zip: '02120'
          country: US
          phone: 555-555-1212
          portal_invite_last_sent_at: '2018-01-05T17:15:51-06:00'
          portal_invite_last_accepted_at: null
          verified: null
          portal_customer_created_at: '2018-01-05T17:15:51-06:00'
          cc_emails: null
          tax_exempt: false
        product:
          id: 4535643
          name: Annual Product
          handle: annual-product
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2017-08-25T10:25:31-05:00'
          updated_at: '2017-08-25T10:25:31-05:00'
          price_in_cents: 10000
          interval: 12
          interval_unit: month
          initial_charge_in_cents: null
          trial_price_in_cents: null
          trial_interval: null
          trial_interval_unit: month
          archived_at: null
          require_credit_card: true
          return_params: ''
          taxable: false
          update_return_url: ''
          tax_code: ''
          initial_charge_after_trial: false
          version_number: 1
          update_return_params: ''
          product_family:
            id: 1025627
            name: Acme Products
            description: ''
            handle: acme-products
            accounting_code: null
          public_signup_pages: []
        credit_card:
          id: 13826563
          first_name: Bomb 3
          last_name: Test
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 1
          expiration_year: 2028
          customer_id: 19948683
          current_vault: bogus
          vault_token: '1'
          billing_address: 123 Anywhere Lane
          billing_city: Boston
          billing_state: Ma
          billing_zip: '02120'
          billing_country: US
          customer_vault_token: null
          billing_address_2: ''
          payment_type: credit_card
    x-stoplight:
      id: update-on-hold-subscriptions-output
      name: Update On-Hold Subscriptions Output
      public: true
  read-a-product-output:
    title: Read a Product Output
    type: object
    properties:
      product:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: string
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          expiration_interval:
            type: integer
          expiration_interval_unit:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          initial_charge_in_cents:
            type: integer
          trial_price_in_cents:
            type: integer
          trial_interval:
            type: integer
          trial_interval_unit:
            type: string
          archived_at:
            type: 'null'
          require_credit_card:
            type: boolean
          return_params:
            type: string
          taxable:
            type: boolean
          update_return_url:
            type: string
          tax_code:
            type: string
          initial_charge_after_trial:
            type: boolean
          version_number:
            type: integer
          update_return_params:
            type: string
          product_family:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              handle:
                type: string
              accounting_code:
                type: 'null'
          public_signup_pages:
            type: array
            items:
              type: object
    example:
      product:
        id: 4535635
        name: Paid Annual Seats
        handle: paid-annual-seats
        description: Paid annual seats for our commercial enterprise product
        accounting_code: paid-annual-seats
        request_credit_card: true
        expiration_interval: 1
        expiration_interval_unit: day
        created_at: '2017-08-25T10:25:31-05:00'
        updated_at: '2018-01-16T12:58:04-06:00'
        price_in_cents: 10000
        interval: 12
        interval_unit: month
        initial_charge_in_cents: 4900
        trial_price_in_cents: 1000
        trial_interval: 14
        trial_interval_unit: day
        archived_at: null
        require_credit_card: true
        return_params: 'id={subscription_id}&ref={customer_reference}'
        taxable: true
        update_return_url: 'http://www.example.com'
        tax_code: D0000000
        initial_charge_after_trial: false
        version_number: 4
        update_return_params: 'id={subscription_id}&ref={customer_reference}'
        product_family:
          id: 1025627
          name: Acme Products
          description: ''
          handle: acme-products
          accounting_code: null
        public_signup_pages: []
    x-stoplight:
      id: read-a-product-output
      name: Read a Product Output
      public: true
  archive-a-product-output:
    title: Archive a Product Output
    type: object
    properties:
      product:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          handle:
            type: 'null'
          description:
            type: string
          accounting_code:
            type: string
          request_credit_card:
            type: boolean
          expiration_interval:
            type: 'null'
          expiration_interval_unit:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          price_in_cents:
            type: integer
          interval:
            type: integer
          interval_unit:
            type: string
          initial_charge_in_cents:
            type: 'null'
          trial_price_in_cents:
            type: integer
          trial_interval:
            type: integer
          trial_interval_unit:
            type: string
          archived_at:
            type: string
          require_credit_card:
            type: boolean
          return_params:
            type: string
          taxable:
            type: boolean
          update_return_url:
            type: string
          tax_code:
            type: string
          initial_charge_after_trial:
            type: boolean
          version_number:
            type: integer
          update_return_params:
            type: string
          product_family:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              handle:
                type: string
              accounting_code:
                type: 'null'
          public_signup_pages:
            type: array
            items:
              type: object
    example:
      product:
        id: 4535638
        name: Business Monthly
        handle: null
        description: Business Monthly
        accounting_code: ''
        request_credit_card: true
        expiration_interval: null
        expiration_interval_unit: never
        created_at: '2017-08-25T10:25:31-05:00'
        updated_at: '2018-01-16T13:02:44-06:00'
        price_in_cents: 4900
        interval: 1
        interval_unit: month
        initial_charge_in_cents: null
        trial_price_in_cents: 0
        trial_interval: 1
        trial_interval_unit: day
        archived_at: '2018-01-16T13:02:44-06:00'
        require_credit_card: false
        return_params: ''
        taxable: false
        update_return_url: ''
        tax_code: ''
        initial_charge_after_trial: false
        version_number: 1
        update_return_params: ''
        product_family:
          id: 1025627
          name: Acme Products
          description: ''
          handle: acme-products
          accounting_code: null
        public_signup_pages: []
    x-stoplight:
      id: archive-a-product-output
      name: Archive a Product Output
      public: true
  subscription-preview-price-point-id-request:
    title: Subscription Preview Price Point ID
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          components:
            type: array
            items:
              type: object
              properties:
                component_id:
                  type: integer
                price_point_id:
                  type: integer
                allocated_quantity:
                  type: integer
    example:
      subscription:
        product_handle: monthly-product
        components:
          - component_id: 462149
            price_point_id: 200543
            allocated_quantity: 10
    x-stoplight:
      id: subscription-preview-price-point-id-request
      name: Subscription Preview Price Point ID
      public: true
  subscription-preview-price-points-response:
    title: Subscription Preview Price Points Response
    type: object
    properties:
      subscription_preview:
        type: object
        properties:
          current_billing_manifest:
            type: object
            properties:
              line_items:
                type: array
                items:
                  type: object
                  properties:
                    transaction_type:
                      type: string
                    kind:
                      type: string
                    amount_in_cents:
                      type: integer
                    memo:
                      type: string
                    discount_amount_in_cents:
                      type: integer
                    taxable_amount_in_cents:
                      type: integer
                    component_id:
                      type: integer
              total_in_cents:
                type: integer
              total_discount_in_cents:
                type: integer
              total_tax_in_cents:
                type: integer
              subtotal_in_cents:
                type: integer
              start_date:
                type: string
              end_date:
                type: string
              period_type:
                type: string
              existing_balance_in_cents:
                type: integer
          next_billing_manifest:
            type: object
            properties:
              line_items:
                type: array
                items:
                  type: object
                  properties:
                    transaction_type:
                      type: string
                    kind:
                      type: string
                    amount_in_cents:
                      type: integer
                    memo:
                      type: string
                    discount_amount_in_cents:
                      type: integer
                    taxable_amount_in_cents:
                      type: integer
                    component_id:
                      type: integer
              total_in_cents:
                type: integer
              total_discount_in_cents:
                type: integer
              total_tax_in_cents:
                type: integer
              subtotal_in_cents:
                type: integer
              start_date:
                type: string
              end_date:
                type: string
              period_type:
                type: string
              existing_balance_in_cents:
                type: integer
    example:
      subscription_preview:
        current_billing_manifest:
          line_items:
            - transaction_type: charge
              kind: baseline
              amount_in_cents: 5000
              memo: Monthly product  (02/05/2018 - 03/05/2018)
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
            - transaction_type: charge
              kind: component
              amount_in_cents: 20000
              memo: 'HUNDO: 10 HUNDOs'
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
              component_id: 462149
          total_in_cents: 25000
          total_discount_in_cents: 0
          total_tax_in_cents: 0
          subtotal_in_cents: 25000
          start_date: '2018-02-05T19:36:55Z'
          end_date: '2018-03-05T19:36:55Z'
          period_type: recurring
          existing_balance_in_cents: 0
        next_billing_manifest:
          line_items:
            - transaction_type: charge
              kind: baseline
              amount_in_cents: 5000
              memo: Monthly product  (03/05/2018 - 04/05/2018)
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
            - transaction_type: charge
              kind: component
              amount_in_cents: 20000
              memo: 'HUNDO: 10 HUNDOs'
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
              component_id: 462149
          total_in_cents: 25000
          total_discount_in_cents: 0
          total_tax_in_cents: 0
          subtotal_in_cents: 25000
          start_date: '2018-03-05T19:36:55Z'
          end_date: '2018-04-05T19:36:55Z'
          period_type: recurring
          existing_balance_in_cents: 0
    x-stoplight:
      id: subscription-preview-price-points-response
      name: Subscription Preview Price Points Response
      public: true
  update-subscription-request:
    title: Update Subscription Request
    type: object
    properties:
      subscription:
        type: object
        properties:
          next_billing_at:
            type: string
          product_handle:
            type: string
          product_id:
            type: integer
          payment_collection_method:
            type: string
    example:
      subscription:
        next_billing_at: '2010-08-06T15:34:00Z'
        product_handle: basic
        product_id: 123456789
        payment_collection_method: invoice
    x-stoplight:
      id: update-subscription-request
      name: Update Subscription Request
      public: true
  update-subscription-delayed-product-change-request:
    title: 'Update Subscription: Delayed Product Change Request'
    type: object
    properties:
      subscription:
        type: object
        properties:
          product_handle:
            type: string
          product_change_delayed:
            type: boolean
    example:
      subscription:
        product_handle: gold-product
        product_change_delayed: true
    x-stoplight:
      id: update-subscription-delayed-product-change-request
      name: 'Update Subscription: Delayed Product Change Request'
      public: true
  update-subscription-cancel-delayed-product-change-request:
    title: 'Update Subscription: Cancel Delayed Product Change Request'
    type: object
    properties:
      subscription:
        type: object
        properties:
          next_product_id:
            type: string
    example:
      subscription:
        next_product_id: ''
    x-stoplight:
      id: update-subscription-cancel-delayed-product-change-request
      name: 'Update Subscription: Cancel Delayed Product Change Request'
      public: true
  add-multiple-coupons-to-existing-subscription-input:
    title: Add Multiple Coupons to Existing Subscription Input
    type: object
    properties:
      codes:
        type: array
        items:
          type: string
    example:
      codes:
        - COUPON_1
        - COUPON_2
    x-stoplight:
      id: add-multiple-coupons-to-existing-subscription-input
      name: Add Multiple Coupons to Existing Subscription Input
      public: true
  add-multiple-coupons-to-existing-subscription-output:
    title: Add Multiple Coupons to Existing Subscription Output
    type: object
    properties:
      subscription:
        type: object
        properties:
          id:
            type: integer
          state:
            type: string
          trial_started_at:
            type: 'null'
          trial_ended_at:
            type: 'null'
          activated_at:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          expires_at:
            type: 'null'
          balance_in_cents:
            type: integer
          current_period_ends_at:
            type: string
          next_assessment_at:
            type: string
          canceled_at:
            type: 'null'
          cancellation_message:
            type: 'null'
          next_product_id:
            type: 'null'
          cancel_at_end_of_period:
            type: boolean
          payment_collection_method:
            type: string
          snap_day:
            type: 'null'
          cancellation_method:
            type: 'null'
          current_period_started_at:
            type: string
          previous_state:
            type: string
          signup_payment_id:
            type: integer
          signup_revenue:
            type: string
          delayed_cancel_at:
            type: 'null'
          coupon_code:
            type: string
          total_revenue_in_cents:
            type: integer
          product_price_in_cents:
            type: integer
          product_version_number:
            type: integer
          payment_type:
            type: string
          referral_code:
            type: string
          coupon_use_count:
            type: integer
          coupon_uses_allowed:
            type: integer
          reason_code:
            type: 'null'
          automatically_resume_at:
            type: 'null'
          coupon_codes:
            type: array
            items:
              type: string
          customer:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              organization:
                type: string
              email:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              reference:
                type: 'null'
              address:
                type: string
              address_2:
                type: string
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              country:
                type: string
              phone:
                type: string
              portal_invite_last_sent_at:
                type: string
              portal_invite_last_accepted_at:
                type: 'null'
              verified:
                type: boolean
              portal_customer_created_at:
                type: string
              cc_emails:
                type: string
              tax_exempt:
                type: boolean
          product:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              handle:
                type: string
              description:
                type: string
              accounting_code:
                type: string
              request_credit_card:
                type: boolean
              expiration_interval:
                type: 'null'
              expiration_interval_unit:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              price_in_cents:
                type: integer
              interval:
                type: integer
              interval_unit:
                type: string
              initial_charge_in_cents:
                type: integer
              trial_price_in_cents:
                type: integer
              trial_interval:
                type: integer
              trial_interval_unit:
                type: string
              archived_at:
                type: 'null'
              require_credit_card:
                type: boolean
              return_params:
                type: string
              taxable:
                type: boolean
              update_return_url:
                type: string
              tax_code:
                type: string
              initial_charge_after_trial:
                type: boolean
              version_number:
                type: integer
              update_return_params:
                type: string
              product_family:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  handle:
                    type: string
                  accounting_code:
                    type: 'null'
              public_signup_pages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    return_url:
                      type: string
                    return_params:
                      type: string
                    url:
                      type: string
          credit_card:
            type: object
            properties:
              id:
                type: integer
              first_name:
                type: string
              last_name:
                type: string
              masked_card_number:
                type: string
              card_type:
                type: string
              expiration_month:
                type: integer
              expiration_year:
                type: integer
              customer_id:
                type: integer
              current_vault:
                type: string
              vault_token:
                type: string
              billing_address:
                type: 'null'
              billing_city:
                type: 'null'
              billing_state:
                type: 'null'
              billing_zip:
                type: string
              billing_country:
                type: 'null'
              customer_vault_token:
                type: 'null'
              billing_address_2:
                type: 'null'
              payment_type:
                type: string
    example:
      subscription:
        id: 21607180
        state: active
        trial_started_at: null
        trial_ended_at: null
        activated_at: '2018-04-20T14:20:57-05:00'
        created_at: '2018-04-20T14:20:57-05:00'
        updated_at: '2018-05-11T13:53:44-05:00'
        expires_at: null
        balance_in_cents: 49000
        current_period_ends_at: '2018-05-12T11:33:03-05:00'
        next_assessment_at: '2018-05-12T11:33:03-05:00'
        canceled_at: null
        cancellation_message: null
        next_product_id: null
        cancel_at_end_of_period: false
        payment_collection_method: invoice
        snap_day: null
        cancellation_method: null
        current_period_started_at: '2018-05-11T11:33:03-05:00'
        previous_state: active
        signup_payment_id: 237154761
        signup_revenue: '0.00'
        delayed_cancel_at: null
        coupon_code: COUPONA
        total_revenue_in_cents: 52762
        product_price_in_cents: 100000
        product_version_number: 2
        payment_type: credit_card
        referral_code: x45nc8
        coupon_use_count: 0
        coupon_uses_allowed: 1
        reason_code: null
        automatically_resume_at: null
        coupon_codes:
          - COUPONA
          - COUPONB
        customer:
          id: 21259051
          first_name: K
          last_name: C
          organization: ''
          email: example@chargify.com
          created_at: '2018-04-20T14:20:57-05:00'
          updated_at: '2018-04-23T15:29:28-05:00'
          reference: null
          address: ''
          address_2: ''
          city: ''
          state: ''
          zip: ''
          country: ''
          phone: ''
          portal_invite_last_sent_at: '2018-04-20T14:20:59-05:00'
          portal_invite_last_accepted_at: null
          verified: false
          portal_customer_created_at: '2018-04-20T14:20:59-05:00'
          cc_emails: ''
          tax_exempt: false
        product:
          id: 4581816
          name: Basic
          handle: basic
          description: ''
          accounting_code: ''
          request_credit_card: true
          expiration_interval: null
          expiration_interval_unit: never
          created_at: '2017-11-02T15:00:11-05:00'
          updated_at: '2018-04-10T09:02:59-05:00'
          price_in_cents: 100000
          interval: 1
          interval_unit: month
          initial_charge_in_cents: 100000
          trial_price_in_cents: 1000
          trial_interval: 10
          trial_interval_unit: month
          archived_at: null
          require_credit_card: true
          return_params: ''
          taxable: false
          update_return_url: ''
          tax_code: ''
          initial_charge_after_trial: false
          version_number: 2
          update_return_params: ''
          product_family:
            id: 1025627
            name: My Product Family
            description: ''
            handle: acme-products
            accounting_code: null
          public_signup_pages:
            - id: 333589
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic'
            - id: 335926
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic'
            - id: 345555
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic'
            - id: 345556
              return_url: ''
              return_params: ''
              url: 'https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic'
        credit_card:
          id: 14839830
          first_name: John
          last_name: Doe
          masked_card_number: XXXX-XXXX-XXXX-1
          card_type: bogus
          expiration_month: 1
          expiration_year: 2028
          customer_id: 21259051
          current_vault: bogus
          vault_token: '1'
          billing_address: null
          billing_city: null
          billing_state: null
          billing_zip: '99999'
          billing_country: null
          customer_vault_token: null
          billing_address_2: null
          payment_type: credit_card
    x-stoplight:
      id: add-multiple-coupons-to-existing-subscription-output
      name: Add Multiple Coupons to Existing Subscription Output
      public: true
  subscription-preview-response:
    title: Subscription Preview Response
    type: object
    properties:
      subscription_preview:
        type: object
        properties:
          current_billing_manifest:
            type: object
            properties:
              line_items:
                type: array
                items:
                  type: object
                  properties:
                    transaction_type:
                      type: string
                    kind:
                      type: string
                    amount_in_cents:
                      type: integer
                    memo:
                      type: string
                    discount_amount_in_cents:
                      type: integer
                    taxable_amount_in_cents:
                      type: integer
                    taxations:
                      type: array
                      items:
                        type: object
                        properties:
                          tax_id:
                            type: 'null'
                          tax_name:
                            type: string
                          rate:
                            type: string
                          tax_amount_in_cents:
                            type: integer
                          tax_rules:
                            type: array
                            items:
                              type: object
              total_in_cents:
                type: integer
              total_discount_in_cents:
                type: integer
              total_tax_in_cents:
                type: integer
              subtotal_in_cents:
                type: integer
              start_date:
                type: string
              end_date:
                type: string
              period_type:
                type: string
              existing_balance_in_cents:
                type: integer
          next_billing_manifest:
            type: object
            properties:
              line_items:
                type: array
                items:
                  type: object
              total_in_cents:
                type: integer
              total_discount_in_cents:
                type: integer
              total_tax_in_cents:
                type: integer
              subtotal_in_cents:
                type: integer
              start_date:
                type: string
              end_date:
                type: string
              period_type:
                type: string
              existing_balance_in_cents:
                type: integer
    example:
      subscription_preview:
        current_billing_manifest:
          line_items:
            - transaction_type: charge
              kind: initial
              amount_in_cents: 4900
              memo: Initial/Startup fees
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 4900
              taxations:
                - tax_id: null
                  tax_name: MA Tax (6.25%)
                  rate: ''
                  tax_amount_in_cents: 306
                  tax_rules: []
            - transaction_type: charge
              kind: trial
              amount_in_cents: 1000
              memo: Trial Price (05/11/2018 - 05/25/2018)
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 1000
              taxations:
                - tax_id: null
                  tax_name: MA Tax (6.25%)
                  rate: ''
                  tax_amount_in_cents: 63
                  tax_rules: []
            - transaction_type: charge
              kind: tax
              amount_in_cents: 306
              memo: MA Tax (6.25%)
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
            - transaction_type: charge
              kind: tax
              amount_in_cents: 63
              memo: MA Tax (6.25%)
              discount_amount_in_cents: 0
              taxable_amount_in_cents: 0
          total_in_cents: 6269
          total_discount_in_cents: 0
          total_tax_in_cents: 369
          subtotal_in_cents: 5900
          start_date: '2018-05-11T20:32:59Z'
          end_date: '2018-05-25T20:32:59Z'
          period_type: trial
          existing_balance_in_cents: 0
        next_billing_manifest:
          line_items: []
          total_in_cents: 0
          total_discount_in_cents: 0
          total_tax_in_cents: 0
          subtotal_in_cents: 0
          start_date: '2018-05-25T20:32:59Z'
          end_date: '2019-05-25T20:32:59Z'
          period_type: recurring
          existing_balance_in_cents: 0
    x-stoplight:
      id: subscription-preview-response
      name: Subscription Preview Response
      public: true
  invoice-new:
    title: Invoice (NEW)
    type: object
    properties:
      uid:
        type: string
        description: Unique identifier for the invoice. It is generated automatically by Chargify and has the prefix "inv_" followed by alphanumeric characters.
      site_id:
        type: integer
        description: ID of the site to which the invoice belongs.
      customer_id:
        type: integer
        description: ID of the customer to which the invoice belongs.
      subscription_id:
        type: integer
        description: ID of the subscription that generated the invoice.
      number:
        type: string
        description: |-
          A unique, identifying string that appears on the invoice and in places the invoice is referenced.

          While the UID is long and not appropriate to show to customers, the number is usually shorter and consumable by the customer and the merchant alike.
      sequence_number:
        type: integer
        description: A monotonically increasing number assigned to invoices as they are created.  This number is unique within a site and can be used to sort and order invoices.
      issue_date:
        type: string
        description: Date the invoice was issued to the customer.  This is the date that the invoice was made available for payment.
      due_date:
        type: string
        description: Date the invoice is due.
      paid_date:
        type: string
        description: |-
          Date the invoice became fully paid.

          If partial payments are applied to the invoice, this date will not be present until payment has been made in full.
      status:
        type: string
        description: |
          Current status of the invoice.  One of:

          * "draft"
          * "pending"
          * "open"
          * "paid"
          * "voided"
          * "canceled"

          See [Invoice Statuses](https://help.chargify.com/invoices/index.html#invoice-statuses) for more.
      collection_method:
        type: string
        description: 'The collection method of the invoice, which is either "automatic" (tried and retried on an existing payment method by Chargify) or "remittance" (payment must be remitted by the customer or keyed in by the merchant).'
      payment_instructions:
        type: string
        description: 'A message that is printed on the invoice when it is marked for remittance collection. It is intended to describe to the customer how they may make payment, and is configured by the merchant.'
      currency:
        type: string
        description: The ISO 4217 currency code (3 character string) representing the currency of invoice transaction.
      consolidation_level:
        type: string
        description: |-
          Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:

          * "none": A normal invoice with no consolidation.
          * "child": An invoice segment which has been combined into a consolidated invoice.
          * "parent": A consolidated invoice, whose contents are composed of invoice segments.

          "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.

          See also the [invoice consolidation documentation](https://help.chargify.com/invoices/consolidation.html).
      parent_invoice_uid:
        type: 'null'
        description: 'For invoices with `consolidation_level` of `child`, this specifies the UID of the parent (consolidated) invoice.'
      parent_invoice_number:
        type: 'null'
        description: 'For invoices with `consolidation_level` of `child`, this specifies the number of the parent (consolidated) invoice.'
      group_primary_subscription_id:
        type: 'null'
        description: 'For invoices with `consolidation_level` of `parent`, this specifies the ID of the subscription which was the primary subscription of the subscription group that generated the invoice.'
      product_name:
        type: string
        description: The name of the product subscribed when the invoice was generated.
      product_family_name:
        type: string
        description: The name of the product family subscribed when the invoice was generated.
      seller:
        type: object
        description: Information about the seller (merchant) listed on the masthead of the invoice.
        properties:
          name:
            type: string
          address:
            type: object
            properties:
              street:
                type: 'null'
              line2:
                type: 'null'
              city:
                type: 'null'
              state:
                type: 'null'
              zip:
                type: 'null'
              country:
                type: 'null'
          phone:
            type: string
      customer:
        type: object
        description: Information about the customer who is responsible for the invoice.
        properties:
          chargify_id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          organization:
            type: 'null'
          email:
            type: string
      memo:
        type: string
        description: The memo printed on invoices of any collection type.  This message is in control of the merchant.
      billing_address:
        type: object
        description: The invoice billing address.
        properties:
          street:
            type: string
          line2:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
      shipping_address:
        type: object
        description: The invoice shipping address.
        properties:
          street:
            type: string
          line2:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
      subtotal_amount:
        type: string
        description: |-
          Subtotal of the invoice, which is the sum of all line items before discounts or taxes.

          See also the description of invoice amounts.
      discount_amount:
        type: string
      tax_amount:
        type: string
      total_amount:
        type: string
      credit_amount:
        type: string
      paid_amount:
        type: string
      due_amount:
        type: string
      line_items:
        type: array
        items:
          type: object
          properties:
            uid:
              type: string
            title:
              type: string
            description:
              type: string
            quantity:
              type: string
            unit_price:
              type: string
            subtotal_amount:
              type: string
            discount_amount:
              type: string
            tax_amount:
              type: string
            total_amount:
              type: string
            tiered_unit_price:
              type: boolean
            period_range_start:
              type: string
            period_range_end:
              type: string
            product_id:
              type: integer
            product_version:
              type: integer
            component_id:
              type:
                - integer
                - 'null'
            price_point_id:
              type:
                - integer
                - 'null'
      discounts:
        type: array
        items:
          type: object
          properties:
            uid:
              type: string
            title:
              type: string
            code:
              type: string
            source_type:
              type: string
            source_id:
              type: integer
            discount_type:
              type: string
            percentage:
              type: string
            eligible_amount:
              type: string
            discount_amount:
              type: string
            line_item_breakouts:
              type: array
              items:
                type: object
                properties:
                  uid:
                    type: string
                  eligible_amount:
                    type: string
                  discount_amount:
                    type: string
      taxes:
        type: array
        items:
          type: object
          properties:
            uid:
              type: string
            title:
              type: string
            source_type:
              type: string
            source_id:
              type: integer
            percentage:
              type: string
            taxable_amount:
              type: string
            tax_amount:
              type: string
            line_item_breakouts:
              type: array
              items:
                type: object
                properties:
                  uid:
                    type: string
                  taxable_amount:
                    type: string
                  tax_amount:
                    type: string
      credits:
        type: array
        items:
          type: object
          properties:
            uid:
              type: string
            credit_note_number:
              type: string
            credit_note_uid:
              type: string
            transaction_time:
              type: string
            memo:
              type: string
            original_amount:
              type: string
            applied_amount:
              type: string
      payments:
        type: array
        items:
          type: object
          properties:
            transaction_time:
              type: string
            memo:
              type: string
            original_amount:
              type: string
            applied_amount:
              type: string
            payment_method:
              type: object
              properties:
                details:
                  type: string
                kind:
                  type: string
                memo:
                  type: string
                type:
                  type: string
                card_brand:
                  type: string
                card_expiration:
                  type: string
                last_four:
                  type: string
                masked_card_number:
                  type: string
            transaction_id:
              type: integer
            prepayment:
              type: boolean
      custom_fields:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
    example:
      uid: inv_8cvtwz27ptgp3
      site_id: 20
      customer_id: 3
      subscription_id: 2
      number: '17'
      sequence_number: 17
      issue_date: '2018-05-24'
      due_date: '2018-05-24'
      paid_date: '2018-05-24'
      status: paid
      collection_method: automatic
      payment_instructions: 'Please make checks payable to \"Acme, Inc.\"'
      currency: USD
      consolidation_level: none
      parent_invoice_uid: null
      parent_invoice_number: null
      group_primary_subscription_id: null
      product_name: Professional Plan
      product_family_name: Cloud Compute Servers
      seller:
        name: 'Acme, Inc.'
        address:
          street: null
          line2: null
          city: null
          state: null
          zip: null
          country: null
        phone: 555-555-1234 x137
      customer:
        chargify_id: 3
        first_name: Marty
        last_name: McFly
        organization: null
        email: timetraveller1985@example.com
      memo: 'Thanks for your business! If you have any questions, please contact your account manager.'
      billing_address:
        street: 200 Billing Rd.
        line2: Suite 100
        city: Needham
        state: MA
        zip: 02494
        country: US
      shipping_address:
        street: 100 Shipping St.
        line2: Apt 200
        city: Pleasantville
        state: NC
        zip: '12345'
        country: US
      subtotal_amount: '473.75'
      discount_amount: '47.38'
      tax_amount: '28.78'
      total_amount: '455.15'
      credit_amount: '4.8'
      paid_amount: '450.35'
      due_amount: '0.0'
      line_items:
        - uid: li_8cvtwyyncxtdv
          title: Professional Plan
          description: 05/24/2018 - 06/24/2018
          quantity: '1.0'
          unit_price: '99.0'
          subtotal_amount: '99.0'
          discount_amount: '9.9'
          tax_amount: '6.01425'
          total_amount: '95.11425'
          tiered_unit_price: false
          period_range_start: '2018-05-24'
          period_range_end: '2018-06-24'
          product_id: 84
          product_version: 1
          component_id: null
          price_point_id: null
        - uid: li_8cvtwyyxc6x4q
          title: Small Instance (Hourly)
          description: ''
          quantity: '201.0'
          unit_price: '0.25'
          subtotal_amount: '50.25'
          discount_amount: '5.03'
          tax_amount: '3.05235'
          total_amount: '48.27235'
          tiered_unit_price: false
          period_range_start: '2018-04-24'
          period_range_end: '2018-05-24'
          product_id: 84
          product_version: 1
          component_id: 76
          price_point_id: null
        - uid: li_8cvtwyyybg5r3
          title: Large Instance (Hourly)
          description: ''
          quantity: '629.0'
          unit_price: '0.5'
          subtotal_amount: '314.5'
          discount_amount: '31.45'
          tax_amount: '19.105875'
          total_amount: '302.155875'
          tiered_unit_price: false
          period_range_start: '2018-04-24'
          period_range_end: '2018-05-24'
          product_id: 84
          product_version: 1
          component_id: 77
          price_point_id: null
        - uid: li_8cvtwyyzcz3j8
          title: IP Addresses
          description: ''
          quantity: '5.0'
          unit_price: '2.0'
          subtotal_amount: '10.0'
          discount_amount: '1.0'
          tax_amount: '0.6075'
          total_amount: '9.6075'
          tiered_unit_price: false
          period_range_start: '2018-05-24'
          period_range_end: '2018-06-24'
          product_id: 84
          product_version: 1
          component_id: 78
          price_point_id: 87
      discounts:
        - uid: dli_8cvtwyzctqwz5
          title: Multi-service discount (10%)
          code: MULTI3
          source_type: Coupon
          source_id: 40
          discount_type: percentage
          percentage: '10.0'
          eligible_amount: '473.75'
          discount_amount: '47.38'
          line_item_breakouts:
            - uid: li_8cvtwyyncxtdv
              eligible_amount: '99.0'
              discount_amount: '9.9'
            - uid: li_8cvtwyyxc6x4q
              eligible_amount: '50.25'
              discount_amount: '5.03'
            - uid: li_8cvtwyyybg5r3
              eligible_amount: '314.5'
              discount_amount: '31.45'
            - uid: li_8cvtwyyzcz3j8
              eligible_amount: '10.0'
              discount_amount: '1.0'
      taxes:
        - uid: tli_8cvtwyztnz268
          title: NC Sales Tax
          source_type: Tax
          source_id: 1
          percentage: '6.75'
          taxable_amount: '426.37'
          tax_amount: '28.78'
          line_item_breakouts:
            - uid: li_8cvtwyyncxtdv
              taxable_amount: '89.1'
              tax_amount: '6.01425'
            - uid: li_8cvtwyyxc6x4q
              taxable_amount: '45.22'
              tax_amount: '3.05235'
            - uid: li_8cvtwyyybg5r3
              taxable_amount: '283.05'
              tax_amount: '19.105875'
            - uid: li_8cvtwyyzcz3j8
              taxable_amount: '9.0'
              tax_amount: '0.6075'
      credits:
        - uid: cdt_8cvtwz7h2yg7g
          credit_note_number: '16'
          credit_note_uid: cn_8ch6kd5y4dd9d
          transaction_time: '2018-05-24T14:23:18Z'
          memo: Credit balance applied
          original_amount: '4.8'
          applied_amount: '4.8'
      payments:
        - transaction_time: '2018-05-24T14:23:18Z'
          memo: 'Prepayment applied to invoice #17.'
          original_amount: '50.0'
          applied_amount: '50.0'
          payment_method:
            details: 'Check #45678'
            kind: Check
            memo: Check received via mail
            type: external
          transaction_id: 71
          prepayment: true
        - transaction_time: '2018-05-24T14:23:20Z'
          memo: 'Marty McFly - Professional Plan: Renewal payment'
          original_amount: '400.35'
          applied_amount: '400.35'
          payment_method:
            card_brand: visa
            card_expiration: 12/2022
            last_four: '1111'
            masked_card_number: XXXX-XXXX-XXXX-1111
            type: credit_card
          transaction_id: 113
          prepayment: false
      custom_fields:
        - name: Account Manager
          value: Gerald Strickland
        - name: Account Manager Phone
          value: 555-555-9999 x807
    x-stoplight:
      id: invoice-new
      name: Invoice (NEW)
      public: true
basePath: '%3C%3Csubdomain%3E%3E.chargify.com/'
x-stoplight:
  beforeScript: ''
  afterScript: ''
  version:
    groups:
      docs:
        - items:
            - _id: introduction
              type: docTextSections
            - _id: overview
              type: docTextSections
            - _id: /basics/subscription-api-response-exampe
              type: schemas
            - type: docTextSections
              _id: guidelines
            - _id: authentication
              type: docTextSections
            - _id: duplicate-prevention
              type: docTextSections
            - _id: api-code-samples-and-libraries-1
              type: docTextSections
            - _id: pagination20
              type: traits
            - _id: pagination50
              type: traits
            - _id: pathParameters
              type: traits
          name: Basics
        - name: Adjustments
          items:
            - _id: adjustment-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-adjustmentsjson
              type: endpoints
            - _id: adjustments/request
              type: schemas
            - type: schemas
              _id: adjustments/response
        - name: Allocations
          items:
            - _id: allocations-intro
              type: docTextSections
            - _id: POST_subscriptions-sub_id-components-comp_id-allocations-format
              type: endpoints
            - _id: allocation/create-request-post
              type: schemas
            - _id: allocation/create-response-post
              type: schemas
            - type: endpoints
              _id: GET_subscriptions-sub_id-components-comp_id-allocations-format
            - _id: allocation/read_allocations_subscription
              type: schemas
        - name: Billing Portal
          items:
            - _id: billing-portal-intro
              type: docTextSections
            - _id: GET_portal-customers-customer_id-management_link-format
              type: endpoints
            - _id: billing-portal/request
              type: schemas
            - _id: billing-portal/response
              type: schemas
            - _id: POST_portal-customers-customerid-enablejson
              type: endpoints
            - _id: billing-portal/request-enable
              type: schemas
            - _id: billing-portal/response-enable
              type: schemas
            - _id: POST_portal-customers-id-enablejson
              type: endpoints
            - _id: billing-portal/simul-response-post
              type: schemas
            - _id: autoInvite
              type: traits
            - _id: DELETE_portal-customers-customerid-invitations-revokejson
              type: endpoints
          divider: false
        - name: Components
          items:
            - _id: components-intro
              type: docTextSections
            - _id: POST_productfamilies-productfamilyid-pluralkindjson
              type: endpoints
            - _id: component/create
              type: schemas
            - _id: components/create-response-post
              type: schemas
            - _id: POST_productfamilies-productfamilyid-quantitybasedcomponentsformat
              type: endpoints
            - _id: components/create-component-with-price-points-request
              type: schemas
            - _id: GET_productfamilies-productfamilyid-componentsjson
              type: endpoints
            - _id: component/read-components-for-a-product-family-output
              type: schemas
            - _id: GET_productfamilies-productfamilyid-components-componentidjson
              type: endpoints
            - _id: component/list-specific-component-product-family-get
              type: schemas
            - _id: GET_components-lookupjson
              type: endpoints
        - divider: false
          items:
            - _id: component-line-items
              type: docTextSections
            - _id: GET_subscriptions-subscription_id-components-component_id-format
              type: endpoints
            - _id: components/read-specific-component-get
              type: schemas
            - _id: GET_subscriptions-subscription_id-components-format
              type: endpoints
            - _id: components/read-components-get
              type: schemas
          name: Component Line Items
        - name: 'Components: Metered Usage'
          items:
            - _id: metered-usage-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-components-componentid-usagesjson
              type: endpoints
            - _id: components/metered/create-usage-input
              type: schemas
            - _id: components/metered/create-usage-output
              type: schemas
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: components/metered/create-usage-when-creating-a-new-subscription Input
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentid-usagesjson
              type: endpoints
            - _id: read-usage-for-a-subscriptions-metered-usage
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentid-usagesjson
              type: endpoints
            - _id: components/metered/read-usage-output-subscription
              type: schemas
            - _id: componentParameters
              type: traits
          divider: false
        - divider: false
          items:
            - _id: components-on-off-intro
              type: docTextSections
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: components/onoff/create-subscription-with-onoff-component
              type: schemas
            - _id: POST_subscriptions-subscriptionid-components-componentid-allocationsjson
              type: endpoints
            - _id: components/onoff/toggling-on-off-request
              type: schemas
            - _id: components/onoff/toggling-on-off-response
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentid-allocationsjson
              type: endpoints
            - _id: read-history-for-subscriptions-on-off-component
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentidjson
              type: endpoints
            - _id: components/ononff/reading-the-current-status-response
              type: schemas
          name: 'Components: On/Off Toggling'
        - name: 'Components: Quantity Allocations'
          items:
            - _id: quantity-allocations-intro
              type: docTextSections
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: components/quantity/create-subscription-with-quantity-based-component
              type: schemas
            - _id: POST_subscriptions-sub_id-allocations-json
              type: endpoints
            - _id: allocation/multiple-request-post
              type: schemas
            - _id: allocation/multiple-response-post
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentidjson
              type: endpoints
            - _id: components/quantity/reading-current-quantity-response
              type: schemas
            - _id: GET_subscriptions-subscriptionid-components-componentid-allocationsjson
              type: endpoints
            - _id: read-allocations-for-a-subscriptions-quantity-based-components
              type: schemas
            - _id: POST_subscriptions-subscriptionid-components-componentid-allocationsjson
              type: endpoints
            - _id: components/quantity/update-the-quantity-allocation-request
              type: schemas
            - _id: components/quantity/update-the-quantity-allocation
              type: schemas
            - _id: POST-preview-allocation
              type: endpoints
          divider: false
        - divider: false
          items:
            - _id: components/price-points/list-price-points-response
              type: schemas
            - _id: components-price-point-intro
              type: docTextSections
            - _id: POST_components-componentid-pricepointsjson
              type: endpoints
            - _id: components/price-points/create-price-point-request
              type: schemas
            - _id: components/price-points/create-price-point-response
              type: schemas
            - _id: POST_components-componentid-pricepoints-bulkjson
              type: endpoints
            - _id: GET_components-componentid-pricepointsjson
              type: endpoints
            - _id: components/price-points/bulk-create-price-points-request
              type: schemas
            - _id: PUT_components-componentid-pricepoints-pricepointidjson
              type: endpoints
            - _id: components/price-points/update-price-point-request
              type: schemas
            - _id: PUT_components-componentid-pricepoints-pricepointid-defaultjson
              type: endpoints
            - _id: DELETE_components-componentid-pricepoints-pricepointidformat
              type: endpoints
            - _id: PUT_components-componentid-pricepoints-pricepointid-unarchivejson
              type: endpoints
            - _id: POST_subscriptions-subscriptionid-pricepointsjson
              type: endpoints
            - _id: components/price-points/bulk-update-a-subscription-s-component-s-price-points
              type: schemas
            - _id: components/price-points/bulk-reset-a-subscription-s-component-s-price-points
              type: schemas
            - _id: POST_subscriptions-subscriptionid-pricepoints-resetjson
              type: endpoints
          name: 'Components: Price Points'
          description: |-
            Component price points allows you to charge customers different amounts for the same component. You will be able to define multiple prices and pricing schemes, and then choose which price point to use for each subscription.

            See [Price Points Documentation](https://help.chargify.com/products/product-components.html#price-points) for more information.
        - items:
            - _id: metadata-intro
              type: docTextSections
            - _id: fRwCSab7Gcsav2eJ7
              type: endpoints
            - _id: L9579TJipLNhyLkNE
              type: endpoints
            - _id: z8c7tmcr4pFykonLS
              type: endpoints
            - _id: Cq9C7Ty8EeDDyJLY3
              type: endpoints
            - _id: 83HL2i6L5knstcdoM
              type: endpoints
            - _id: y8iW4wHKhe3wRZEQc
              type: schemas
            - _id: POST_resource-resourceid-metadatajson
              type: endpoints
            - _id: metadata/create-metadata-input
              type: schemas
            - _id: metadata/create-output
              type: schemas
            - _id: GET_subscriptions-metadatajson
              type: endpoints
            - _id: metadata/read-metadata-subscribers-output
              type: schemas
            - _id: GET_customers-metadatajson
              type: endpoints
            - _id: metadata/read-metadata-for-a-site
              type: schemas
            - _id: GET_customers-customerid-metadatajson
              type: endpoints
            - _id: /customfields/metadata/list-metadata-for-a-customer-output
              type: schemas
            - _id: iiKwbwofXKscujz3r
              type: schemas
            - _id: yedAoRMah82wSpFpm
              type: schemas
            - _id: GET_subscriptions-subscriptionid-metadatajson
              type: endpoints
            - _id: list-metadata-for-a-subscriber-output
              type: schemas
            - _id: PUT_resource-resourceid-metadatajson
              type: endpoints
            - _id: metadata/update-metadata-input
              type: schemas
            - _id: metadata/update-metadata-output
              type: schemas
            - _id: DELETE_resource-resourceid-metadatajson
              type: endpoints
            - _id: pagination30
              type: traits
            - _id: metadataValue
              type: traits
          name: 'Custom Fields: Metadata'
          divider: false
        - name: 'Custom Fields: Metafields'
          items:
            - _id: metafields-intro
              type: docTextSections
            - type: endpoints
              _id: POST_resource-metafieldsjson
            - type: schemas
              _id: metafields/create-metafields-input
            - type: schemas
              _id: metafields/create-metafields-output
            - type: endpoints
              _id: GET_resource-metafieldsjson
            - type: schemas
              _id: metafields/list-metafields-output
            - type: endpoints
              _id: PUT_resource-metafieldsjson
            - type: schemas
              _id: metafields/update-metafields-input
            - type: schemas
              _id: metafields/update-metafields-output
            - type: endpoints
              _id: DELETE_resource-metafieldsjson
            - type: traits
              _id: metafieldsNameRequiredCurrentNameOptional
            - type: traits
              _id: metafieldsNameOptional
            - type: traits
              _id: metafieldsNameRequired
            - _id: metafieldResource
              type: traits
          divider: false
        - divider: false
          items:
            - _id: coupons-intro
              type: docTextSections
            - _id: POST_coupons-format
              type: endpoints
            - _id: coupons/create-coupon-input
              type: schemas
            - _id: coupons/create-coupon-output
              type: schemas
            - _id: GET_coupons-coupon_id-format
              type: endpoints
            - _id: GET_coupons-couponid-usagejson
              type: endpoints
            - _id: coupons/coupon-usage-output
              type: schemas
            - _id: GET_coupons-findjson
              type: endpoints
            - _id: GET_coupons-validate-format
              type: endpoints
            - _id: GET_coupons-format
              type: endpoints
            - _id: GET_productfamilies-productfamilyid-couponsjson
              type: endpoints
            - _id: coupons/list-coupons-for-a-site-output
              type: schemas
            - _id: PUT_coupons-coupon_id-format
              type: endpoints
            - _id: DELETE_coupons-coupon_id-format
              type: endpoints
          name: 'Coupons: Editing'
        - name: 'Coupons: Subcodes'
          items:
            - _id: coupon-subcodes-intro-1
              type: docTextSections
            - _id: POST_coupons-couponid-codesjson
              type: endpoints
            - _id: coupon/subcodes/create-a-coupon-subcode
              type: schemas
            - _id: coupons/subcodes/create-a-coupon-subcode-output
              type: schemas
            - _id: POST_coupons-coupon_id-codes-format
              type: endpoints
            - _id: GET_coupons-couponid-codesjson
              type: endpoints
            - _id: coupons/subcodes/retrieve-coupon-subcodes-output
              type: schemas
            - _id: PUT_coupons-coupon_id-codes-format
              type: endpoints
            - _id: DELETE_coupons-coupon_id-codes-subcode-format
              type: endpoints
          divider: false
        - name: Customers
          items:
            - _id: customers-intro
              type: docTextSections
            - _id: POST_customers-format
              type: endpoints
            - _id: customer/create-a-customer-input
              type: schemas
            - _id: customer/create-a-customer-output
              type: schemas
            - _id: GET_customers-id-format
              type: endpoints
            - _id: GET_customersjson
              type: endpoints
            - _id: customers/list-customers-for-a-site-output
              type: schemas
            - _id: GET_customers-lookupjson
              type: endpoints
            - _id: GET_customers-customer_id-subscriptions-format
              type: endpoints
            - _id: customers/list-customers-subscriptions-array-output
              type: schemas
            - _id: GET_customersjson
              type: endpoints
            - _id: customers/search-for-customer-output
              type: schemas
            - _id: PUT_customers-id-format
              type: endpoints
            - _id: DELETE_customers-id-format
              type: endpoints
            - _id: customer/customer-output
              type: schemas
            - _id: direction
              type: traits
            - _id: searchString
              type: traits
        - name: Events
          items:
            - _id: events-intro
              type: docTextSections
            - _id: list-events
              type: endpoints
            - _id: events/list-events-for-subscription
              type: schemas
            - _id: list-events
              type: endpoints
            - _id: events/list-site-event-output
              type: schemas
            - _id: GET_events_count-format
              type: endpoints
            - _id: event/counts
              type: schemas
            - type: traits
              _id: eventsFilters
            - _id: sinceId
              type: traits
          divider: false
        - name: Invoices
          items:
            - _id: invoices
              type: docTextSections
            - _id: GET_list-invoices-by-subscription
              type: endpoints
            - _id: invoices/list-all-invoices-query-response
              type: schemas
            - _id: GET_invoices-invoice_id-format
              type: endpoints
            - _id: invoices/read-the-invoice-by-id
              type: schemas
            - _id: GET_invoices-invoice_id-payments-format
              type: endpoints
            - _id: GET_invoices-invoice_id-charges-format
              type: endpoints
            - _id: invoice/list-charges-response
              type: schemas
            - type: traits
              _id: startdateEnddateQuery
            - type: traits
              _id: invoiceStatusQuery
            - _id: stateStatusQuery
              type: traits
            - _id: subscriptionIdQuery
              type: traits
        - name: 'Invoices: Payments'
          items:
            - _id: invoices-payments-intro
              type: docTextSections
            - type: endpoints
              _id: POST_invoices-invoiceid-paymentsjson
            - type: schemas
              _id: invoices/payments/create-payment-input
            - _id: invoices/payments/create-payment-output
              type: schemas
          divider: false
        - name: 'Invoices: Charges'
          items:
            - _id: invoices-charges-intro
              type: docTextSections
            - type: endpoints
              _id: POST_invoices-invoiceid-chargesjson
            - type: schemas
              _id: invoices/charges/create-invoice-charge-input
            - type: schemas
              _id: invoices/charges/create-invoice-charge-output
          divider: false
        - items:
            - _id: invoices-credits-intro
              type: docTextSections
            - type: endpoints
              _id: POST_invoices-invoiceid-adjustmentsjson
            - type: schemas
              _id: invoices/credits/create-invoice-credit-input
            - type: schemas
              _id: invoices/credits/create-invoice-credit-output
          name: 'Invoices: Credits'
          divider: false
        - divider: false
          items:
            - _id: invoice-new
              type: schemas
          name: Invoices (NEW)
          description: |-
            This section describes the API for the new, "Relationship Invoicing" style of invoices introduced in January 2018.

            If you are an existing customer from prior to January 2018 or have not otherwise explicitly opted into this new style of invoices, you are probably looking for the old "Invoices" section that describes Invoice-Billing legacy-style invoices.

            These new invoices provide a single representation of all of your Chargify billing, whether you collect automatically or via remittance.
        - name: Notes
          items:
            - _id: introduction-to-notes
              type: docTextSections
            - _id: POST_subscriptions-subscription_id-notes-format
              type: endpoints
            - _id: notes/create-note-input
              type: schemas
            - _id: notes/create-note-output
              type: schemas
            - _id: GET_subscriptions-subscriptionid-notes-noteidjson
              type: endpoints
            - _id: notes/read-show-specific-note-output
              type: schemas
            - _id: GET_subscriptions-subscription_id-notes-format
              type: endpoints
            - _id: notes/list-notes-output
              type: schemas
            - type: endpoints
              _id: PUT_subscriptions-subscription_id-notes-note_id-format
            - _id: notes/update-note-input
              type: schemas
            - _id: notes/update-note-output
              type: schemas
            - _id: DELETE_subscriptions-subscription_id-notes-note_id-format
              type: endpoints
            - _id: notes/delete-output
              type: schemas
          divider: false
          description: |-
            Notes allow you to record information about a particular Subscription in a free text format.

            If you have structured data such as birth date, color, etc., consider using Metadata instead.
        - name: Payments
          items:
            - _id: intro-to-payments
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-paymentsjson
              type: endpoints
            - _id: payments/create-payment-input
              type: schemas
            - _id: payments/create-payment-output
              type: schemas
          divider: false
        - name: Payment Profiles
          items:
            - type: docTextSections
              _id: intro-to-payment-profiles
            - _id: POST_payment_profiles-format
              type: endpoints
            - _id: payment-profiles/create-payment-profile-input
              type: schemas
            - _id: payment-profile/create-payment-profile-output
              type: schemas
            - _id: POST_subscriptions-subscriptionid-paymentprofiles-paymentprofileid-changepaymentprofilejson
              type: endpoints
            - _id: subscriptions/change-default-payment-profile-response
              type: schemas
            - _id: GET_payment_profiles-payment_profile_cc_id-format
              type: endpoints
            - _id: payment-profiles/read-payment-output-cc
              type: schemas
            - _id: GET_paymentprofiles-paymentprofileidjson
              type: endpoints
            - _id: payment-profile/read-payment-output-bank-account
              type: schemas
            - _id: PUT_payment_profiles-payment_profile_id-format
              type: endpoints
            - _id: payments/update-payment-profile
              type: schemas
            - _id: GET_payment_profiles-format
              type: endpoints
            - _id: payment-profiles/list-payment-profiles-for-a-site-outuput
              type: schemas
            - _id: DELETE_subscriptions-subscriptionid-paymentprofiles-paymentprofileidjson
              type: endpoints
            - _id: PUT_bank_accounts-verification
              type: endpoints
          divider: false
        - name: Products
          items:
            - _id: products-intro
              type: docTextSections
            - _id: POST_productfamilies-productfamilyid-productsjson
              type: endpoints
            - _id: products/create-a-product-input
              type: schemas
            - _id: products/create-a-product-output
              type: schemas
            - _id: GET_products-productidjson
              type: endpoints
            - _id: read-a-product-output
              type: schemas
            - _id: GET_products-format
              type: endpoints
            - _id: products/list-products-output
              type: schemas
            - _id: GET_products-handle-handle-format
              type: endpoints
            - _id: GET_products-id-format
              type: endpoints
            - _id: products/read-the-product-via-chargify-id
              type: schemas
            - _id: PUT_products-productidjson
              type: endpoints
            - _id: products/update-product-input
              type: schemas
            - _id: products/update-product-output
              type: schemas
            - _id: DELETE_products-productidjson
              type: endpoints
            - _id: archive-a-product-output
              type: schemas
        - name: Product Families
          items:
            - _id: product-family-intro
              type: docTextSections
            - _id: POST_product_families-product_family_id-products-format
              type: endpoints
            - _id: product-families/create-product-family-input
              type: schemas
            - _id: product-families/create-product-family-output
              type: schemas
            - _id: POST_product_families-id-format
              type: endpoints
            - _id: product-families/list-product-family-by-id
              type: schemas
          divider: false
        - divider: false
          items:
            - _id: reason-code-intro
              type: docTextSections
            - _id: POST_reasoncodesjson
              type: endpoints
            - _id: /reason_codes/create_code_request
              type: schemas
            - _id: reason_codes/create_code_response
              type: schemas
            - _id: GET_reasoncodesjson
              type: endpoints
            - _id: reason_code/list_response
              type: schemas
            - _id: GET_reasoncodes-reasoncodeidjson
              type: endpoints
            - _id: reason_code/show_response
              type: schemas
            - _id: PUT_reasoncodes-reasoncodeidjson
              type: endpoints
            - _id: reason_code/update_response
              type: schemas
            - _id: DELETE_reasoncodes-reasoncodeidjson
              type: endpoints
            - _id: reason_codes/delete_response
              type: schemas
          name: Reason Codes
          description: Reason Codes are the items that are presented when a user cancels their Chargify Subscription.   It allows you too get a granular view as to why a user is discontinuing your service or product.
        - name: Referral Codes
          items:
            - _id: referrals-intro
              type: docTextSections
            - _id: GET_referralcodes-validatejson
              type: endpoints
            - _id: referral/validate-response
              type: schemas
            - _id: referralCode
              type: traits
          divider: false
        - name: Refunds
          items:
            - _id: refunds-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-refundsjson
              type: endpoints
            - _id: refunds/create-a-refund-request
              type: schemas
            - _id: refunds/create-a-refund-response
              type: schemas
          divider: false
        - name: 'Refunds: External'
          items:
            - _id: external-refunds-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-refundsjson
              type: endpoints
            - _id: refunds/external/create-an-external-refund-request
              type: schemas
            - _id: refunds/external/create-an-external-refund-response
              type: schemas
          divider: false
        - name: Renewal Preview
          items:
            - _id: renewal-preview-intro
              type: docTextSections
            - type: endpoints
              _id: POST_subscriptions-subscriptionid-renewals-previewjson
            - _id: renewal-preview-output
              type: schemas
          divider: false
        - name: Sales Receipts
          items:
            - _id: sales-receipt-intro
              type: docTextSections
            - _id: GET_salesreceiptsjson
              type: endpoints
            - _id: sales-receipts/list-sales-receipts
              type: schemas
            - type: endpoints
              _id: GET_salesreceipts-idjson
            - _id: sales-receipts/get-a-sales-receipt-output
              type: schemas
          divider: false
        - name: Sites
          items:
            - _id: sites-intro
              type: docTextSections
            - _id: POST_sites-cleardatajson
              type: endpoints
            - _id: POST_sites-cleardatajson
              type: endpoints
            - _id: POST_sites-cleardatajson
              type: endpoints
        - name: Statements
          items:
            - _id: statements-intro
              type: docTextSections
            - _id: GET_subscriptions-subscription_id-statements-ids-format
              type: endpoints
            - _id: statements/list-statement-ids-for-a-subscription-response
              type: schemas
            - _id: GET_statements-ids-format
              type: endpoints
            - _id: statements/list-statement-ids-for-a-site-response
              type: schemas
            - _id: GET_subscriptions-subscriptionid-statementsjson
              type: endpoints
            - _id: statements/list-statements-for-a-subscription-response
              type: schemas
            - _id: GET_statementsjson
              type: endpoints
            - _id: statements/list-statements-for-a-site
              type: schemas
            - _id: GET_statements-statement_id-format
              type: endpoints
            - _id: statements/read-show-by-chargify-id
              type: schemas
            - _id: GET_statements_count-format
              type: endpoints
            - _id: statements/count-statements-response
              type: schemas
            - _id: perPage10000
              type: traits
            - _id: sort
              type: traits
            - _id: statementsList
              type: traits
            - _id: settledSinceUnix
              type: traits
        - name: Stats
          items:
            - _id: stats-intro
              type: docTextSections
            - _id: GET_stats-json
              type: endpoints
            - _id: stats/read-stats-output
              type: schemas
          divider: false
        - name: Subscriptions
          items:
            - _id: subscriptions-intro
              type: docTextSections
            - _id: subscription-output-attributes
              type: docTextSections
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: subscriptions/create-subscription-request
              type: schemas
            - _id: GET_subscriptions-subscription_id-format
              type: endpoints
            - _id: GET_subscriptionsjson
              type: endpoints
            - _id: subscriptions/list-subscriptions-output
              type: schemas
            - _id: GET_customers-customerid-subscriptionsjson
              type: endpoints
            - _id: 57LwHdN5jxjEFf3HH
              type: schemas
            - _id: subscription/read-subscription
              type: schemas
            - _id: PUT_subscriptions-subscriptionidjson
              type: endpoints
            - _id: update-subscription-request
              type: schemas
            - _id: PUT_subscriptions-subscription_id-format
              type: endpoints
            - _id: subscriptions/update-subscription-billing-day-change-request
              type: schemas
            - _id: PUT_subscriptions-subscription_id-format
              type: endpoints
            - _id: subscriptions/update-subscription-payment-method-request
              type: schemas
            - _id: Qijzy25gdrNxpdc8X
              type: endpoints
            - _id: PUT_subscriptions-subscription_id-reactivate-format
              type: endpoints
            - _id: PUT_subscriptions-subscription_id-retry-format
              type: endpoints
            - _id: PUT_subscriptions-subscription_id-reset_balance-xml
              type: endpoints
            - _id: DELETE_subscriptions-subscription_id-payment_profiles-payment_profile_id-format
              type: endpoints
            - _id: TskoMiCqu9fbjWLWx
              type: schemas
            - _id: 3GimKZpKHXBsvfTdx
              type: schemas
            - _id: 6uc29YJhRFimXJ5qE
              type: schemas
            - _id: subscriptionQueryString
              type: traits
        - divider: false
          items:
            - _id: POST_subscriptions-subscriptionid-delayedcanceljson
              type: endpoints
            - _id: DELETE_subscriptions-subscription_id-format
              type: endpoints
            - _id: subscriptions/cancel-subscription-request
              type: schemas
            - _id: DELETE_subscriptions-subscriptionid-delayedcanceljson
              type: endpoints
          name: 'Subscriptions: Cancellations'
        - name: 'Subscriptions: Charges'
          items:
            - _id: charges-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-chargesjson
              type: endpoints
            - _id: charges/create-a-charge-request-post
              type: schemas
            - _id: charges/create-a-charge-response-post
              type: schemas
          divider: false
        - items:
            - _id: coupon-intro
              type: docTextSections
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: coupon/create-subscription-with-coupon-input
              type: schemas
            - _id: coupon/create-subscription-with-coupon-output
              type: schemas
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: create-subscription-with-multiple-coupon-input
              type: schemas
            - _id: create-subscription-with-multiple-coupon-output
              type: schemas
            - _id: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
              type: endpoints
            - _id: coupon/add-the-coupon-to-subscription-output
              type: schemas
            - _id: coupon/add-the-coupon-newness
              type: schemas
            - _id: DELETE_subscriptions-subscription_id-remove_coupon-format
              type: endpoints
            - _id: POST_subscriptions-subscription_id-add_coupon-format?code=coupon_code
              type: endpoints
            - _id: add-multiple-coupons-to-existing-subscription-input
              type: schemas
            - _id: add-multiple-coupons-to-existing-subscription-output
              type: schemas
          name: 'Subscriptions: Coupons'
          divider: false
        - divider: false
          items:
            - _id: POST_subscriptions-subscriptionid-resumejson
              type: endpoints
            - _id: POST_subscriptions-subscriptionid-holdjson
              type: endpoints
            - _id: subscriptions/hold-subscription-request
              type: schemas
            - _id: PUT_subscriptions-subscriptionid-holdjson
              type: endpoints
            - _id: update-on-hold-subscriptions-input
              type: schemas
            - _id: update-on-hold-subscriptions-output
              type: schemas
          name: 'Subscriptions: Hold / Resume'
        - divider: false
          items:
            - _id: importing-subscriptions
              type: docTextSections
            - _id: POST_subscriptionsjson
              type: endpoints
            - _id: subscriptions/subscription-import-request
              type: schemas
            - _id: subscriptions/subscription-import-response
              type: schemas
          name: 'Subscriptions: Import'
        - name: 'Subscriptions: Preview'
          items:
            - _id: subscriptions-preview-intro
              type: docTextSections
            - _id: POST_subscriptions-preview-format
              type: endpoints
            - _id: subscriptions/subscription-preview-request
              type: schemas
            - _id: subscription-preview-response
              type: schemas
            - _id: POST_subscriptions-previewjson
              type: endpoints
            - _id: subscription-preview-price-point-id-request
              type: schemas
            - _id: subscription-preview-price-points-response
              type: schemas
          divider: false
        - name: 'Subscriptions: Product Changes / Migrations / Upgrades / Downgrades'
          items:
            - _id: migrations-intro
              type: docTextSections
            - _id: POST_subscriptions-subscriptionid-migrationsjson
              type: endpoints
            - _id: migrations/create-migration-input-trial-output
              type: schemas
            - _id: migrations/create-migration-input-trial
              type: schemas
            - _id: migrations/preview-migration-input
              type: schemas
            - _id: POST_subscriptions-subscriptionid-migrations-previewjson
              type: endpoints
            - _id: migrations/preview-migration-output
              type: schemas
            - _id: PUT_subscriptions-subscription_id-format
              type: endpoints
            - _id: subscriptions/update-subscription-product-change-request
              type: schemas
            - _id: PUT_subscriptions-subscription_id-format
              type: endpoints
            - _id: update-subscription-delayed-product-change-request
              type: schemas
            - _id: PUT_subscriptions-subscription_id-format
              type: endpoints
            - _id: update-subscription-cancel-delayed-product-change-request
              type: schemas
            - _id: POST_subscriptions-subscriptionid-migrationsjson
              type: endpoints
            - _id: migrations/create-migration-input
              type: schemas
            - _id: migrations/create-migration-output
              type: schemas
          divider: false
        - name: 'Subscriptions: Override'
          items:
            - _id: subscriptions-override-intro
              type: docTextSections
            - _id: PUT_subscriptions-subscription_id-override-format
              type: endpoints
            - _id: subscriptions/subscription-override-request
              type: schemas
          divider: false
        - name: Transactions
          items:
            - _id: transactions-api
              type: docTextSections
            - _id: GET_transactions-format
              type: endpoints
            - _id: GET_transaction_id-format
              type: endpoints
            - _id: transactions/transaction-response
              type: schemas
            - _id: GET_subscriptions-subscription_id-transactions-format
              type: endpoints
            - _id: GET_transactions_count-format
              type: endpoints
            - _id: count-transactions
              type: schemas
            - _id: txnKinds
              type: traits
            - _id: txnSinceId
              type: traits
            - _id: txnMaxId
              type: traits
            - _id: txnSinceDate
              type: traits
            - _id: txnUntilDate
              type: traits
            - _id: txnDirection
              type: traits
            - _id: txnOrderBy
              type: traits
        - name: Webhooks
          items:
            - _id: webhooks-intro
              type: docTextSections
            - _id: GET_webhooks-format
              type: endpoints
            - _id: webhooks/list-webhook-output
              type: schemas
            - _id: POST_webhooks-replay-format
              type: endpoints
            - _id: webhooks/replay-webhooks-site
              type: schemas
  functions: {}
  textSections:
    introduction:
      id: introduction
      name: Introduction
      content: |-
        <head>
        <title>Chargify API Basics - Introduction</title>
        <meta name="description" content="An introduction to using the API to successfully integrate with Chargify. Using the Chargify API you interact with resources such as Subscriptions.">
        <meta http-equiv="content-type" content="text/html;charset=UTF-8">
        </head>

        ## API Integration

        Chargify can be integrated with many environments and programming languages via our REST API. Some of our users have contributed their API Wrappers in various programming languages. Check out the [API Code Overview](https://developer.chargify.com/content/ecosystem/api-code-samples.html) doc for an introduction to the wrappers and available code samples.

        ## Developer Portal

        We've created a developer-focused portal to give your organization a clear and quick overview of how to integrate with Chargify. 

        The developer portal focuses on a scenarios for integration, plus flow of events. We recommend familiarizing yourself with all of the content in the developer portal, as it's a great compliment to our API documentation.

        Here's a sampling of what's available in the developer portal:

        + [Geting Started Guide for Integrators:](https://developer.chargify.com/content/getting-started/authentication.html) Authentication, Guidelines, Sites/Subdomains
        + [API Basics:](https://developer.chargify.com/content/basics/signups.html) Signups, Components, Syncing
        + [Chargify Ecosystem:](https://developer.chargify.com/content/ecosystem/ecosystem.html) Code samples, Signup methods

        ## Chargify Direct

        Our [Chargify Direct documentation](https://developer.chargify.com/content/chargify-direct/chargify-direct.html) can be found under the developer portal. 

        Here you'll find an introduction to how Chargify Direct operates within Chargify. Additionally, we cover some example implementations, as well as troubleshooting.

        ## Testing Guide

        Chargify has compiled a [testing guide](https://help.chargify.com/testing/testing-intro.html) that covers a list of important factors to consider while in the testing phase. Here's a high-level overiew of what's covered in our testing guide:

        + Test credit card basics
        + Test site limits
        + Live mode versus test mode

        We strongly suggest reading over the testing guide, as well as the entire set of application-based documentation to aid in your discovery of the product.

        ## Engage Support

        We always enjoy (and appreciate) hearing about larger integrations ahead of time. If you’re planning on importing a large amount of data into Chargify via our API, we suggest sending a “heads up” to “support@chargify.com” so we can coordinate with you to ensure your import process goes smoothly.

        Our API, while considered stable, is continually being improved and polished. Please feel free to contact support if you experience issues when integrating with the Chargify API.

        ## Support Access

        Access to our Technical Specialist team for API support is currently limited to purchasers of our larger Chargify support plans. 

        But don’t worry! There are quite a few options to help you get the answers you need:

        [Read through our helpful API documentation](http://developer.chargify.com)

        [Watch our videos and tutorials](https://chargify.com/tutorials)

        [Check out the Chargify tag on Stack Overflow](http://stackoverflow.com/questions/tagged/chargify)

        ## Available Consultants

        Check out the list of [Chargify Consultants](http://chargify.com/consultants) if you require deeper technical expertise for your integration.

        ## How to upgrade your plan

        Upgrade to the Basic Plan: 

        + Log into Chargify and click “Home”
        + “Billing & Plans” → “Change”
      public: true
    guidelines:
      id: guidelines
      name: Guidelines
      content: |-
        ## API Guidelines

        Our many merchants all use our API for different purposes. API access is included on all plans at no charge because we believe that you are the owner of your data and you should never feel like your data is ‘locked up’.

        However, because the API means there is little or no user-interaction, it can be very easy to create a program or routine that causes an unnecessarily high burden on our system. Even small accounts can generate huge numbers of expensive API requests by accident.

        In order to maintain a high quality of service for everyone, we ask that you be cautious when implementing your API integration to avoid run-away usage that is disproportionate to the size of your account.

        ## Best Practices

        Here are some tips and best-practices to help keep both your site and ours running smoothly.

        ## Getting Subscription States

        You likely want to check if your customer has an active account, has cancelled, or is behind on his/her payments. The best approach is to keep a local cached copy of the subscription’s state in your own database. You can use [Webhooks](#docTextSection:JYqoZ6JmsZn6gcdYk) to keep up-to-date in near real-time on any changes that occur. This keeps your website up, reduces your coupling to Chargify, and ensures both sites remain as fast as possible.

        Avoid querying Chargify in-line as part of a customer’s request to your site. Doing so could result in:

        + Slowing down your own site while the customer waits for a check to Chargify on every request.
        + If there is a network connectivity issue or in the unlikely event that Chargify is down, your site will also break.
        + As you grow and your customers are more active, you will use up huge numbers of API requests that could result in being blocked because of our automatic abuse prevention.

        ## Synchronizing Your Database

        Normally you should keep your local customer database in sync by using [Webhooks](#docTextSection:JYqoZ6JmsZn6gcdYk). But if you think your database has become out of sync with Chargify, then using the API to check the state of all subscriptions may be the only way to ensure consistency.

        It’s perfectly okay to do this as needed. But it should generally only be relied upon in exceptional circumstances or for periodic reconciliation (usually no more than once a month).

        ## Reporting Usage

        When reporting component usage, avoid sending lots of tiny usage amounts. If you charge by the minute for phone calls, for instance:

        + **Don’t** send in a usage for every minute or every phone call individually.
        + **Don’t** send all usage for all customers all at once. Spread it out or wait a short period of time between each request

        Instead:

        + **Do** send a usage report once a day with how much a customer used for the whole day.

        ## Downloading Bulk Data

        Periodically exporting transaction, subscription, or customer data is a common use case. When possible, we recommend using the built-in [Export](https://help.chargify.com/reports/exporting-data.html) functions inside Chargify to generate reports and download the data. This can often be much faster and can significantly lower your API usage.

        ## About Limits & Blocks

        When doing a large synchronization or retrieving a large amount of data, you may trigger a security failsafe used to prevent abuse and protect our site from attacks.

        We don’t want to block small bursts in usage. So instead of immediately rejecting your requests, we will slow and throttle them. If you see your responses coming in slower, do not parallelize your requests or try to make more concurrent requests to speed things up. You’ll only have to wait longer for your requests to get through.

        If you have too many slowed requests, or your individual account queue gets too full with too many concurrent requests, you’ll likely receive an HTTP “429 Too Many Requests” response code with a message: 

          `Your request was denied due to a usage violation. You can track this request with support by referencing …` 

        with a reference code. Please feel free to [contact support](https://chargify.zendesk.com/hc/en-us/requests/new) so we can help describe what happened and why the request was blocked.

        If you receive a “429 Too Many Requests” response, your code should be prepared to handle it by pausing its queries, waiting a few minutes, and then proceeding slower (or with less concurrency).
      public: false
    authentication:
      id: authentication
      name: Authentication
      content: |-
        The API Authentication is implemented as HTTP Basic Authentication over TLS (HTTPS). Your API login credentials are not the same as the credentials you use to log in to the web interface. You must obtain your API credentials separately.

        **Notice**: As of January 2016, you must use TLS >= 1.2 in order to connect to the API. See the TLS [Upgrade Notice](http://help.chargify.com/announcements/tls-upgrade-notice.html) for more information.

        ### Obtaining Your API Credentials

        Your API key can be generated from the “Integrations” tab of your seller dashboard.

        Please see [here](http://help.chargify.com/integrations/api-keys-chargify-direct.html) for more information on obtaining API keys,

        ### Authenticating with your API Credentials

        You will use HTTP Basic Authentication to verify your identity via the API. All requests must come over TLS`/`HTTPS, and be to the subdomain of the Site you wish to access.

        **For example, if your Site’s subdomain is "acme", then you would access the Customer resource at:**
            `https://acme.chargify.com/customers.json`

        **An example using authentication via cURL:**
            `curl -u api-key:x https://subdomain.chargify.com/customers.xml`

        **or**
            `curl -i https://<api-key>:x@subdomain.chargify.com/customers.xml`

        ### Troubleshooting: Unable to Connect

        If you are unable to connect, the problem is often that you are using an old/unsupported version of SSL or TLS.
        In this case, Chargify will simply drop the connection, and the error message you receive may be cryptic.

        Here are some common error messages that have been reported:

        + The underlying connection was closed: An unexpected error occurred on a send.
        + `Authentication failed because the remote party has closed the transport stream.`

        Please, review the information on the [Upgrade Notice](http://help.chargify.com/announcements/tls-upgrade-notice.html) in order to correct the problem.
      public: false
    introduction-to-notes:
      id: introduction-to-notes
      name: Notes Intro
      content: |-
        ## Notes Intro

        Notes allow you to record information about a particular Subscription in a free text format.

        If you have structured data such as birth date, color, etc., consider using [Metadata instead.](#docTextSection:qYKmxZmb5oEKsvCLk)

        ## Notes Documentation

        Full documentation on how to use Notes in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/subscription-summary.html#notes).

        ## Notes Output Attributes

        The following fields are returned from GET (read) operations:

        | id              | The note’s unique id                                                  |
        |-----------------|-----------------------------------------------------------------------|
        | body            | The main text content of the note                                     |
        | subscription_id | The id of the related subscription                                    |
        | sticky          | (boolean) Whether or not it is pinned to the top of the list of notes |
        | created_at      | Date and time the note was created                                    |
        | updated_at      | Last update timestamp                                                 |
      public: true
    duplicate-prevention:
      id: duplicate-prevention
      name: Duplicate Prevention
      content: |-
        When making API requests, it is possible to receive an error even though your request actually completed successfully.

        For example, if you submit an API request and it times out, you can’t be sure whether your request was received by Chargify, or not.

        If you simply re-try the request, you _might_ end up with a duplicate transaction.

        ## Uniqueness Token

        In order to prevent these duplicates, Chargify allows you to supply a `uniqueness_token` parameter in any POST or PUT request.

        The value you supply for the `uniqueness_token` should be long and random, like a UUID. The exact format of the value is up to you.

        If a subsequent request with the same uniqueness_token is received within 60 minutes, it will be rejected with a `409 Conflict` response code and a duplicate error message.

        ## Example

        For example, suppose you are making an adjustment on a subscription. Using curl, you send the following POST request, including a `uniqueness_token`.

        ```json
        curl --verbose -u $CHARGIFY_API_KEY:x -H Accept:application/json -H Content-Type:application/json -X POST \
        -d @adjustment.json https://$CHARGIFY_SUBDOMAIN.chargify.com/subscriptions/$SUBSCRIPTION_ID/adjustments.json

        adjustment.json:
            {"adjustment":
                {
                  "amount": "-12.43",
                  "memo": "Credit for outage on 1/31"
                },
                "uniqueness_token": "2731FB23-98AD-4489-BAF6-7D5CE916F766"
            }
        ```

        After you send your request, there is some problem, and the request times out without a valid response instead of the `201 Created` you were hoping for.

        Since you have supplied a `uniqueness_token`, you can safely re-try the request.

        If you receive the expected `201 Created` (or `422 Unprocessable Entity`) response, you can continue as usual knowing that Chargify never received your first request.

        If you receive a `409 Conflict` and a duplicate error message for the re-try, then you know that the first request was received and processed.

        Example 409 Conflict response:

        ```
            < Status: 409 Conflict
            {"errors":["DuplicatePrevention::DuplicateSubmissionError"]}
            
        ```
        Unfortunately, it is not possible to know what the outcome of the first request was, so you cannot automatically assume it was successful.

        Depending on what type of request you were making, it might be possible to gracefully recover by recording some information about the original request, listening for webhooks, and matching up the webhook payload to find out whether the request succeeded or not.

        In other cases, human intervention will be necessary.

        ## Summary

        We hope this feature will help you prevent duplicate transactions during error handling.

        That said, if you are experiencing repeated timeouts, please [open a support ticket](mailto:support@chargify.com) so we can investigate.
      public: false
    transactions-api:
      id: transactions-api
      name: Transactions Intro
      content: |-
        ## Transactions Intro

        The Transactions API allows you to view a list of all transactions both for a site and for an individual subscription.

        ## Transactions Documentation

        Documentation in relation to transactions is broken up into two major sections within Chargify:

        + [Recorded Transactions](http://help.chargify.com/subscriptions/subscription-summary.html#transactions)
        + [Transactions Export](http://help.chargify.com/reports/exporting-data.html#transactions-line-item-export)

        ## Transaction Types

        | Type / Transaction Type | Description                                                                                                                                                                                                                                                | Effect on Subscriber Balance Due   | Effect on “Revenue” (money collected) |
        |-------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------|---------------------------------------|
        | charge                  | A positive amount assessed to a subscription for an item (i.e. a Product or Component) sale. Usually assessed at signup or renewal time.                                                                                                                   | Increases balance due              | No effect on revenue                  |
        | credit                  | A negative amount assessed to a subscription that indicates a “return” or “credit” for an item (i.e. a Product or Component). Usually offsets an earlier charge, i.e. in the case of a prorated downgrade.                                                 | Decreases balance due              | No effect on revenue                  |
        | adjustment              | A postive or negative amount that adjusts the subscription balance but cannot usually be directly attributed to a single item (Product or Component)                                                                                                       | Increases or decreases balance due | No effect on revenue                  |
        | payment                 | A postive amount that denotes amount paid to you by the subscriber, usually on their credit card or bank account via your payment gateway. Payments may also be recorded “manually” in the case of checks received, or money received outside of Chargify. | Decreases balance due              | Increases revenue                     |
        | refund                  | A positive amount that denotes “cash” given back to a subscriber (i.e. put back on their card) via a refund or credit at the gateway.                                                                                                                      | No effect on balance due           | Decreases revenue                     |
        | InfoTransaction / info  | An informational transaction whose description provides context for transactions nearby in time, or serves as a placeholder for another transaction that could not be attempted (i.e. when payment cannot be attempted because no card is on file)         | N/A                                | N/A                                   |
        | payment_authorization   | Deprecated. No longer appears in transactions listing                                                                                                                                                                                                      | N/A                                | N/A                                   |

        ## Transaction Kinds (Subtypes)

        #### Kinds for the ```charge``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                                                                                  |
        |-------------------------|--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | charge                  | trial                    | A charge for a subscription’s trial period. Usually applied at the time of signup, but sometimes after a migration where a trial is allowed.                                                 |
        | charge                  | initial                  | A charge for the initial/setup fee assessed according to the product setup settings. Usually applied at the time of signup, but sometimes after a migration where the setup fee is included. |
        | charge                  | baseline                 | A charge for the normal, recurring fee.                                                                                                                                                      |
        | charge                  | one_time                 | A one-time fee applied to a subscription, usually between normal renewals. Can be added in the Chargify UI or the API, and is captured (via credit card payment) immediately.                |
        | charge                  | delay_capture            | Like a one_time charge, but not captured (i.e. not paid) until the next normal renewal. Sometimes called an “accrued charge”.                                                                |
        | charge                  | quantity_based_component | A charge for the currently allocated quantity of a quantity-based component (i.e. seat licenses). Applied at renewal based on the quantity allocated at that time.                           |
        | charge                  | on_off_component         | A charge for the current status (on or off) of an on/off component. Applied at renewal.                                                                                                      |
        | charge                  | metered_component        | A charge for the usage of a metered component (i.e. minutes). Applied at renewal based on the usage during the last period.                                                                  |
        | charge                  | metered                  | Deprecated. May exist for very old transasctions. Can be considered an alias for “metered_component”.                                                                                        |
        | charge                  | tax                      | A charge for the taxes computed on taxable line items for the billing event (signup or renewal).                                                                                             |
        | charge                  |                          | A generic charge that is not otherwise classified by any of the above values for `kind`.                                                                                                     |

        ### Kinds for the ```credit``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                         |
        |-------------------------|--------------------------|-------------------------------------------------------------------------------------------------------------------------------------|
        | credit                  | quantity_based_component | A credit against a quantity-based component charge. Usually generated during a prorated downgrade for an amount previously charged. |
        | credit                  | on_off_component         | A credit against an on/off component charge. Usually generated during a prorated downgrade for an amount previously charged.        |
        | credit                  | tax                      | A credit against tax charges. Usually generated during a prorated downgrade to offset a tax amount already assessed.                |
        | credit                  |                          | A generic credit that is not otherwise classified by any of the above values for `kind`.                                            |
        ### Kinds for the ```adjustment``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                                                                                         |
        |-------------------------|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | adjustment              | coupon                  | An adjustment that reflects the discount provided by a coupon. Is almost always a negative amount.                                                                                                  |
        | adjustment              | prorated                 | An adjustment applied during a migration proration that offsets overpayments resulting from the shortened period on the old product. Followed by the assessment of new charges for the new product. |
        | adjustment              | quantity_based_component | Deprecated. Like a quantity_based_component credit in function but no longer used (since credits can be taxable but adjustments cannot).                                                            |
        | adjustment              | on_off_component         | Deprecated. Like an on_off_component credit in function but no longer used (since credits can be taxable but adjustments cannot).                                                                   |
        | adjustment              | tax                      | Deprecated. Like a tax credit in function but no longer used.                                                                                                                                       |
        | adjustment              | referral                 | An adjustment that acts like a coupon but is the discount applied to the referring subscriber in a Refer-A-Friend scenario.                                                                         |
        | adjustment              |                          | A generic adjustment that is not otherwise classified by any of the above values for `kind`. This is the kind of ad-hoc adjustment that can be created via the API.                                 |

        ### Kinds for the ```payment``` transaction type

        | Type / Transaction Type | Kind                | Description                                                                                                                                                |
        |-------------------------|---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | payment                 | one_time            | A payment received for a mid-period one-time charge (i.e. for a charge with kind one_time).                                                                |
        | payment                 | component_proration | A payment received for a mid-period component proration (allocation change).                                                                               |
        | payment                 | manual              | A payment recorded “manually” via the Admin UI or API. This kind of payment was not one automatically processed by Chargify, but instead entered manually. |
        | payment                 |                     | A generic payment received in any sitation not described above. Usually an automatically captured payment for a normal signup or renewal.                  |

        ### Kinds for the ```refund``` transaction type

        | Type / Transaction Type | Kind   | Description                                                                                                                                                                               |
        |-------------------------|--------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | refund                  | manual | A refund recorded “manually” via the Admin UI or API to reflect a refund already given outside of Chargify. Chargify does not actually submit this kind of refund to the payment gateway. |
        | refund                  |        | A generic refund resulting from any sitation not described above. This kind of refund is submitted by Chargify to the payment gateway to return money to the subscriber.                  |


        ## Transaction Attributes

        All of the transaction attribute fields are returned from GET (read) operations, and all are read only.

        | transaction_type / type   | The type of the transaction, see above                                                                                                                                                                                                                                                        |
        |---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | id                        | The unique identifier for the Transaction                                                                                                                                                                                                                                                     |
        | amount_in_cents           | The amount in cents of the Transaction                                                                                                                                                                                                                                                        |
        | created_at                | Timestamp indicating when the Transaction was created                                                                                                                                                                                                                                         |
        | starting_balance_in_cents | The initial balance on the subscription before the Transaction has been processed                                                                                                                                                                                                             |
        | ending_balance_in_cents   | The remaining balance on the subscription after the Transaction has been processed                                                                                                                                                                                                            |
        | memo                      | A note about the Transaction                                                                                                                                                                                                                                                                  |
        | subscription_id           | The unique identifier for the associated Subscription                                                                                                                                                                                                                                         |
        | product_id                | The unique identifier for the product associated`: with the Subscription                                                                                                                                                                                                                      |
        | success                   | Whether or not the Transaction was successful                                                                                                                                                                                                                                                 |
        | payment_id                | The unique identifier for the payment being explicitly refunded (in whole or in part) by this transaction. Will be null for all transaction types except for “Refund”. May be null even for Refunds. For partial refunds, more than one Refund transaction may reference the same payment_id. |
        | kind                      | The specific “subtype” for the transaction_type                                                                                                                                                                                                                                               |
        | gateway_transaction_id    | The transaction ID from the remote gateway (i.e. Authorize.Net), if one exists                                                                                                                                                                                                                |
        | gateway_order_id          | A gateway-specific identifier for the transaction, separate from the `gateway_transaction_id`                                                                                                                                                                                                 |
        | component_id              | ID of the component, only available in the `charge`                                                                                                                                                                                                                                           |
        | customer_id               | The ID of the customer                                                                                                                                                                                                                                                                        |
        | item_name                 | The name of the product or component                                                                                                                                                                                                                                                          |
        | parent_id                 | (Experimental, only for Payments) Some payments modify earlier payments, such as when a payment from one subscription is "split" and applied to other subscriptions in Invoice Consolidation. In those cases, this field identifies the original Payment from which this one derived. |
        | role                 | (Experimental, only for Payments) Payments may be marked with a role to define the context in which they were applied.  Valid values are currently reserved for invoicing and consolidated invoicing: `invoice_payment`, `consolidated_invoice_payment`, `invoice_segment_payment`, `payment_split` |
        | **Gateway**               | **Value in gateway_order_id**                                                                                                                                                                                                                                                                 |
        | BPoint                    | “ReceiptNumber” from the transaction response                                                                                                                                                                                                                                                 |
        | All other gateways        | Undefined at this time                                                                                                                                                                                                                                                                        |
      public: true
    stats-intro:
      id: stats-intro
      name: Stats Intro
      content: |-
        ## Stats Intro

        The Stats API is a very basic view of some Site-level stats. This API call only answers with JSON responses. An XML version is not provided.

        ## Stats Documentation

        There currently is not a complimentary matching set of documentation that compliments this endpoint. However, each Site's dashboard will reflect the summary of information provided in the Stats reposnse. 

        ```
        https://subdomain.chargify.com/dashboard
        ```
      public: true
    sites-intro:
      id: sites-intro
      name: Sites Intro
      content: |-
        ## Sites Intro

        The “Clear Sites” API is method of allowing merchants to clear customers and subscriptions or all data from a site in TEST mode only.

        ## Sites Documentation

        Full documentation on Sites in the Chargify UI can be located [here](http://help.chargify.com/sites/sites-intro.html).

        Specifically, the [Clearing Site Data](http://help.chargify.com/sites/clearing-site-data.html) section is extremely relevant to this endpoint documentation.

        ## Test Mode Limitations

        **This functionality will only work on sites in TEST mode. Attempts to perform this on sites in “live” mode will result in a response of 403 FORBIDDEN.**

        ## Query String Attributes

        The Chargify API allows you initiate an upgrade/downgrade by posting to either as JSON or XML that potentially includes:

        + `cleanup_scope`: Optional, all or customers, the scope of cleanup of the site to be performed. Default is all.

        ## Cleanup Scope Values

        | Cleanup Scope value | Description                                                                                                                         |
        |---------------------|-------------------------------------------------------------------------------------------------------------------------------------|
        | ```all```           | Will clear all products, customers, and related subscriptions from the site.                                                        |
        | ```customers```     | Will clear only customers and related subscriptions (leaving the,products untouched) for the site. Revenue will also be reset to 0. |

        ## 403 Response Example

        Method: POST

        In this example, attempting to specify a cleanup_scope that isn’t all or customers will result in a “403 FORBIDDEN”.

        ```
        https://<subdomain>.chargify.com/sites/clear_data.json?cleanup_scope=bogus
        ```

        Required Parameter: cleanup_scope

        `Response: 403 FORBIDDEN`

        Result: No change will have been made to the site.
      public: true
    renewal-preview-intro:
      id: renewal-preview-intro
      name: Renewal Preview Intro
      content: |-
        ## Renewal Preview Intro

        Renewal Preview is an object representing a subscription’s next assessment. You can retrieve it to see a snapshot of how much your customer will be charged on their next renewal. 

        ## Inclusion of Components

        This endpoint is particularly useful due to the fact that it will return the amount in cents of the products and the components which have been purchased by a subscriber.

        ## Subscription Side Effects

        You can request a `POST` to obtain this data from the endpoint without any side effects. Plain and simple, this will preview data, not log any changes against a subscription.

        ## Renewal Preview Documentation

        The "Next Billing" amount and "Next Billing" date are represented in each Subscriber's Summary. For more information, please see our documentation  [here](http://help.chargify.com/subscriptions/subscription-summary.html#next-billing).
      public: true
    api-code-samples-and-libraries-1:
      id: api-code-samples-and-libraries-1
      name: API Code Samples & Libraries
      content: |-
        The following sample code has been contributed by our community of developers to help you get started with Chargify faster. The code they’ve given back to everyone represents a lot of time & work that you can benefit from as you implement Chargify with your app!

        If you have usage examples or code libraries in other languages, please let us know.

        Please note that these samples were graciously given to us by our users, so we don’t offer official support for them. Of course, we help where we can, but our internal knowledge is Ruby. Most of the people who made the code are happy to help, and some of them can easily be reached on Twitter.

        ## PHP

        + <https://github.com/chargely/chargify-sample-app>: Sample PHP app based on Zend Framework, from the makers of Chargely
        + <https://github.com/chargely/chargify-sdk-php>: A PHP API wrapper, from the makers of Chargely
        + <http://github.com/abraham/chargify>: Sample PHP app by Abraham Williams. <http://abrah.am>:, [@abraham](https://twitter.com/abraham)
        + <http://github.com/jforrest/Chargify-PHP-Client>: A PHP API wrapper from Jason at RigBooks
        + <http://github.com/lewsid/chargify_api_php>: A PHP API wrapper by one of our active beta testers.
        + <https://github.com/ChargeIgniter/ChargeIgniter>: CodeIgniter PHP code by Kyle Anderson
        + <https://github.com/litwicki/chargify-bundle>: API v1 and v2 integration for Symfony/Laravel apps by Jake Litwicki, [@jakelitwicki](https://twitter.com/jakelitwicki)

        ## Ruby/Rails

        + <http://github.com/chargify/chargify_api_ares>: This is the “official” gem by the Chargify team. It uses ActiveResource, which is built into Rails, and is a good option for easy integration.

        + <http://github.com/pengwynn/chargify>: This is a Chargify gem that uses HTTParty. It was created by @pengwynn, who is one of our active beta testers. It has tests by using a Chargify “mock”.

        + <http://github.com/jsmestad/chargify>: This is a Chargify gem by @jsmestad, another of our active users.

        ## Python / Django

        + <http://github.com/gdoermann/django-chargify>: A Django wrapper for Chargify by [@gdoermann](https://twitter.com/gdoermann)
        + <http://github.com/getyouridx/pychargify>: A Python API wrapper by one of our active beta testers.
        + <http://github.com/hindsightlabs/chargify-python>: A simple Python API wrapper.

        ## .Net

        + <http://chargify.codeplex.com>: A .Net API wrapper and complete sample app by one of our active beta testers (Kori Francis, [@djbyter](https://twitter.com/djbyter))

        ## ColdFusion

        + <https://github.com/GenuineParts/Chargify-Coldfusion-Component>: A simple ColdFusion cfc by Jordan Sitkin ([@specifyApp](https://twitter.com/specifyApp)). He says (as of Aug 23, 2010): “At the moment it only includes the basic functionality of the Customers and Subscriptions parts of the API, but can easily be extended to handle the rest.”

        ## Java / Scala

        + <https://github.com/craigwblake/chargify-scala>: A Scala API wrapper by one of our active beta testers.

        ## JavaScript

        + <https://github.com/natevw/node-chargify>: A simple node.js wrapper for the Chargify REST API, by (Nathan Vander Wilt, [@natevw](https://twitter.com/natevw))
      public: false
    adjustment-intro:
      id: adjustment-intro
      name: Adjustments Intro
      content: |-
        ## Adjustments Intro

        Adjustments allow you to change the current balance of a subscription. Adjustments with positive amounts make the balance go up, Adjustments with negative amounts make the balance go down (like Credits).

        ## Adjustments Documentation 

        Full documentation on how to record Adjustments in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/adjustments.html).

        This documentation is focused on how adjustments operate within the Chargify UI. It goes into greater detail on how the user interface will react when applying adjustments.

        ## Ajustment Input Attributes

        In order to create an adjustment, you must pass an amount and an optional memo. The amount can be specified by either the `amount` parameter or the `amount_in_cents` parameter. The amount can be specified as a positive or a negative number. Optionally, an `adjustment_method` parameter can be specified.

        | amount            | (either `amount` or `amount_in_cents` is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as `10.00` and -$10.00 would be represented as `-10.00`.                                                                                                                                                                           |
        |-------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | amount_in_cents   | (either `amount` or `amount_in_cents` is required) If you use this parameter, you should pass the amount represented as a number of cents, either as a string or integer. For example, $10.00 would be represented as `1000` and -$10.00 would be represented as `-1000`. If you pass a value for both `amount` and `amount_in_cents`, the value in `amount_in_cents` will be used and `amount` will be discarded. |
        | memo              | A helpful explanation for the adjustment. This amount will remind you and your customer for the reason for the assessment of the adjustment.                                                                                                                                                                                                                                                                   |
        | adjustment_method | (Optional) A string that toggles how the adjustment should be applied. If target is passed for this param, the adjustment will automatically set the subscription’s balance to the amount. If left blank, the amount will be added to the current balance.                                                                                                                                                     |

        ## Adjustment Output Attributes

        When an adjustment is successfully created, a representation of the newly created adjustment will be returned to you as JSON or XML in the message body, with the following attributes:

        | success         | Either true or false, depending on the success of the adjustment. (Note: At this time, all adjustments that are returned will return true here. false may be returned in the future when more options are added to the adjustment creation API) |
        |-----------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount of the adjustment, represented in cents.                                                                                                                                                                                             |
        | memo            | The memo for the created adjustment.                                                                                                                                                                                                            |

        ## Response Codes

        A response code is returned in the standard HTTP response to your API request.

        | 201                      | Created is returned for the successfully created adjustment.                    |
        |--------------------------|---------------------------------------------------------------------------------|
        | 422 Unprocessable Entity | Returned when the adjustment could not be created (see below section on errors) |
        | 404 Not Found            | Returned if the referenced subscription could not be found.                     |

        ## Errors

        Errors are returned either as an array of error explanation strings and formatted as either an XML or JSON array, depending on your Accept headers. The listing of currently possible error messages is listed below:

        + Memo: cannot be blank.
        + Amount: is not a number.
        + Amount: must be greater than or equal to 0.
        + This subscription is not eligible to accept adjustments.
        + [Gateway response if a gateway fail] ([Your original memo])
      public: true
    allocations-intro:
      id: allocations-intro
      name: Allocations Intro
      content: |-
        ## Allocations Intro

        Allocations describe a change to the allocated quantity for a particular Component (either Quantity-Based or On/Off) for a particular Subscription.

        Working with this resource, you can:

        + [List Allocations](#endpoint:zaqiBGkGM6nbLjxB3) : View the history of the allocated quantity for the component over time
        + [Create an Allocation](#endpoint:3stsG5oibfdivng9j) : Set a new allocated quantity for the line-item (as an alternative to setting the allocated quantity directly on the Component Line-Item resource)
        + [Create multiple Allocations](#endpoint:JfQwagtttbwDcsh9Q): Change the allocated quantity of multiple components at once

        ## Allocations Documentation

        Full documentation on how to record Allocations in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/setting-component-allocations.html). 

        This documentation is focused on how allocations operate within the Chargify UI. It goes into greater detail on how the user interface will react when recording allocations.

        This documentation also goes into greater detail on how proration is taken into consideration when applying component allocations.


        ## Proration Schemes

        Changing the allocated quantity of a component mid-period can result in either a prorated charge or adjustment being applied to the subscription. When creating an allocation via the API, you can pass the `proration_upgrade_scheme` and the `proration_downgrade_scheme` to be applied.

        For background information on prorated components and upgrade/downgrade schemes, see: API: [Setting Component Allocations.](https://help.chargify.com/subscriptions/setting-component-allocations.html)

        The available `proration_upgrade_scheme` schemes are:

        | Proration Scheme             | Definition                                                                                                                                                                      |
        |------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | `prorate-delay-capture`      | A charge is added for the prorated amount due, but the card is not charged until the subscription’s next renewal                                                                |
        | `prorate-attempt-capture`    | A charge is added and we attempt to charge the credit card on file. If,it fails, the charge will be accrued until the next renewal.                                             |
        | `full-price-delay-capture`   | A charge is added for the full price of the component change, but the card is not charged until the subscription’s next renewal.                                                |
        | `full-price-attempt-capture` | A charge is added for the full price of the component change, and we,attempt to charge the credit card on file. If it fails, the charge will,be accrued until the next renewal. |
        | `no-prorate`                 | No proration is applied.                                                                                                                                                                     |

        **NOTE: Proration uses the current price of the component as well as the current tax rates. Changes to either may cause the prorated charge/credit to be wrong.**
      public: false
    billing-portal-intro:
      id: billing-portal-intro
      name: Billing Portal Intro
      content: |-
        ## Billing Portal Intro

        If your customer has been invited to the Billing Portal, then they will receive a link to manage their subscription (the “Management URL”) automatically at the bottom of their statements, invoices, and receipts. **This link changes periodically for security and is only valid for 65 days.** 

        If you need to provide your customer their Management URL through other means, you can retrieve it via the API. Because the URL is cryptographically signed with a timestamp, it is not possible for merchants to generate the URL without requesting it from Chargify.

        In order to prevent abuse & overuse, we ask that you request a new URL only when absolutely necessary. Management URLs are good for 65 days, so you should re-use a previously generated one as much as possible. If you use the URL frequently (such as to display on your website), please **do not** make an API request to Chargify every time.

        ## Billing Portal Documentation

        Full documentation on how the Billing Portal operates within the Chargify UI can be located [here](https://help.chargify.com/billing-portal/introduction.html).

        This documentation is focused on how the to configure the Billing Portal Settings, as well as Subscriber Interaction and Merchant Management of the Billing Portal. 

        ## Rules for Management Link API

        + When retrieving a management URL, multiple requests for the same customer in a short period will return the **same** URL
        + We will not generate a new URL for 15 days
        + You must cache and remember this URL if you are going to need it again within 15 days
        + Only request a new URL after the `new_link_available_at` date
        + You are limited to 15 requests for the same URL. If you make more than 15 requests before `new_link_available_at`, you will be blocked from further Management URL requests (with a response code `429`)
      public: true
    charges-intro:
      id: charges-intro
      name: Charges Intro
      content: |-
        ## Charges Intro

        This method of recording a charge against a subscription is referred to as a **"One Time Charge"** in the Chargify Help Documentation.

        For “live” subscriptions (i.e. subscriptions that are not canceled or expired) you have the ability to attach a **one-time-charge** of an arbitrary amount.

        ## Charges Documentation

        Full documentation on how to record a one-time-charge in the Chargify UI can be located [here](https://help.chargify.com/subscriptions/one-time-charges.html).

        ## Charge Input Attributes

        In order to create a charge, you must pass an amount and a memo. The amount can be specified by either the amount parameter or the amount_in_cents parameter.

        | amount                    | (either ‘amount’ or ‘amount_in_cents’ is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as `10.00`.                                                                                                                                                                            |
        |---------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | amount_in_cents           | (either ‘amount’ or ‘amount_in_cents’ is required) If you use this parameter, you should pass the amount represented as a number of cents, either as a string or integer. For example, $10.00 would be represented as `1000`. If you pass a value for both ‘amount’ and ‘amount_in_cents’, the value in ‘amount_in_cents’ will be used and ‘amount’ will be discarded. |
        | memo                      | (required) A helpful explanation for the charge. This amount will remind you and your customer for the reason for the assessment of the charge.                                                                                                                                                                                                                        |
        | use_negative_balance      | (optional) This option specifies whether or not a negative current balance should be used when creating the new charge. If true, use the negative balance on the subscription to calculate the charge. If false, do not use the negative balance. Acceptable values are `true` or `1` for `true` and `false` or `0 `for `false`.                                       |
        | delay_capture             | (optional) If true, don’t attempt to immediately capture a payment for this charge (instead, wait until the next assessment date). Acceptable values are `true` or `1` for `true` and `false` or `0` for `false`. Note if this option is used use_negative_balance is assumed as false.                                                                                |
        | accrue_on_failure         | (optional) If true, the charge will be added to the subscription whether or not the payment succeeds. If false, only the failed payment will be recorded, and the balance will not be increased. This attribute is ignored if `delay_capture` is true. Acceptable values are `true` or `1` for `true` and `false` or `0` for `false`. Defaults to `false`.             |
        | taxable                   | (optional, default `false`) If true, taxes will be assessed on the charge. Acceptable values are `true` or `1` for `true` and `false` or `0` for `false`.  This setting is ignored if the customer tax_exempt flag is true.                                                                                                                                                                                                             |
        | payment_collection_method | (optional, default,`automatic`) For subscriptions on invoice billing, when `delay_capture`: is set to `false`, and `payment_collection_method` is set to `invoice`, a mid-period invoice will be created from this charge. The charge will not appear on the invoice created at the next renewal. For subscriptions on statement billing, this option is ignored.      |

        ## Charge Output Attributes

        When a charge is successfully created, a representation of the newly created charge will be returned to you as JSON or XML in the message body, with the following attributes:

        | success         | Either `true` or `false`, depending on the success of the charge. (Note: At this time, all charges that are returned will return `true` here. `false` may be returned in the future when more options are added to the charge creation API) |
        |-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount of the charge and captured payment, represented in cents.                                                                                                                                                                        |
        | memo            | The memo for the created charge.                                                                                                                                                                                                            |

        ## Response Codes

        A response code is returned in the standard HTTP response to your API request.

        | 201 Created              | Returned for successfully created charges.                                  |
        |--------------------------|-----------------------------------------------------------------------------|
        | 422 Unprocessable Entity | Returned when the charge could not be created (see below section on errors) |
        | 404 Not Found            | Returned if the referenced subscription could not be found.                 |

        ## Errors

        Errors are returned either as an array of error explanation strings and formatted as either an XML or JSON array, depending on your Accept headers. The listing of currently possible error messages is listed below:

        + Memo: cannot be blank.
        + Amount: is not a number.
        + Amount: must be greater than or equal to 0.
        + This subscription is not eligible to accept charges.
        + [Gateway response if a gateway fail] ([Your original memo])
      public: true
    components-intro:
      id: components-intro
      name: Components Intro
      content: |-
        ## Components Intro

        Components are defined and associated with a product family. They become a part of your product offering. These **component definitions** determine what components are named, how they are measured, and how much they cost.

        Components can then be added and “allocated” for each subscription to a product in the product family. These **component line-items** affect how much a subscription will be charged, depending on the current allocations (i.e. 4 IP Addresses, or SSL “enabled”)

        This documentation covers both **component definitions** and **component line-items.** Please understand the difference.

        ## Components Documentation

        Full documentation on how to create Components in the Chargify UI can be located [here](https://help.chargify.com/products/product-components.html). Additionally, for information on how to record component usage against a subscription, please see the following resources:

        + [Proration and Component Allocations](https://help.chargify.com/subscriptions/setting-component-allocations.html)
        + [Recording component usage against a subscription](https://help.chargify.com/subscriptions/subscription-summary.html#components-line-items)

        ## Component Definition Input Attributes

        These values should be nested beneath a key that defines the kind of component being created or updated. Valid values are `on_off_component`, `quantity_based_component`, `metered_component`.

        | name              | The name of the Component, suitable for display to customers on statements. i.e. “Text Messages”.                                                                                                                                                                                                   |
        |-------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | taxable           | Boolean flag describing whether a component is taxable or not.                                                                                                                                                                                                                                      |
        | unit_name         | (Not required for On/Off Components) The name of the unit of measurement for the component. It should be singular since it will be automatically pluralized when necessary. i.e. “message”, which may then be shown as “5 messages” on a subscription’s component line-item                         |
        | unit_price        | The amount the customer will be charged per unit when the pricing scheme is “per_unit”. For On/Off Components, this is the amount that the customer will be charged when they turn the component on for the subscription. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065         |
        | pricing_scheme    | (Not required for On/Off Components) The identifier for the pricing scheme. Available options: per_unit, volume, tiered, stairstep. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.                                        |
        | prices            | (Not required for On/Off Components or ‘per_unit’ pricing schemes) One or more price brackets. See [General Price Bracket Rules](https://help.chargify.com/products/product-components.html#general-price-bracket-rules) for an overview of how price brackets work for different pricing schemes.  |
        | starting_quantity |                                                                                                                                                                                                                                                                                                     |
        | ending_quantity   |                                                                                                                                                                                                                                                                                                     |
        | unit_price        |                                                                                                                                                                                                                                                                                                     |
        | tax_code                 | A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.                                                   |

        ## Component Definition Output Attributes

        Component definitions refer to the components you create that become available to subscriptions. This differs from what we are calling “component line-items”, which detail the attachment of the component to a subscription (and are documented below).

        | id                      | The unique ID assigned to the component by Chargify. This ID can be used to fetch the component from the API.                                                                                                                                                                |
        |-------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | description             | The description of the component.                                                                                                                                                                                                                                            |
        | name                    | The name of the Component, suitable for display on statements. i.e. Text Messages.                                                                                                                                                                                           |
        | unit_name               | The name of the unit that the component’s usage is measured in. i.e. message                                                                                                                                                                                                 |
        | unit_price              | The amount the customer will be charged per unit. This field is only populated for ‘per_unit’ pricing schemes, otherwise it may be null.                                                                                                                                     |
        | pricing_scheme          | The handle for the pricing scheme. Available options: per_unit, volume, tiered, stairstep. See [General Price Bracket Rules](https://help.chargify.com/products/product-components.html#general-price-bracket-rules) for an overview of pricing schemes.                     |
        | prices                  | An array of price brackets. If the component uses the ‘per_unit’ pricing scheme, this array will be empty.                                                                                                                                                                   |
        | starting_quantity       | Starting quantity of the current default component                                                                                                                                                                                                                           |
        | ending_quantity         | Ending quantity of the current default component                                                                                                                                                                                                                             |
        | unit_price              | Starting unit price of the current default component                                                                                                                                                                                                                         |
        | product_family_id       | The id of the Product Family to which the Component belongs                                                                                                                                                                                                                  |
        | kind                    | A handle for the component type: `metered_component`, `quantity_based_component`, `on_off_component`                                                                                                                                                                         |
        | price_per_unit_in_cents | **(This field is deprecated, see note below)** This represents the unit price prior to the Chargify upgrade to fractional cent component pricing. This field may no longer represent the correct unit price of the component. The `unit_price` field should be used instead. |
        | archived                | Boolean flag describing whether a component is archived or not.                                                                                                                                                                                                              |
        | taxable                 | Boolean flag describing whether a component is taxable or not.                                                                                                                                                                                                               |
        | price_point_count       | Count for the number of of amount of price points associated with the the component                                                                                                                                                                                          |
        | price_points_url        | URL that points to the location to read the existing price points via `GET` request                                                                                                                                                                                          |
        | tax_code                | A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.                                                                      |

        ## Component Fractional Pricing

        In May 2011, we added the ability to create components with fractional cent pricing (i.e. $0.0012 per unit). To accommodate this change we made some adjustments on our end that altered how prices are stored. Because of this, we have deprecated the `price_in_cents` field in favor of the `unit_price` field. The `price_in_cents` field is still returned for backwards compatibility, but may not accurately represent the current state of the component if it has been updated since the change. We recommend updating your API calls to use the `unit_price` field as soon as possible.
      public: true
    coupon-intro:
      id: coupon-intro
      name: Subscriptions & Coupons Intro
      content: |-
        ## Subscriptions - Coupons

        In addition to the normal CRUD actions on coupons, you can also create Subscriptions using a Coupon, add a Coupon to an existing Subscription, and validate a Coupon via the API.
      public: true
    customers-intro:
      id: customers-intro
      name: Customers Intro
      content: |-
        ## Customers Intro

        You may create a new Customer at any time, or you may create a Customer at the same time you create a Subscription. The only validation restriction is that you may only create one customer for a given reference value. 

        If provided, the `reference` value must be unique. It represents a unique identifier for the customer from your own app, i.e. the customer’s ID. This allows you to retrieve a given customer via a piece of shared information. Alternatively, you may choose to leave `reference` blank, and store Chargify’s unique ID for the customer, which is in the `id` attribute.

        ## Customers Documentation

        Full documentation on how to locate, create and edit Customers in the Chargify UI can be located [here](https://help.chargify.com/customers/customers-intro.html).

        ## Customer Object Attributes

        All of the customer attribute fields are returned from GET (read) operations. 



        | Field Name                     | Description                                                                                                                                   |
        |--------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|
        | first_name                     | The first name of the customer                                                                                                                |
        | last_name                      | The last name of the customer                                                                                                                 |
        | email                          | The email address of the customer                                                                                                             |
        | cc_emails                      | (Optional) A comma-separated list of emails that should be cc’d on all customer communications (i.e. “joe@example.com, sue@example.com”)      |
        | organization                   | The organization of the customer                                                                                                              |
        | reference                      | The unique identifier used within your own application for this customer                                                                      |
        | id                             | The customer ID in Chargify                                                                                                                   |
        | created_at                     | The timestamp in which the customer object was created in Chargify                                                                            |
        | updated_at                     | The timestamp in which the customer object was last edited                                                                                    |
        | address                        | The customer’s shipping street address (i.e. “123 Main St.”)                                                                                  |
        | address_2                      | Second line of the customer’s shipping address i.e. “Apt. 100”                                                                                |
        | city                           | The customer’s shipping address city (i.e. “Boston”)                                                                                          |
        | state                          | The customer’s shipping address state (i.e. “MA”)                                                                                             |
        | zip                            | The customer’s shipping address zip code (i.e. “12345”)                                                                                       |
        | country                        | The customer shipping address country, perferably in [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”) |
        | phone                          | The phone number of the customer                                                                                                              |
        | verified                       | Is the customer verified to use ACH as a payment method. Available only on Authorize.Net gateway                                              |
        | portal_customer_created_at     | The timestamp of when the Billing Portal entry was created at for the customer                                                                |
        | portal_invite_last_sent_at     | The timestamp of when the Billing Portal invite was last sent at                                                                              |
        | portal_invite_last_accepted_at | The timestamp of when the Billing Portal invite was last accepted                                                                             |
        | tax_exempt                     | (Optional) The tax exempt status for the customer.  Acceptable values are true or 1 for true and false or 0 for false.                        |
        | vat_number                     | (Optional) The VAT number, if applicable                                                                                                      |
      public: true
    events-intro:
      id: events-intro
      name: Events Intro
      content: |-
        ## Events Intro

        Chargify Events include various activity that happens around a Site. This information is **especially** useful to track down issues that arise when subscriptions are not created due to errors.

        ## Events Documentation

        Within the Chargify UI, "Events" are referred to as "Site Activity".  Full documentation on how to record view Events / Site Activty in the Chargify UI can be located [here](https://help.chargify.com/sites/site-activity.html).

        ## Events Fields and Event Type

        The following fields are returned from GET (read) operations. Note, all events are read only.

        + `id`
        + `key`
        + `message`
        + `subscription_id`
        + `event_specific_data`
        + `created_at`

        The following are different types of events you may see in the `key` field. You can also use these as a method to filter in the query string:

        + `payment_success`
        + `payment_failure`
        + `signup_success`
        + `signup_failure`
        + `billing_date_change`
        + `renewal_success`
        + `renewal_failure`
        + `subscription_state_change`
        + `subscription_product_change`
        + `expiring_card`
        + `customer_update`
        + `subscription_deletion`
        + `component_allocation_change`
        + `metered_usage`
        + `upgrade_downgrade_success`
        + `upgrade_downgrade_failure`
        + `trial_end_notice`
        + `upcoming_renewal_notice`
        + `statement_closed`
        + `statement_settled`
        + `subscription_card_update`
        + `subscription_bank_account_update`
        + `subscription_paypal_account_update`
        + `refund_success`
        + `refund_failure`
        + `expiration_date_change`
        + `account_transaction_changed`
        + `zferral_revenue_post_success` - [Specific to the Zferral integration](https://help.chargify.com/integrations/zferral.html)
        + `zferral_revenue_post_failure` - [Specific to the Zferral integration](https://help.chargify.com/integrations/zferral.html)
        + `renewal_success_recreated` 
        + `renewal_failure_recreated` 
        + `payment_success_recreated` 
        + `payment_failure_recreated` 
        + `dunning_step_reached` 

        ## Event Specific Data

        Event Specific Data

        Each event type has its own `event_specific_data` specified.

        Here’s an example event for the `subscription_product_change` event:

        ```
        {
            "event": {
                "id": 351,
                "key": "subscription_product_change",
                "message": "Product changed on Marky Mark's subscription from 'Basic' to 'Pro'",
                "subscription_id": 205,
                "event_specific_data": {
                    "new_product_id": 3,
                    "previous_product_id": 2
                },
                "created_at": "2012-01-30T10:43:31-05:00"
            }
        }
        ```

        Here’s an example event for the `subscription_state_change` event:

        ```
         {
             "event": {
                 "id": 353,
                 "key": "subscription_state_change",
                 "message": "State changed on Marky Mark's subscription to Pro from trialing to active",
                 "subscription_id": 205,
                 "event_specific_data": {
                     "new_subscription_state": "active",
                     "previous_subscription_state": "trialing"
                 },
                 "created_at": "2012-01-30T10:43:33-05:00"
             }
         }
        ```
      public: true
    invoices:
      id: invoices
      name: Invoices Intro
      content: |-
        ## Invoices Intro

        This method affords the option to manage invoices through the Chargify API

        ## Invoice Documentation

        Full documentation on how invoices function within the Chargify UI can be located [here](https://help.chargify.com/invoices/invoice-intro.html).

        For information that relates directly to invoices-by-subscription, please see our Subscription-based Invoice documentation [here.](https://help.chargify.com/subscriptions/subscription-summary.html#invoices)

        ## Invoice Attributes

        All of the invoice attributes are returned from GET (read) operations, and all are read only.

        | id                    | The invoice unique id within Chargify                                               |
        |-----------------------|-------------------------------------------------------------------------------------|
        | subscription_id       | The subscription unique id within Chargify                                          |
        | statement_id          | The statement unique id within Chargify                                             |
        | site_id               | The site unique id within Chargify                                                  |
        | state                 | The current state of the invoice. Possible states: paid, unpaid, partial, archived. |
        | total_amount_in_cents | Gives the current invoice amount in the number of cents (ie. the sum of charges)    |
        | paid_at               | The date/time when the invoice was paid in full                                     |
        | created_at            | The creation date/time for this invoice                                             |
        | updated_at            | The date/time of last update for this invoice                                       |
        | amount_due_in_cents   | Gives the current outstanding invoice balance in the number of cents                |
        | number                | The unique (to this site) identifier for this invoice                               |
        | charges               | A list of charges applied to this invoice                                           |
        | payments_and_credits  | A list of the financial transactions that modify the amount due                     |

        For more information about the invoicing feature, please see the related [blog post](https://www.chargify.com/blog/invoicing-is-here/).
      public: true
    invoices-payments-intro:
      id: invoices-payments-intro
      name: Invoices - Payments Intro
      content: |-
        ## Invoices - Payments Intro

        Use this endpoint to record payments on an existing invoice.

        ## Invoice Payment Documentation

        Full documentation on how invoices function within the Chargify UI can be located [here](https://help.chargify.com/invoices/invoice-intro.html).

        For information that relates directly to adding a payment to an invoice, please see our payment  documentation below:

        + [Pay via Card](https://help.chargify.com/invoices/invoice-reference.html#pay-with-card)
        + [Offline Payments](https://help.chargify.com/invoices/invoice-reference.html#enter-payment)

        ## Invoice Payment Input Attributes

        | amount          | The amount represented as a string. E.g. if the payment was for $14.50, you would pass 14.50         |
        |-----------------|------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount represented as a string in cents. E.g. if the payment was for $14.50, you would pass 1450 |
        | memo            | Typically the description of why the payment occurred                                                |
      public: true
    invoices-credits-intro:
      id: invoices-credits-intro
      name: Invoices - Credits Intro
      content: |-
        ## Invoices - Credits Intro

        Use this endpoint to record credits on an existing invoice.

        | amount          | The amount represented as a string. E.g. if the payment was for $14.50, you would pass 14.50         |
        |-----------------|------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount represented as a string in cents. E.g. if the payment was for $14.50, you would pass 1450 |
        | memo            | Typically the description of why the payment occurred                                                |
         
        ## Invoice Documentation

        Full documentation on how invoices function within the Chargify UI can be located [here](https://help.chargify.com/invoices/invoice-intro.html).
      public: true
    invoices-charges-intro:
      id: invoices-charges-intro
      name: Invoices - Charges Intro
      content: |-
        ## Invoices - Charges Intro

        Use this endpoint to record charge on an existing invoice.

        ## Invoice Charges Documentation

        Full documentation on how invoices function within the Chargify UI can be located [here](https://help.chargify.com/invoices/invoice-intro.html).

        For information that relates directly to adding a charge to an invoice, please see our documentation [here](https://help.chargify.com/invoices/invoice-reference.html#add-charge).

        ## Invoice 

        | amount          | The amount represented as a string. E.g. if the payment was for $14.50, you would pass 14.50         |
        |-----------------|------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount represented as a string in cents. E.g. if the payment was for $14.50, you would pass 1450 |
        | memo            | Typically the description of why the payment occurred                                                |
      public: true
    metadata-intro:
      id: metadata-intro
      name: 'Custom Fields: Metadata Intro'
      content: |-
        ## Custom Fields: Metadata Intro

        **Chargify refers to Custom Fields in the API documentation as metafields and metadata.**

        + **Metafield is the custom field**
        + **Metadata is the data populating the custom field.**


        Chargify Metadata is used to add your own meaningful values to subscription or customer records.
        Metadata is associated to a customer or subscription, and corresponds to a Metafield. When creating a new metadata object for a given record, if the metafield is not present it will be created.

        ## Metadata Documentation

        Within the Chargify UI, metadata and metafields are grouped together under the umbrella of "Custom Fields." All of our UI-based documentation that references custom fields will not cite the terminology metafields or metadata. 

        Full documentation on how to create Custom Fields in the Chargify UI can be located [here](https://help.chargify.com/custom-fields/custom-fields-intro.html).

        For additional documentation on how to record data within custom fields, please see our subscription-based documentation [here.](https://help.chargify.com/subscriptions/subscription-summary.html#custom-fields)

        ## Metadata versus Metafields

        Metadata is the information that populates the metafield.

        ## Metadata limits

        Metadata values are limited to 2kB in size. Additonally, there are limits on the number of unique “names” available per resource. See [Metafields documentation](#docTextSection:BDXuRKX5n8K4T6Jsh).

        ## Server Response

        The following fields are returned from GET (read) operations.

        | name        | The name of the attribute that is added to the resource.  |
        |-------------|-----------------------------------------------------------|
        | value       | The value of the attribute that was added to the resource |
        | resource_id | The resource id that the metadata belongs to              |
      public: true
    metafields-intro:
      id: metafields-intro
      name: 'Custom Fields: Metafields Intro'
      content: |-
        ## Custom Fields: Metafields Intro

        **Chargify refers to Custom Fields in the API documentation as metafields and metadata.**

        + **Metafield is the custom field**
        + **Metadata is the data populating the custom field.**

        Chargify Metafields are used to add meaningful attributes to subscription and customer resources.

        Metafield are the place where you will set up your resource to accept additional data. It is scoped to the site instead of a specific customer or subscription. Think of it as the key, and Metadata as the value on every record.

        ## Metafields Documentation

        Within the Chargify UI, metadata and metafields are grouped together under the umbrella of "Custom Fields." All of our UI-based documentation that references custom fields will not cite the terminology metafields or metadata. 

        Full documentation on how to create Custom Fields in the Chargify UI can be located [here](https://help.chargify.com/custom-fields/custom-fields-intro.html).

        For additional documentation on how to record data within custom fields, please see our subscription-based documentation [here.](https://help.chargify.com/subscriptions/subscription-summary.html#custom-fields)

        ## Metafields vs Metadata 

        Metadata is the information that populates the metafield.

        ## Metafields "On-the-Fly"

        It is possible to create Metafields “on the fly” when you create your Metadata – if a non-existant name is passed when creating Metadata, a Metafield for that key will be automatically created. The Metafield API, however, gives you more control over your “keys”.

        ## Metafield Limitations

        Each site is limited to 200 unique Metafields (i.e. keys, or names) per-resource.

        ## Metafields Scope

        The scope field has four acceptable attributes, which dictate where metafields will appear:

        + hosted
        + csv
        + invoices
        + statements
         
        + If configured in the Admin UI or via the API be careful sending updates to metafields with the scope attribute – if a partial update is sent it will overwrite the current configuration.

        ## Hosted Metafields

        The `hosted` field is an array of products which specifies which hosted pages that the metafield will appear on.
        Supports a special value of “all” if you would like the field to be present on all hosted pages.

        ```“hosted”: [“1”, “2”]```

        ## CSV Metafields

        Values of ```1``` (include) or ```0``` (exclude) can be used to include or exclude in csv exports.

        ```“csv”: “1”```

        ## Statement Metafields

        Values of ```1``` (include) or ```0``` (exclude) can be used to include or exclude in statments.

        ```“statements”: “1”```

        ### Invoice Metafields

        Values of ```1``` (include) or ```0``` (exclude) can be used to include or exclude on invoices.

        ```“invoices”: “1”```

        ## Server Respones

        The following fields are returned from GET operations.

        | name       | The name of the attribute that is added to the resource.      |
        |------------|---------------------------------------------------------------|
        | scope      | This specifies where the metafield / metadata will visible    |
        | data_count | The number of metadata that are associated to this metafield. |
      public: true
    migrations-intro:
      id: migrations-intro
      name: Migrations Intro
      content: |-
        ## Migrations Intro

        Chargify offers the ability to upgrade or downgrade a Customer’s subscription in the middle of a billing period, which is called a “Migration”. 

        ## Migrations Documentation

        Full documentation on how to record Migrations in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/upgrades-downgrades.html).

        ## Migration vs. product change

        If you want a migration with proration, then you want to continue with the methods listed below. However, if you just want to change the product the customer is subscribed to (with no proration) then you’ll just want to update the [subscription product.](#endpoint:4D8tKPkKC3So5X6qs)

        ## Input Attributes

        The Chargify API allows you initiate an upgrade/downgrade by posting JSON or XML that includes:

        | product_id or product_handle | The ID or handle of the `target` Product. A Subscription can be migrated to another product for both the current Product Family and another Product Family. **Note: Going to another Product Family, components will not be migrated as well.** |
        |------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | include_trial                | Boolean, default `0`. If `1` is sent the customer will migrate to the new product with a trial if one is available. If `0` is sent, the trial period will be ignored.                                                                           |
        | include_initial_charge       | Boolean, default 0. If 1 is sent initial charges will be assessed. If 0 is sent initial charges will be ignored.                                                                                                                                |
        | include_coupons              | Boolean, default `1`. If `1` (or nothing) is sent, any coupons associated with the subscription will be applied to the migration. If `0` is sent, coupons will not be applied.                                                                  |

        ## Failed Migrations

        One of the most common ways that a migration can fail is when the attempt is made to migrate a subscription to it's current product. Please be aware of this issue!
      public: true
    metered-usage-intro:
      id: metered-usage-intro
      name: Metered Usage Intro
      content: |-
        ## Components: Metered Usage Intro

        The Chargify API allows you to record metered component usage by posting JSON or XML that includes:

        + `quantity`: The amount of units used
        + `memo`: An optional description of the usage

        When you record metered usage, you are simply create a new request to add "usage" to the subscription for that particular component.

        Metered usage is cumulative and charges for components are assessed on the `next_billing_date` of the subscription. Another way of stating this is: metered usage is tallied and charged at the end of the subscriber's current recurring period.

        ## Recording Multiple Usage Limitations

        As of the time of this publication there is not a method to record multiple usage of a metered component against a subscription.

        ## Metered Components versus Quantity-based Components

        Metered components allow you to record "usage" of a component, such as text messages. These types of components reset to 0 at the beginning of each billing period.

        On the other hand, for quantity-based components, you would record an allocation. Quantity-based components do not reset every month. They will charge the same quantity of components one billing period to the next.

        ## Metered Components Documentation

        Full documentation on how to create Components in the Chargify UI can be located [here](https://help.chargify.com/products/product-components.html). Additionally, for information on how to record component usage against a subscription, please see the following resources:

        + [Recording Metered Component Usage](https://help.chargify.com/subscriptions/setting-component-allocations.html#reporting-metered-component-usage)
        + [Recording component usage against a subscription](https://help.chargify.com/subscriptions/subscription-summary.html#components-line-items)
      public: true
    intro-to-payments:
      id: intro-to-payments
      name: Intro to Payments
      content: |-
        ## Payments Intro

        Chargify allows you to record payments that occur **outside** of the normal flow of payment processing.
        These payments are considered **external payments**. A common case to apply such a payment is when a customer pays by check or some other means for their subscription.

        ## Payment Documentation

        Full documentation on how to record external payments in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/subscription-actions.html#record-external-payment).

        ## Payment Input Attributes

        | amount          | The amount represented as a string of the payment. E.g. if the payment was for $14.50, you would pass `14.50`         |
        |-----------------|-----------------------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount represented as a string of the payment in cents. E.g. if the payment was for $14.50, you would pass `1450` |
        | memo            | Typically the description of why the payment occured                                                                  |
      public: true
    intro-to-payment-profiles:
      id: intro-to-payment-profiles
      name: Payment Profile Intro
      content: |-
        ## Payment Profile Intro

        Payment Profiles house the credit card, ACH (Authorize.Net or Stripe only,) or PayPal (Braintree only,) data for a customer. The payment information is attached to the customer within Chargify, as opposed to the Subscription itself.


        ## Taxable Subscriptions

        If your subscriber pays taxes on their purchased product, and you are attempting to create or update the `payment_profile`, complete address information is required. For information on required address formatting to allow your subscriber to be taxed, please see our documentation [here](https://developer.chargify.com/content/basics/signups.html#taxes)

        ## Payment Profile Documentation

        Full documentation on how Payment Profiles operate within Chargify can be located under the following links:

        + [Subscriber Payment Details](http://help.chargify.com/subscriptions/subscription-summary.html#payment-details)
        + [Self Service Pages](http://help.chargify.com/public-pages/self-service-pages.html) (Allows credit card updates by Subscriber)
        + [Public Signup Pages payment settings](http://help.chargify.com/public-pages/public-signup-page-settings.html#credit-card-settings)

        ## Payment Profile Input Attributes

        The following information describes the input attributes that can be used for creating Payment Profiles.

        | payment_type             | (Optional) Default is `credit_card`. May be `bank_account` or `credit_card` or `paypal_account`.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
        |--------------------------||
        | customer_id              | (Required when creating a new payment profile) The Chargify customer id|
        | first_name               | First name on card or bank account                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
        | last_name                | Last name on card or bank account|
        | full_number              | (Required when payment_type is `credit_card` unless you provide the `vault_token`) The full credit card number (string representation, i.e. `5424000000000015`)                                                                                                                                                                                                                                                                                                                                                                                                                                               |
        | expiration_month         | (Required when `payment_type` is `credit_card` unless you provide the `vault_token`) The 1- or 2-digit credit card expiration month, as an integer or string, i.e. `5`                                                                                                                                                                                                                                                                                                                                                                                                                                        |
        | expiration_year          | (Required when payment_type is `credit_card` unless you provide the `vault_token`) The 4-digit credit card expiration year, as an integer or string, i.e. `2012`                                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | cvv                      | (Optional, may be required by your gateway settings) The 3- or 4-digit Card Verification Value. This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
        | billing_address          | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing street address (i.e. `123 Main St.`). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                                                       |
        | billing_address_2        | (Optional) Second line of the customer’s billing address i.e. `Apt. 100`|
        | billing_city             | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address city (i.e. `Boston`). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                                                               |
        | billing_state            | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address state (i.e. `MA`). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                                                                  |
        | billing_zip              | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address zip code (i.e. “12345”). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                                                            |
        | billing_country          | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address country, preferably in [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “`US`”). This value is merely passed through to the payment gateway. Some gateways require country codes in a specific format. Please check your gateway’s documentation. If creating an ACH subscription, only `US` is supported at this time.                                                                                                                       |
        | bank_name                | (Required when creating a subscription with ACH) The name of the bank where the customer’s account resides                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
        | bank_routing_number      | (Required when creating a subscription with ACH) The routing number of the bank|
        | bank_account_number      | Required when creating a subscription with ACH) The customer’s bank account number|
        | bank_account_type        | When payment_type is `bank_account`, this defaults to `checking` and cannot be changed|
        | bank_account_holder_type | When payment_type is `bank_account`, may be `personal` (default) or `business` |
        | verified | When payment type is `bank_account` and `current_vault` is `stripe_connect`, may be set to `true` to indicate that the bank account has already been verified. |
        | paypal_email             |   |
        | payment_method_nonce     |   |                                 
        | vault_token              | (Only allowed during the creation of a new payment profile.) If you have an existing `vault_token` from your gateway, you may associate it with this new payment profile.                                                                                                                                                                                                                                                                                                                                                                                                                                     |
        | current_vault            | (Required when you pass in a `vault_token`.) Will be one of the following: `bogus` (for testing), `authorizenet`, `authorizenet_cim`, `beanstream`, `bpoint`, `braintree_blue`, `chargify`, `cybersource`, `elavon`, `eway`, `eway_rapid_std` , `firstdata`, `fusebox`, `litle`, `moneris`, `moneris_us`, `orbital`, `payment_express`, `paymill`, `pin`, `quickpay`, `square`, `stripe_connect`, `trust_commerce`, `wirecard`. Provides a hint about where the credit card details represented by `vault_token` are stored, however transactions will always be sent to the gateway configured in the Site's settings. |
        | card_type                | Can be any of the following `visa`, `master`, `discover`, `american_express`, `diners_club`, `jcb`, `switch`, `solo`, `dankort`, `maestro`, `forbrugsforeningen`, `laser`                                                                                                                                                                                                                                                                                                                                                                                                                                       |
      public: true
    product-family-intro:
      id: product-family-intro
      name: Product Family Intro
      content: |-
        ## Product Family Intro 

        Product Families house your products, components and coupons. They can be used to categorize products, product levels or service offerings to your Subscribers.

        ## Product Family Documentation

        Full documentation on how Product Families operate within the Chargify UI can be located [here](http://help.chargify.com/products/product-families.html).

        ## Product Family Attributes

        | name        | The product family name        |
        |-------------|--------------------------------|
        | handle      | The product family API handle  |
        | description | The product family description |

        ## Input Attributes (Create)

        | name        | The product family name        |
        |-------------|--------------------------------|
        | handle      | The product family API handle  |
        | description | The product family description |
      public: true
    products-intro:
      id: products-intro
      name: Products Intro
      content: |-
        ## Products Intro

        Use the products endpoint to manage your products inventory within your Chargify Site.

        ## Product Documentation

        Full documentation on how to use Notes in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/subscription-summary.html#notes).

        + [Products Documentation](http://help.chargify.com/products/products-intro.html)
        + [Changing a Subscription's Product](http://help.chargify.com/subscriptions/subscription-summary.html#product)

        ## Product Attributes

        All of the product attribute fields are returned from GET (read) operations.

        | price_in_cents           | The product price, in integer cents                                                                                                                                                                                                |
        |--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | name                     | The product name                                                                                                                                                                                                                   |
        | handle                   | The product API handle                                                                                                                                                                                                             |
        | description              | The product description                                                                                                                                                                                                            |
        | product_family           | Nested attributes pertaining to the product family to which this product belongs                                                                                                                                                   |
        | name                     | The product family name                                                                                                                                                                                                            |
        | handle                   | The product family API handle                                                                                                                                                                                                      |
        | accounting_code          | The product family accounting code (has no bearing in Chargify, may be used within your app)                                                                                                                                       |
        | description              | The product family description                                                                                                                                                                                                     |
        | interval_unit            | A string representing the interval unit for this product, either `month` or `day`                                                                                                                                                  |
        | interval                 | The numerical interval. i.e. an interval of ‘30’ coupled with an `interval_unit` of `day` would mean this product would renew every 30 days                                                                                        |
        | initial_charge_in_cents  | The up front charge you have specified.                                                                                                                                                                                            |
        | trial_price_in_cents     | The price of the trial period for a subscription to this product, in integer cents.                                                                                                                                                |
        | trial_interval           | A numerical interval for the length of the trial period of a subscription to this product. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval     |
        | trial_interval_unit      | A string representing the trial interval unit for this product, either month or day                                                                                                                                                |
        | expiration_interval      | A numerical interval for the length a subscription to this product will run before it expires. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval |
        | expiration_interval_unit | A string representing the trial interval unit for this product, either month or day                                                                                                                                                |
        | version_number           | The version of the product                                                                                                                                                                                                         |
        | update_return_url        | The url to which a customer will be returned after a successful account update                                                                                                                                                     |
        | update_return_params     | The parameters will append to the url after a successful account update. See [Return URLs and Parameters](https://help.chargify.com/products/product-options.html#return-url-and-parameters)                                       |
        | require_credit_card      | Boolean                                                                                                                                                                                                                            |
        | request_credit_card      | Boolean                                                                                                                                                                                                                            |
        | created_at               | Timestamp indicating when this product was created                                                                                                                                                                                 |
        | updated_at               | Timestamp indicating when this product was last updated                                                                                                                                                                            |
        | archived_at              | Timestamp indicating when this product was archived                                                                                                                                                                                |
        | public_signup_pages      | An array of signup pages containing the following 4 attributes:                                                                                                                                                                    |
        | id                       | The id of the signup page (`public_signup_pages` only)                                                                                                                                                                             |
        | url                      | The url where the signup page can be viewed (`public_signup_pages` only)                                                                                                                                                           |
        | return_url               | The url to which a customer will be returned after a successful signup (`public_signup_pages` only)                                                                                                                                |
        | return_params            | The params to be appended to the return_url (`public_signup_pages` only)                                                                                                                                                           |
        | tax_code                 | A string representing the tax code related to the product type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.                                                   |
      public: true
    quantity-allocations-intro:
      id: quantity-allocations-intro
      name: Quantity Allocations Intro
      content: |-
        ## Components: Quantity Allocations Intro

        The “Allocated Quantity” may be set for the Quantity Component on specific subscriptions via the API at the time the subscription is created, or at any time thereafter.

        Full documentation on how to record Allocations in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/setting-component-allocations.html). 

        This documentation is focused on how allocations operate within the Chargify UI. It goes into greater detail on how the user interface will react when recording allocations.

        This documentation also goes into greater detail on how proration is taken into consideration when applying component allocations.

        ## Quantity-based Components Versus Metered-based components

        Quantity-based components allow you to record allocation/purchase of an add-on resource or component. Quantity-based components do not reset every month. They will charge the same quantity of components one billing period to the next.

        Metered components allow you to record "usage" of a component, such as text messages. These types of components reset to 0 at the beginning of each billing period.

        ## Quantity-based Components Documentation

        Full documentation on how to create Components in the Chargify UI can be located [here](https://help.chargify.com/products/product-components.html). Additionally, for information on how to record component usage against a subscription, please see the following resources:

        + [Recording Quantity-based Component Usage](https://help.chargify.com/subscriptions/setting-component-allocations.html#reporting-quantity-based-allocations)
        + [Recording component usage against a subscription](https://help.chargify.com/subscriptions/subscription-summary.html#components-line-items)

        ## Proration Upgrade Schemes

        Each time you record an allocation, it's important to focus on the proration scheme type.

        If you do not specify a proration scheme, the default scheme for the Site will be used. This setting is accessable in-app via Settings-->Components

        | Proration Scheme             | Definition                                                                                                                                                                      |
        |------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | `prorate-delay-capture`      | A charge is added for the prorated amount due, but the card is not charged until the subscription’s next renewal                                                                |
        | `prorate-attempt-capture`    | A charge is added and we attempt to charge the credit card on file. If,it fails, the charge will be accrued until the next renewal.                                             |
        | `full-price-delay-capture`   | A charge is added for the full price of the component change, but the card is not charged until the subscription’s next renewal.                                                |
        | `full-price-attempt-capture` | A charge is added for the full price of the component change, and we,attempt to charge the credit card on file. If it fails, the charge will,be accrued until the next renewal. |
        | `no-prorate`                 | No proration is applied.                                                                                                                                                                     |
      public: true
    referrals-intro:
      id: referrals-intro
      name: Referrals Intro
      content: |-
        ## Referrals Intro

        You can verify if a referral code is valid using the `validate` method. This method is useful for validating referral codes that are entered by a customer.

        ## Referrals Documentation

        Full documentation on how to use the referrals feature in the Chargify UI can be located [here](http://help.chargify.com/referrals/introduction.html).

        ## Server Response

        If the referral code is valid the status code will be `200` and the referral code will be returned. If the referral code is invalid, a `404` response will be returned.
      public: false
    refunds-intro:
      id: refunds-intro
      name: Refunds Intro
      content: |-
        ## Refunds Intro

        With Chargify you have the ability to apply a refund to a payment that has been processed at the gateway. Refunds made through the methods depicted below will interact with the Gateway. 

        For more information on creating refunds in general, please see [Refunds](https://help.chargify.com/subscriptions/refunds.html).

        ## Refunds Documentation

        Full documentation on how to apply a refund in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/refunds.html).

        ## Supported Gateways

        Refunds are only supported for the following gateways:

        + Authorize.Net
        + Braintree Blue
        + CyberSource
        + Elavon
        + eWay Rapid
        + Litle
        + Moneris
        + Orbital
        + Payeezy (First Data)
        + Pin Payments
        + Payment Express
        + Paymill
        + QuickPay
        + Stripe
        + Trust Commerce

        ## Refund Input Attributes

        In order to create a refund, you must pass an a payment id, amount and a memo. The amount can be specified by either the amount parameter or the amount_in_cents parameter.

        | payment_id      | (required) The id of the Payment that the credit will be applied to                                                                                                                                                                                                                                                                                                    |
        |-----------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | amount          | (either ‘amount’ or ‘amount_in_cents’ is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as `10.00`.                                                                                                                                                                            |
        | amount_in_cents | (either ‘amount’ or ‘amount_in_cents’ is required) If you use this parameter, you should pass the amount represented as a number of cents, either as a string or integer. For example, $10.00 would be represented as `1000`. If you pass a value for both ‘amount’ and ‘amount_in_cents’, the value in ‘amount_in_cents’ will be used and ‘amount’ will be discarded. |
        | memo            | (required) A helpful explanation for the refund. This amount will remind you and your customer for the reason for the refund.                                                                                                                                                                                                                                          |
        ## Refund Output Attributes

        When a refund is successfully created, a representation of the newly created refund will be returned to you as JSON or XML in the message body, with the following attributes:

        | id              | The id of the created refund                                         |
        |-----------------|----------------------------------------------------------------------|
        | success         | Either `true` or `false`, depending on the success of the refund.    |
        | amount_in_cents | The amount of the refund and captured payment, represented in cents. |
        | memo            | The memo for the created refund.                                     |

        ## Response Codes

        A response code is returned in the standard HTTP response to your API request.

        | 201 Created              | Returned for successfully created refunds.                                  |
        |--------------------------|-----------------------------------------------------------------------------|
        | 422 Unprocessable Entity | Returned when the refund could not be created (see below section on errors) |
        | 404 Not Found            | Returned if the referenced subscription or payment could not be found.      |

        ## Errors

        Errors are returned either as an array of error explanation strings and formatted as either an XML or JSON array, depending on your Accept headers. The listing of currently possible error messages is listed below:

        + Memo: cannot be blank.
        + Amount: is not a number.
        + Amount: must be greater than or equal to 0.
        + Gateway response if a gateway fail featuring "[Your original memo]"
      public: true
    external-refunds-intro:
      id: external-refunds-intro
      name: Refunds - External Intro
      content: |-
        ## Refunds - External Intro

        Use this endpoint to record refunds done outside of Chargify, such as directly at the gateway or by sending a check to the subscriber.

        | amount          | The amount represented as a string with two decimal places, for example 14.50.                               |
        |-----------------|--------------------------------------------------------------------------------------------------------------|
        | amount_in_cents | The amount represented as a string in cents. For example if the refund was for $14.50, you would pass `1450` |
        | memo            | A description of why the refund occured                                                                      |

        Note that external refunds will reduce revenue, but they do not affect the balance due for the subscription.

        ## Refunds Documentation

        Full documentation on how to apply a refund in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/refunds.html).

        ## External Refunds versus Refunds

        It's important to note that 2 types of refunds can be created via the API. 

        + [Refunds](#docTextSection:PdfZnp5bXtPjCr7Qg) interact with the Merchant's gateway and return funds directly to the Subscriber's bank.
        + External refunds log a refund against the Subscriber's entry in Chargify. No funds are returned to the subscriber's bank account. 

        ## External Refund Use Case
         
        The use case for this type of refund is as follows:

        + You have a gateway that does not do **direct** refunds back to a Subscribers's bank account
        + To process a refund, you process the refund **through** your gateway account.
        + Afterwards, record the refund within Chargify
      public: true
    statements-intro:
      id: statements-intro
      name: Statements Intro
      content: |-
        ## Statements Intro

        Chargify Statements give you and your customers a breakdown of Subscription charges, payments, credits, and activity on a period-by-period basis. A Statement is similar to an “Invoice” because it is marked as currently paid or unpaid. Statements display all account activity for a specific usage period.

        ## Statements Documentation

        Documentation for Statements in the Chargify UI can be accessed via the following links / topics:

        + [Statements Reference](http://help.chargify.com/statements/statements-intro.html)
        + [Viewing Statements](http://help.chargify.com/subscriptions/subscription-summary.html#statements)
        + [Statement Settings](http://help.chargify.com/settings/statements.html)

        ## Statement Presentation

        The Statements API offers three ways to easily render a statement on your site. You can include a text representation of the statement or one of two HTML views that can be styled to your liking.

        | text_view       | A text representation of the statement             |
        |-----------------|----------------------------------------------------|
        | basic_html_view | A simple HTML representation of the statement      |
        | html_view       | A more robust HTML representation of the statement |

        Rendering individual statements can also be done as PDF by using the Accept/Content-Type header application/pdf or appending .pdf as the `<format>` portion of the URL.

        ## Statement Output Attributes

        All of the statement attribute fields are returned from GET (read) operations. Note, all of these attributes are read only.

        | id                          | The unique identifier for this statement within Chargify                           |
        |-----------------------------|------------------------------------------------------------------------------------|
        | subscription_id             | The unique identifier of the subscription associated with the statement            |
        | opened_at                   | The date that the statement was opened                                             |
        | closed_at                   | The date that the statement was closed                                             |
        | settled_at                  | The date that the statement was settled                                            |
        | text_view                   | A text representation of the statement                                             |
        | basic_html_view             | A simple HTML representation of the statement                                      |
        | html_view                   | A more robust HTML representation of the statement                                 |
        | future_payments             | A collection of payments from future statements that pay charges on this statement |
        | starting_balance_in_cents   | The subscription’s balance at the time the statement was opened                    |
        | ending_balance_in_cents     | The subscription’s balance at the time the statement was closed                    |
        | total_in_cents              | The total amount billed                                                            |
        | customer_first_name         | The customer’s first name                                                          |
        | customer_last_name          | The customer’s last name                                                           |
        | customer_organization       | The customer’s organization                                                        |
        | customer_shipping_address   | The customer’s shipping address                                                    |
        | customer_shipping_address_2 | The customer’s shipping address, line 2                                            |
        | customer_shipping_city      | The customer’s shipping city                                                       |
        | customer_shipping_state     | The customer’s shipping state                                                      |
        | customer_shipping_country   | The customer’s shipping country                                                    |
        | customer_shipping_zip       | The customer’s shipping zip                                                        |
        | customer_billing_address    | The customer’s billing address                                                     |
        | customer_billing_address_2  | The customer’s billing address, line 2                                             |
        | customer_billing_city       | The customer’s billing city                                                        |
        | customer_billing_state      | The customer’s billing state                                                       |
        | customer_billing_country    | The customer’s billing country                                                     |
        | customer_billing_zip        | The customer’s billing zip                                                         |
        | customer_tax_exempt         | The customer's tax exempt status                                                   |
        | transactions                | A collection of the transaction objects associated with the statement              |
        | events                      | A collection of the event objects associated with the statement                    |
        | created_at                  | The creation date for this statement                                               |
        | updated_at                  | The date of last update for this statement                                         |
      public: true
    subscriptions-intro:
      id: subscriptions-intro
      name: Subscriptions Intro
      content: |-
        ## Subscriptions Intro

        Full documentation on how Subscriptions operate within Chargify can be located under the following topics:

        + [Subscriptions Reference](https://help.chargify.com/subscriptions/subscription-intro.html)
        + [Subscriptions Actions](https://help.chargify.com/subscriptions/subscription-actions.html)
        + [Subscription Cancellation](https://help.chargify.com/subscriptions/cancellation.html)
        + [Subscription Reactivation](https://help.chargify.com/subscriptions/reactivation.html)
        + [Subscription Import](https://help.chargify.com/subscriptions/subscriptions-import.html)

        ## Subscription Input Attributes

        When creating a subscription, you must specify a product and a customer. Credit card details may be required, depending on the options for the Product being subscribed ([see Product Options](https://help.chargify.com/products/product-options.html)).

        The product may be specified by `product_id` or by `product_handle` (API Handle).

        An existing customer may be specified by a `customer_id` (ID within Chargify) or a `customer_reference` (unique value within your app that you have shared with Chargify via the reference attribute on a customer). A new customer may be created by providing `customer_attributes`.

        | product_handle     | The API Handle of the product for which you are creating a subscription. Required, unless a `product_id` is given instead.                                        |
        |--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | product_id         | The Product ID of the product for which you are creating a subscription. The product ID is not currently published, so we recommend using the API Handle instead. |
        | customer_id        | The ID of an existing customer within Chargify. Required, unless a `customer_reference` or a set of `customer_attributes` is given.                               |
        | customer_reference | The reference value (provided by your app) of an existing customer within Chargify. Required, unless a `customer_id` or a set of `customer_attributes` is given.  |


        ### Customer Attributes

        | first_name   | The first name of the customer. Required when creating a customer via attributes.                                                                                                                                        |
        |--------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | last_name    | The last name of the customer. Required when creating a customer via attributes.                                                                                                                                         |
        | email        | The email address of the customer. Required when creating a customer via attributes.                                                                                                                                     |
        | cc_emails    | A list of emails that should be cc’d on all customer communications. Optional.                                                                                                                                           |
        | organization | The organization/company of the customer. Optional.                                                                                                                                                                      |
        | reference    | A customer “reference”, or unique identifier from your app, stored in Chargify. Can be used so that you may reference your customer’s within Chargify using the same unique value you use in your application. Optional. |
        | address      | (Optional) The customer’s shipping street address (i.e. “123 Main St.”).                                                                                                                                                 |
        | address_2    | (Optional) Second line of the customer’s shipping address i.e. “Apt. 100”                                                                                                                                                |
        | city         | (Optional) The customer’s shipping address city (i.e. “Boston”).                                                                                                                                                         |
        | state        | (Optional) The customer’s shipping address state (i.e. “MA”). This must conform to the  [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.                                                                                                                                                                            |
        | zip          | (Optional) The customer’s shipping address zip code (i.e. “12345”).                                                                                                                                                      |
        | country      | (Optional) The customer shipping address country, required in [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”).                                                                |
        | phone        | (Optional) The phone number of the customer.                                                                                                                                                                             |
        | tax_exempt   | (Optional) The tax_exempt status of the customer.  Acceptable values are true or 1 for true and false or 0 for false. |
           
        ------------------

        ## Payment Profile Attributes

        These attributes can be updated by sending a PUT request to the [payment profile](https://reference.chargify.com/v1/payment-profiles/update-the-payment-profile) endpoint.

        | payment_profile_id         | The Payment Profile ID of an existing card or bank account, which belongs to an existing customer to use for payment for this subscription. If the card, bank account, or customer does not exist already, or if you want to use a new (unstored) card or bank account for the subscription, use `payment_profile_attributes` instead to create a new payment profile along with the subscription. (This value is available on an existing subscription via the API as `credit_card` > id or `bank_account` > id) |
        |----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | payment_profile_attributes | (this may also be referred to as `credit_card_attributes` or `bank_account_attributes`)                                                                                                                                                                                                                                                                                                                                                                                                                           |
        | first_name                 | (Optional) First name on card or bank account. If omitted, the first_name from customer attributes will be used.                                                                                                                                                                                                                                                                                                                                                                                                  |
        | last_name                  | (Optional) Last name on card or bank account. If omitted, the last_name from customer attributes will be used.                                                                                                                                                                                                                                                                                                                                                                                                    |
        | full_number                | The full credit card number (string representation, i.e. `5424000000000015`)                                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | expiration_month           | (Optional when performing a Subscription Import via `vault_token`, required otherwise) The 1- or 2-digit credit card expiration month, as an integer or string, i.e. `5`                                                                                                                                                                                                                                                                                                                                          |
        | expiration_year            | (Optional when performing a Subscription Import via `vault_token`, required otherwise) The 4-digit credit card expiration year, as an integer or string, i.e. `2012`                                                                                                                                                                                                                                                                                                                                              |
        | cvv                        | (Optional, may be required by your gateway settings) The 3- or 4-digit Card Verification Value. This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                                                                       |
        | billing_address            | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing street address (i.e. `123 Main St.`). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                           |
        | billing_address_2          | (Optional) Second line of the customer’s billing address i.e. `Apt. 100`                                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | billing_city               | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address city (i.e. “Boston”). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                   |
        | billing_state              | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address state (i.e. `MA`). This value is merely passed through to the payment gateway. This must conform to the  [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.                                                                                                                                                                                                                                                                                                      |
        | billing_zip                | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address zip code (i.e. `12345`). This value is merely passed through to the payment gateway.                                                                                                                                                                                                                                                                                                |
        | billing_country            | (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address country, required in [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”). This value is merely passed through to the payment gateway. Some gateways require country codes in a specific format. Please check your gateway’s documentation. If creating an ACH subscription, only US is supported at this time.                               |
        | vault_token                | (Optional, used only for Subscription Import) The “token” provided by your vault storage for an already stored payment profile                                                                                                                                                                                                                                                                                                                                                                                    |
        | customer_vault_token       | (Optional, used only for Subscription Import) (only for Authorize.Net CIM storage or Square) The customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token                                                                                                                                                                                                                                                                                                                                |
        | current_vault              | (Optional, used only for Subscription Import) The vault that stores the payment profile with the provided `vault_token`. May be `authorizenet`, `trust_commerce`, `payment_express`, `beanstream`, `braintree_blue`, `paypal`, `quickpay`, `eway`, `eway_rapid_std`, `stripe_connect`, 'square', `pin`, `wirecard`, `bpoint`, `firstdata`, `elavon`, `cybersource`, `paymill`, `litle` or `moneris`.                                                                                                                                |
        | last_four                  | (Optional, used only for Subscription Import) If you have the last 4 digits of the credit card number, you may supply them here so that we may create a masked card number (i.e. `XXXX-XXXX-XXXX-1234`) for display in the UI                                                                                                                                                                                                                                                                                     |
        | card_type                  | (Optional, used only for Subscription Import) If you know the card type (i.e. Visa, MC, etc) you may supply it here so that we may display the card type in the UI. May be `visa`, `master`, `discover`, `american_express`, `diners_club`, `jcb`, `switch`, `solo`, `dankort`, `maestro`, `forbrugsforeningen`, or `laser`                                                                                                                                                                                       |
        | bank_name                  | (Required when creating a subscription with ACH) The name of the bank where the customer’s account resides                                                                                                                                                                                                                                                                                                                                                                                                        |
        | bank_routing_number        | (Required when creating a subscription with ACH) The routing number of the bank                                                                                                                                                                                                                                                                                                                                                                                                                                   |
        | bank_account_number        | (Required when creating a subscription with ACH) The customer’s bank account number |
        | payment_method_nonce | (Required for Square unless importing with vault_token and customer_vault_token) The nonce generated by the Square Javascript library  (SqPaymentForm)  |                                                                                                                                  |
          
        --------

        ## Subscription Attributes


            
        | cancellation_message                  | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about the reason for cancellation|
        |---------------------------------------||
        | cancellation_method                   | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about how the subscription was canceled. |
        | reason_code                           | (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to indicate why a subscription was canceled. |
        | next_billing_at                       | (Optional) Set this attribute to a future date/time to sync imported subscriptions to your existing renewal schedule. See the notes on “Date/Time Format” in our [subscriptions import documentation](https://help.chargify.com/subscriptions/subscriptions-import.html). If you provide a next_billing_at timestamp that is in the future, no trial or initial charges will be applied when you create the subscription. In fact, no payment will be captured at all. The first payment will be captured, according to the prices defined by the product, near the time specified by `next_billing_at`. If you do not provide a value for `next_billing_at`, any trial and/or initial charges will be assessed and charged at the time of subscription creation. If the card cannot be successfully charged, the subscription will not be created. See further notes in the section on Importing Subscriptions. |
        | expires_at                            | Timestamp giving the expiration date of this subscription (if any). You may manually change the expiration date at any point during a subscription period|
        | expiration_tracks_next_billing_change | (Optional, default false) When set to `true`, and when next_billing_at is present, if the subscription expires, the expires_at will be shifted by the same amount of time as the difference between the old and new “next billing” dates|
        | vat_number                            | (Optional) Supplying the VAT number allows EU customer’s to opt-out of the Value Added Tax assuming the merchant address and customer billing address are not within the same EU country. It’s important to omit the country code from the VAT number upon entry. Otherwise, taxes will be assessed upon the purchase|
        | coupon_code                           | (Optional) The coupon code of the coupon to apply ([See the coupon docs](#endpoint:YFHw4XRYxaqLwGNvk|
        | payment_collection_method             | (Optional) The type of payment collection to be used in the subscription. May be automatic, or invoice|
        | agreement_terms | (Optional) The ACH authorization agreement terms. If enabled, an email will be sent to the customer with a copy of the terms. |
        | authorizer_first_name | (Optional) The first name of the person authorizing the ACH agreement. |
        | authorizer_last_name | (Optional) The last name of the person authorizing the ACH agreement. |
        | product_change_delayed                | (Optional, used only for [Delayed Product Change](#endpoint:4D8tKPkKC3So5X6qs) When set to true, indicates that a changed value for product_handle should schedule the product change to the next subscription renewal|
        | calendar_billing                      | (Optional, see [Calendar Billing](#https://help.chargify.com/subscriptions/billing-dates.html#calendar-billing) for more details). Cannot be used when also specifying `next_billing_at`|
        | snap_day                              | A value between `1` and `28`, or `end`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
        | calendar_billing_first_charge         | (Optional) One of “prorated” (the default – the prorated product price will be charged immediately), “immediate” (the full product price will be charged immediately), or “delayed” (the full product price will be charged with the first scheduled renewal|
        ---------

        | metafields         | (Optional) A set of key/value pairs representing custom fields and their values. Metafields will be created “on-the-fly” in your site for a given key, if they have not been created yet.                          |
        |--------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | ref                | A valid referral code. (optional, [see Referrals](https://help.chargify.com/referrals/introduction.html) for more details). If supplied, must be valid, or else subscription creation will fail.                   |
        | components         | (Optional) An array of component ids and quantities to be added to the subscription. See examples below and [Product Components](https://help.chargify.com/products/product-components.html) for more information. |
        | component_id       |                                                                                                                                                                                                                    |
        | allocated_quantity | or usage_balance or enabled                                                                                                                                                                                        |
      public: true
    subscriptions-preview-intro:
      id: subscriptions-preview-intro
      name: Subscriptions Preview Intro
      content: |-
        ## Subscription Preview

        The Chargify API allows you to preview a subscription by POSTing the same JSON or XML as for a subscription creation.

        ## Subscription Preview Documentation

        The "Next Billing" amount and "Next Billing" date are represented in each Subscriber's Summary. For more information, please see our documentation  [here](http://help.chargify.com/subscriptions/subscription-summary.html#next-billing).

        ## Input Attributes

        A Subscription Preview is an object representing a proposed subscription’s initial assessment and first renewal, including discounts and taxes. You can retrieve it to see a snapshot of how much your customer will be charged if they complete their signup.

        For full information, please see our API documentation on how to [Create a Subscription](#endpoint:uw4BjXCFjTzSYYSaA).

        A `subscription_preview` object with a `current_billing_manifest` and a `next_billing_manifest` containing the following fields:

        | start_date                | The timestamp for the beginning of the period covered by the manifest                                                             |
        |---------------------------|-----------------------------------------------------------------------------------------------------------------------------------|
        | end_date                  | The timestamp for the end of the period covered by the manifest                                                                   |
        | period_type               | The type of billing period: recurring for previews                                                                                |
        | existing_balance_in_cents | An integer representing the amount of the subscription’s current balance. Will be zero since the subscription does not yet exist. |
        | subtotal_in_cents         | An integer representing the amount of the total pre-tax, pre-discount charges that would be assessed                              |
        | total_discount_in_cents   | An integer representing the amount of the coupon discounts that would be applied                                                  |
        | total_tax_in_cents        | An integer representing the total tax charges that would be assessed                                                              |
        | total_in_cents            | An integer representing the total amount owed, less any discounts, that would be assessed                                         |
        | line_items                | An array of objects representing the individual transactions that would be created for this subscription                          |

        ## Side effects

        A subscription will not be created by sending a POST to this endpoint. It is meant to serve as a prediction.

        ## Taxable Subscriptions

        This endpoint will preview taxes applicable to a purchase. In order for taxes to be previewed, the following conditions must be met:

        + Taxes must be configured on the subscription
        + The preview must be for the purchase of a taxable product or component, or combination of the two.
        + The subscription payload must contain a full billing or shipping address in order to calculate tax

        For more information about creating taxable previews, please see our documentation guide on how to create [taxable subscriptions.](https://help.chargify.com/taxes/avalara-managed-sales-tax.html#creating-taxable-subscriptions)

        ## Non-taxable Subscriptions

        If you'd like to calculate subscriptions that do not include tax, please feel free to leave off the billing information.
      public: true
    subscriptions-override-intro:
      id: subscriptions-override-intro
      name: Subscriptions Override Intro
      content: |-
        ## Subscription Override Intro

        This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.

        This endpoint is provided for cases where you need to “align” Chargify data with data that happened in your system, perhaps before you started using Chargify. For example, you may choose to import your historical subscription data, and would like the activation and cancellation dates in Chargify to match your existing historical dates. Chargify does not backfill historical events (i.e. from the Events API), but some static data can be changed via this API.

        Why are some fields only settable from this endpoint, and not the normal subscription create and update endpoints? Because we want users of this endpoint to be aware that these fields are usually managed by Chargify, and using this API means **you are stepping out on your own.**

        ## Subscriptions Override Documentation

        There is no current complimentary documentation for this endpoint. 

        ## Fields That Can Be Manipulated

        | activated_at         | Can be used to record an external signup date. Chargify uses this field to record when a subscription first goes active (either at signup or at trial end)                |
        |----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | canceled_at          | Can be used to record an external cancellation date. Chargify sets this field automatically when a subscription is canceled, whether by request or via dunning.           |
        | cancellation_message | Can be used to record a reason for the original cancellation.                                                                                                             |
        | expires_at           | Can be used to record an external expiration date. Chargify sets this field automatically when a subscription expires (ceases billing) after a prescribed amount of time. |
        No other fields are currently available. Attempting to set any other fields will cause a `400 Bad Request` response. You only need to send the fields you would like to change.

        Note that changing these fields will not affect any other attributes. For example, adding an expiration date will not affect the next assessment date on the subscription.

        The fields should be nested beneath a `subscription` key – see the examples below for more information.

        ## Headers

        + `Accept`: set to either `application/json` or `application/xml` depending on the top of response you desire
        + `Content-Type`: set to either `application/json` or `application/xml` depending on the top of request body you send
      public: true
    importing-subscriptions:
      id: importing-subscriptions
      name: Subscriptions Import
      content: |-
        ## Subscriptions Import Intro

        Subscriptions can be “imported” via the API to handle the following scenarios:

        + You already have existing subscriptions with specific renewal dates that you would like to import to Chargify
        + You already have credit cards stored in your provider’s vault and you would like to create subscriptions using those tokens

        Before importing, you should have already set up your products to match your offerings. Then, you can create Subscriptions via the API just like you normally would, but using a few special attributes.

        ## Subscriptions Import Documentation

        Full documentation on how import Subscriptions using the **import tool** in the Chargify UI can be located [here](https://help.chargify.com/subscriptions/subscriptions-import.html).

        ## Adding components during import

        Components may also be included in the import. See [Product Components](#docTextSection:EseRiQJY4GMtnkfyR) for more information.

        ## Subscription Input Attributes

        The following _additions_ to the subscription input attributes make imports possible.

        | next_billing_at | Set this attribute to a future date/time to sync imported subscriptions to your existing renewal schedule. See the notes on “Date/Time Format” in our [subscriptions import documentation](https://help.chargify.com/subscriptions/subscriptions-import.html). If you provide a next_billing_at timestamp that is in the future, no trial or initial charges will be applied when you create the subscription. In fact, no payment will be captured at all. The first payment will be captured, according to the prices defined by the product, near the time specified by next_billing_at. If you do not provide a value for next_billing_at, any trial and/or initial charges will be assessed and charged at the time of subscription creation. If the card cannot be successfully charged, the subscription will not be created. |
        |-----------------||

        ## Payment Profile Attributes

        + `payment_profile_attributes`

        | vault_token          | the “token” provided by your vault storage for an already stored payment profile                                                                                                                                                                                                         |
        |----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | customer_vault_token | (only for Authorize.Net CIM storage): the customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token                                                                                                                                                    |
        | current_vault        | the vault that stores the payment profile with the provided vault_token. May be `authorizenet`, `trust_commerce`, `payment_express`, `beanstream`, `braintree_blue` (see additional notes on Braintree Blue, below), `quickpay`, `eway`, `eway_rapid_std`, `stripe_connect`, or `wirecard`               |
        | last_four            | (optional): If you have the last 4 digits of the credit card number, you may supply them here so that we may create a masked card number (i.e. ‘XXXX-XXXX-XXXX-1234’) for display in the UI                                                                                              |
        | card_type            | (optional): If you know thecard type (i.e. Visa, MC, etc) you may supply it here so that we may display the card type in the UI. May be `visa`, `master`, `discover`, `american_express`, `diners_club`, `jcb`, `switch`, `solo`, `dankort`, `maestro`, `forbrugsforeningen`, or `laser` |

        ## Payment Profile Attributes vs Credit Card Attributes

        `payment_profile_attributes` are the same thing as `credit_card_attributes` used elsewhere in the documentation. The two keys are interchangeable, pick one to use but not both. Most new documentation will refer to `payment_profile_attributes` 

        ## Current Vault

        If you are using a Legacy gateway such as "eWAY Rapid (Legacy)" or "Stripe (Legacy)" then please contact Support for further instructions on subscription imports.

        ## Braintree Blue (Braintree v2) Imports

        Braintree Blue is Braintree’s newer (version 2) API. For this gateway, please provide the `vault_token` parameter with the value from Braintree’s “Customer ID” rather than the “Payment Profile Token”. At this time we do not use `current_vault_token` with the Braintree Blue gateway, and we only support a single payment profile per Braintree Customer.

        When importing PayPal type payment profiles, please set `payment_type` to `paypal_account`.

        ## Webhooks During Import

        If no `next_billing_at` is provided, webhooks will be fired as normal. If you do set a future `next_billing_at`, only a subset of the webhooks are fired when the subscription is created. Keep reading for more information as to what webhooks will be fired under which scenarios.

        ### Successful creation with Billing Date

        Scenario: If `next_billing_at` provided

        + `signup_success`
        + `billing_date_change`

        ### Successful creation without Billing Date

        Scenario: If no `next_billing_at` provided

        + `signup_success`
        + `payment_success`

        ### Unsuccessful creation

        Scenario: If card can’t be charged, and no `next_billing_at` provided

        + signup_failure

        ### Webhooks fired when next_billing_at is reached:

        + `renewal_success or renewal_failure`
        + `payment_success or payment_failure`

        ### Date and Time Formats

        We will attempt to parse any string you send as the value of next_billing_at in to a date or time. For best results, use a known format like described in “Date and Time Specification” of RFC 2822 or ISO 8601 .

        The following are all equivalent and will work as input to `next_billing_at`:

        ```
          Aug 06 2020 11:34:00 -0400 2010
          Aug 06 2020 11:34 -0400 2010
          2020-08-06T11:34:00-04:00
          8/6/2010 11:34:00 EDT
          8/6/2010 8:34:00 PDT
          2010-08-06T15:34:00Z
        ```
        You may also pass just a date, in which case we will assume the time to be noon

        ```
        2010-08-06
        ```
      public: true
    overview:
      id: overview
      name: Overview
      content: |-
        ## API Overview

        The Chargify API allows you to interact with our system programmatically from your own application. Using the API you interact with Resources such as:

        - Products
        - Subscriptions
        - Customers
        - etc.

        The API attempts to conform to the [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) design principles.
        You interact with the resources exposed via the API by accessing resource collection and element URIs using the HTTP verbs (GET, POST, PUT, and DELETE).
        Chargify accepts and returns both JSON and XML data via the API.

        You’ll likely need access to a web developer or programmer (if you’re not one) to get the most use out of the API.

        ## Available Formats: JSON and XML

        JSON is the primary and recommended format for use with the Chargify API.  XML is also provided as a backwards compatible option for Merchants who require it.

        ## Authentication

        Authentication is implemented as HTTP Basic Authentication over TLS >= 1.2 (HTTPS), as described in [API Authentication](https://developer.chargify.com/content/getting-started/authentication.html)

        ## URL

        The URL for API requests includes the subdomain of the Site you are working with:

        `https://<subdomain>.chargify.com/<resource URI>`

        ## Response Data

        Response data is sent as either XML or JSON, depending on the type of data requested (`HTTP Content-Type` header) or the type specified as being accepted (HTTP `Accept` header).

        GETs for individual statements & invoices may also be requested as PDF using `application/pdf` or appending `.pdf` to the resource URI.

        Response codes are sent via the normal HTTP Response Code, and are documented separately for each resource.

        For boolean fields, please note that a value of `null` should be considered as false.

        ## Response Time Zones

        API responses from Chargify are sent with the timezone of current Chargify site. 

        Alternately, webhooks sent from Chargify globally utilize EST as the timezone for all content in the body of the payload. 

        ## Request Data

        POST and PUT request data may be formatted as either XML (`application/xml`) or JSON (`application/json`). For best results, you should set your HTTP `Content-Type` request header accordingly, although you may also specify your format by appending `.xml` or `.json` extensions on to the resource URI.

        Note that Chargify does not accept PUT or POST data sent as query params or form encoded data – data must be sent as either XML or JSON. If you fail to set your `Content-Type` to either `application/xml` or `application/json`, your request may fail due to triggering of forgery protection mechanisms.

        ## Debugging

        If you’re having difficulty executing a request via our API, try the simplest thing and attempt your request via the curl command-line tool, as shown in the below example. Add the `--verbose` flag to your request to receive even more debugging information.

        Another handy tool is [RequestBin](http://requestb.in/). You could create a RequestBin and send your request to them instead of us to see visually what it is you’re sending, if you’re not sure.

        If you are unable to connect at all, check that you are using TLS 1.2 or better, and review the information in [API Authentication Troubleshooting.](#docTextSection:xnGtyxFy5nLWhGB34)

        ## Backwards Compatibility

        We consider the following changes to be backwards compatible and may make them without advance notice:

        + Adding new API endpoints, or adding new attributes in the responses of existing endpoints
        + Adding new optional parameters to be sent to existing API endpoints
        + Adding new fields to exported data
        + Changing the type or length of any of the ID attributes
          + For example, most IDs are currently integers, but you should not assume that this will always be the case.

        In addition, you should not depend on the order of attributes within the API response as this may change.

        ## Examples

        The following examples use the curl command-line tool to exectute API requests.

        ### Subscription Listing

        **Request**

            curl -u <api_key>:x -H Accept:application/json -H Content-Type:application/json https://acme.chargify.com/subscriptions.json

        **Response**

        #model:Tcuta2tXRrTZEthBL
      public: true
    webhooks-intro:
      id: webhooks-intro
      name: Webhooks Intro
      content: |-
        ## Webhooks Intro

        The Webhooks API allows you to view a list of all webhooks and to selectively resend individual or groups of webhooks.

        ## Webhooks Documentation

        Full documentation on how to use webhooks within the Chargify UI can be located [here](http://help.chargify.com/webhooks/introduction.html).

        ## Webhook Attributes

        + `id` The unique identifier for the webhooks (unique across all of Chargify). This is not changed on a retry/replay of the same webhook, so it may be used to avoid duplicate action for the same event.
        + `successful` A boolean flag describing whether the webhook was accepted by the webhook endpoint for the most recent attempt. (Acceptance is defined by receiving a “200 OK” HTTP response within a reasonable timeframe, i.e. 15 seconds)
        + `event` A string describing which event type produced the given Webhook
        + `body` The data sent within the Webhook post
        + `signature` The calculated Webhook signature
        + `signature_hmac_sha_256` The calculated HMAC-SHA-256 Webhook signature
        + `created_at` Timestamp indicating when the Webhook was created
        + `accepted_at` Timestamp indicating when the Webhook was accepted by the merchant endpoint. When a webhook is explicitly replayed by the merchant, this value will be cleared until it is accepted again.
        + `last_sent_at` Timestamp indicating when the most recent attempt was made to send the Webhook
        + `last_error_at` Timestamp indicating when the last non-acceptance occurred. If a webhooks is later resent and accepted, this field will be cleared.
        + `last_sent_url` The url that the endpoint was last sent to.
        + `last_error` Text describing the status code and/or error from the last failed attempt to send the Webhook. When a webhook is retried and accepted, this field will be cleared.
      public: true
    coupon-subcodes-intro-1:
      id: coupon-subcodes-intro-1
      name: Coupon Subcodes Intro
      content: |-
        ## Coupon Subcodes Intro

        Coupon Subcodes allow you to create a set of unique codes that allow you to expand the use of one coupon.

        For example:

        Master Coupon Code: 

        + SPRING2020

        Coupon Subcodes: 

        + SPRING90210
        + DP80302
        + SPRINGBALTIMORE

        Coupon subcodes can be administered in the Admin Interface or via the API.

        When creating a coupon subcode, you must specify a coupon to attach it to using the coupon_id. Valid coupon subcodes are all capital letters, contain only letters and numbers, and do not have any spaces. Lowercase letters will be capitalized before the subcode is created.

        ## Coupon Subcodes Documentation

        Full documentation on how to create coupon subcodes in the Chargify UI can be located [here](https://help.chargify.com/products/product-coupons.html#coupon-codes).

        Additionally, for documentation on how to apply a coupon to a Subscription within the Chargify UI, please see our documentation [here](https://help.chargify.com/subscriptions/subscription-summary.html#coupon).
      public: true
    sales-receipt-intro:
      id: sales-receipt-intro
      name: Sales Receipt Intro
      content: '## Sales Receipt Intro'
      public: false
    reason-code-intro:
      id: reason-code-intro
      name: Reason Code / Churn Code Intro
      content: |-
        ## ReasonCodes Intro

        ReasonCodes are a way to gain a high level view of why your customers are cancelling the subcription to your product or service.

        Add a set of churn reason codes to be displayed in-app and/or the Chargify Billing Portal. As your subscribers decide to cancel their subscription, learn why they decided to cancel. 

        ## ReasonCode Documentation

        Full documentation on how Reason Codes operate within Chargify can be located under the following links.

        [Churn Reason Codes](http://help.chargify.com/subscriptions/cancellation.html#churn-reason-codes)
      public: true
    components-on-off-intro:
      id: components-on-off-intro
      name: Components On/Off Intro
      content: |-
        ## Components: On/Off Toggling

        The Chargify API allows you to toggle an on/off component by posting JSON or XML. This is helpful in the case where the subscription has already been created. By this method, you are recording the usage of this on/off component against the subscription.

        ## Proration Schemes

        Each time you record an allocation, it's important to focus on the proration scheme type.

        If you do not specify a proration scheme, the default scheme for the Site will be used. This setting is accessable in-app via Settings-->Components

        | Proration Scheme             | Definition                                                                                                                                                                      |
        |------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | `prorate-delay-capture`      | A charge is added for the prorated amount due, but the card is not charged until the subscription’s next renewal                                                                |
        | `prorate-attempt-capture`    | A charge is added and we attempt to charge the credit card on file. If,it fails, the charge will be accrued until the next renewal.                                             |
        | `full-price-delay-capture`   | A charge is added for the full price of the component change, but the card is not charged until the subscription’s next renewal.                                                |
        | `full-price-attempt-capture` | A charge is added for the full price of the component change, and we,attempt to charge the credit card on file. If it fails, the charge will,be accrued until the next renewal. |
        | `no-prorate`                 | No proration is applied.                                                                                                                                                                      |


        ## On/Off Components Documentation

        Full documentation on how to create Components in the Chargify UI can be located [here](https://help.chargify.com/products/product-components.html#onoff-components). Additionally, for information on how to record component usage against a subscription, please see the following resources:

        + [Recording On/Off Components](https://help.chargify.com/subscriptions/setting-component-allocations.html#reporting-onoff-component-status)
        + [Recording component usage against a subscription](https://help.chargify.com/subscriptions/subscription-summary.html#components-line-items)
      public: true
    components-price-point-intro:
      id: components-price-point-intro
      name: Components Price Point Intro
      content: |-
        ## Component Price Points Documentation

        For more information on how price points work for setting up products, please see our documentation [here.](https://help.chargify.com/products/product-components.html#price-points)

        Additionally, you will want to view our section on recording price points in our application for a better understanding of how this feature works [here.](https://help.chargify.com/subscriptions/setting-component-allocations.html#updating-the-price-point)

        ## Proration Schemes

        Each time you record an allocation, it's important to focus on the proration scheme type.

        If you do not specify a proration scheme, the default scheme for the Site will be used. This setting is accessable in-app via Settings-->Components

        | Proration Scheme             | Definition                                                                                                                                                                      |
        |------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        |                              |                                                                                                                                                                                 |
        | `prorate-delay-capture`      | A charge is added for the prorated amount due, but the card is not charged until the subscription’s next renewal                                                                |
        | `prorate-attempt-capture`    | A charge is added and we attempt to charge the credit card on file. If,it fails, the charge will be accrued until the next renewal.                                             |
        | `full-price-delay-capture`   | A charge is added for the full price of the component change, but the card is not charged until the subscription’s next renewal.                                                |
        | `full-price-attempt-capture` | A charge is added for the full price of the component change, and we,attempt to charge the credit card on file. If it fails, the charge will,be accrued until the next renewal. |
        | `no-prorate`                 | No proration is applied.                                                                                                                                                                      |
      public: true
    component-line-items:
      id: component-line-items
      name: Component Line Items
      content: |-
        ## Component Line-Item Input Attributes

        The attributes listed in the following sections should be nested under the `component` key, e.g. the following JSON could be used to update the `allocated_quantity` on a Component Line-Item:

        ```
          {
            "component": {
              "allocated_quantity": 23
            }
          }
        ```

        ### Inputs for Quantity-Based Line-Items

        + `allocated_quantity` The current allocation for the component on the given subscription.

        For more, see also [API: Quantity Component Allocations](#docTextSection:ySykKNKfEXRJ5CgTK).

        ### Inputs for On/Off Line-Items

        + `allocated_quantity` Use `1` for on and `0` for off.

        ### Inputs for Metered Line-Items

        The Metered Component usages for a subscription are managed through the [Metered Usage API](#docTextSection:Qw7A6cxbCxbSkZrnM)

        ## Component Line-Item Output Attributes

        All component line-item kinds share the following attributes:

        + `subscription_id`
        + `component_id`
        + `name`
        + `unit_name`
        + `kind`

        Then, each line-item has an indication of the current allocation on the given subscription, depending on the `kind`:

        | allocated_quantity | Provided when kind is `quantity_based_componen`t or on_off_component (`1` for on and `0` for off)   |
        |--------------------|-----------------------------------------------------------------------------------------------------|
        | unit_balance       | Provided when kind is `metered_component` and gives the TOTAL of all reported usages for the period |
      public: true
    coupons-intro:
      id: coupons-intro
      name: Coupons Intro
      content: |-
        ## Coupons Intro

        Coupons can be administered in the Admin Interface ([see Coupons](https://help.chargify.com/products/product-coupons.html)) or via the API.

        ## Coupon Documentation

        Full documentation on how to create Coupons in the Chargify UI can be located [here](https://help.chargify.com/products/product-coupons.html).

        Additionally, for documentation on how to apply a coupon to a Subscription within the Chargify UI, please see our documentation [here](https://help.chargify.com/subscriptions/subscription-summary.html#coupon).

        ## Coupon Attributes

        When creating a coupon, you must specify a product family using the `product_family_id`. **If no `product_family_id` is passed, the first product family available is used.** You will also need to formulate your URL to cite the Product Family ID in your request.
      public: true
    subscription-output-attributes:
      id: subscription-output-attributes
      name: Subscription Output Attributes
      content: |-
        ## Subscription Output Attributes

        The following attributes are returned on a subscription read/list operation.

        | id                        | The subscription unique id within Chargify.                                                                                                                                                                                                                                                                                                                                                                                                                        |
        |---------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | state                     | The current state of the subscription. Please see the documentation for,[Subscription,States](https://help.chargify.com/subscriptions/subscription-states.html)                                                                                                                                                                                                                                                                                                    |
        | trial_started_at          | Timestamp for when the trial period (if any) began                                                                                                                                                                                                                                                                                                                                                                                                                 |
        | trial_ended_at            | Timestamp for when the trial period (if any) ended                                                                                                                                                                                                                                                                                                                                                                                                                 |
        | activated_at              | (Read Only) Timestamp for when the subscription began (i.e. when it came out of trial, or when it began in the case of no trial)                                                                                                                                                                                                                                                                                                                                   |
        | created_at                | The creation date for this subscription                                                                                                                                                                                                                                                                                                                                                                                                                            |
        | updated_at                | The date of last update for this subscription                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | expires_at                | Timestamp giving the expiration date of this subscription (if any)                                                                                                                                                                                                                                                                                                                                                                                                 |
        | balance_in_cents          | Gives the current outstanding subscription balance in the number of cents.                                                                                                                                                                                                                                                                                                                                                                                         |
        | current_period_ends_at    | Timestamp relating to the end of the current (recurring) period (i.e.,when the next regularly scheduled attempted charge will occur)                                                                                                                                                                                                                                                                                                                               |
        | next_assessment_at        | Timestamp that indicates when capture of payment will be tried or,retried. This value will usually track the `current_period_ends_at`, but,will diverge if a renewal payment fails and must be retried. In that,case, the `current_period_ends_at` will advance to the end of the next,period (time doesn’t stop because a payment was missed) but the,`next_assessment_at` will be scheduled for the auto-retry time (i.e. 24,hours in the future, in some cases) |
        | canceled_at               | The timestamp of the most recent cancellation                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | cancellation_message      | Seller-provided reason for, or note about, the cancellation.                                                                                                                                                                                                                                                                                                                                                                                                       |
        | next_product_id           | If a delayed product change is scheduled, the ID of the product that the subscription will be changed to at the next renewal.                                                                                                                                                                                                                                                                                                                                      |
        | cancel_at_end_of_period   | Whether or not the subscription will (or has) canceled at the end of the period.                                                                                                                                                                                                                                                                                                                                                                                   |
        | payment_collection_method | The type of payment collection to be used in the subscription. May be automatic, or invoice.                                                                                                                                                                                                                                                                                                                                                                       |
        | snap_day                  | The day of the month that the subscription will charge according to calendar billing rules, if used.                                                                                                                                                                                                                                                                                                                                                               |
        | cancellation_method       | The process used to cancel the subscription, if the subscription has been canceled. Can be one of `nil`, `merchant_ui`, `merchant_api`, `dunning`, or `billing_portal`. It is `nil` if the subscription's state is not `canceled`.                                                                                                                                                                                                                                 |
        | current_period_started_at | Timestamp relating to the start of the current (recurring) period                                                                                                                                                                                                                                                                                                                                                                                                  |
        | previous_state            | Only valid for webhook payloads The previous state for webhooks that have indicated a change in state. For normal API calls, this will always be the same as the state (current state)                                                                                                                                                                                                                                                                             |
        | signup_payment_id         | The ID of the transaction that generated the revenue                                                                                                                                                                                                                                                                                                                                                                                                               |
        | signup_revenue            | The revenue, formatted as a string of decimal separated dollars and,cents, from the subscription signup ($50.00 would be formatted as,`50.00`)                                                                                                                                                                                                                                                                                                                     |
        | delayed_cancel_at         | Timestamp for when the subscription is currently set to cancel.                                                                                                                                                                                                                                                                                                                                                                                                    |
        | coupon_code               | The coupon code of the coupon currently applied to the subscription                                                                                                                                                                                                                                                                                                                                                                                                |
        | total_revenue_in_cents    | Gives the total revenue from the subscription in the number of cents.                                                                                                                                                                                                                                                                                                                                                                                              |
        | product_price_in_cents    | (Added Nov 5 2013) The recurring amount of the product (and version),currently subscribed. NOTE: this may differ from the current price of,the product, if you’ve changed the price of the product but haven’t,moved this subscription to a newer version.                                                                                                                                                                                                         |
        | product_version_number    | (Added Nov 5 2013) The version of the product currently subscribed.,NOTE: we have not exposed versions (yet) elsewhere in the API, but if,you change the price of your product the versions will increment and existing subscriptions will remain on prior versions (by default, to support price grandfathering).                                                                                                                                                 |
        | automatically_resume_at   | The date the subscription is scheduled to automatically resume from the on_hold state.                                                                                                                                                                                                                                                                                                                                                                             |

        ### Credit Card Attributes

        + `credit_card` Nested credit card attributes, if payment profile is a credit_card

        | billing_address      | The current billing street address for the card                                                                                                                                                                                                 |
        |----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | billing_address_2    | The current billing street address, second line, for the card                                                                                                                                                                                   |
        | billing_city         | The current billing address city for the card                                                                                                                                                                                                   |
        | billing_state        | The current billing address state for the card                                                                                                                                                                                                  |
        | billing_zip          | The current billing address zip code for the card                                                                                                                                                                                               |
        | billing_country      | The current billing address country for the card                                                                                                                                                                                                |
        | card_type            | The type of card used. Can be one of the following: `bogus`, `visa`, `master`, `discover`, `american_express`, `diners_club`, `jcb`, `switch`, `solo`, `dankort`, `maestro`, `forbrugsforeningen`, `laser`                                      |
        | current_vault        | The vault that stores the payment profile with the provided `vault_token`. May be one of the following: `authorizenet`, `trust_commerce`, `payment_express`, `beanstream`, `braintree_blue`, `paypal`, `quickpay`, `eway`, `stripe`, `wirecard` |
        | customer_id          | The Chargify-assigned id for the customer record to which the card belongs                                                                                                                                                                      |
        | customer_vault_token | (only for Authorize.Net CIM storage): the `customerProfileId` for the owner of the `customerPaymentProfileId` provided as the `vault_token`                                                                                                     |
        | expiration_month     | An integer representing the expiration month of the card(1 – 12)                                                                                                                                                                                |
        | expiration_year      | An integer representing the 4-digit expiration year of the card(i.e. ‘2012’)                                                                                                                                                                    |
        | id                   | The Chargify-assigned ID of the stored card. This value can be used as an input to `payment_profile_id` when creating a subscription, in order to re-use a stored payment profile for the same customer                                         |
        | first_name           | The first name of the card holder                                                                                                                                                                                                               |
        | last_name            | The last name of the card holder                                                                                                                                                                                                                |
        | masked_card_number   | A string representation of the credit card number with all but the last 4 digits masked with X’s (i.e. ‘XXXX-XXXX-XXXX-1234’)                                                                                                                   |
        | vault_token          | The “token” provided by your vault storage for an already stored payment profile                                                                                                                                                                |

        ### Bank Account Attributes

        + `bank_account` Nested bank account attributes, if payment profile is a `bank_account`

        | bank_account_holder_type   | Defaults to personal                                                                                                                                                                                            |
        |----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | bank_account_type          | Defaults to checking                                                                                                                                                                                            |
        | bank_name                  | The bank where the account resides                                                                                                                                                                              |
        | billing_address            | The current billing street address for the bank account                                                                                                                                                         |
        | billing_address_2          | The current billing street address, second line, for the bank account                                                                                                                                           |
        | billing_city               | The current billing address city for the bank account                                                                                                                                                           |
        | billing_state              | The current billing address state for the bank account                                                                                                                                                          |
        | billing_zip                | The current billing address zip code for the bank account                                                                                                                                                       |
        | billing_country            | The current billing address country for the bank account                                                                                                                                                        |
        | current_vault              | The vault that stores the payment profile with the provided `vault_token`. As of this time, will only be `authorizenet`                                                                                         |
        | customer_id                | The Chargify-assigned id for the customer record to which the bank account belongs                                                                                                                              |
        | customer_vault_token       | (only for Authorize.Net CIM storage): the `customerProfileId` for the owner of the `customerPaymentProfileId` provided as the `vault_token`                                                                     |
        | first_name                 | The first name of the bank account holder                                                                                                                                                                       |
        | last_name                  | The last name of the bank account holder                                                                                                                                                                        |
        | id                         | The Chargify-assigned ID of the stored bank account. This value can be used as an input to `payment_profile_id` when creating a subscription, in order to re-use a stored payment profile for the same customer |
        | masked_bank_account_number | A string representation of the stored bank account number with all but the last 4 digits marked with X’s (i.e. ‘XXXXXXX1111’)                                                                                   |
        | masked_bank_routing_number | A string representation of the stored bank routing number with all but the last 4 digits marked with X’s (i.e. ‘XXXXXXX1111’). `payment_type` will be bank_account                                              |
        | vault_token                | The “token” provided by your vault storage for an already stored payment profile                                                                                                                                |
      public: true
  mock:
    enabled: false
    dynamic: false
x-tests: {}
